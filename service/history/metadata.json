{
    "lookup": {
      "types": [
        {
          "id": "0",
          "type": {
            "path": [
              "sp_core",
              "crypto",
              "AccountId32"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "1",
                    "typeName": "[u8; 32]",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "1",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Array": {
                "len": "32",
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "2",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Primitive": "U8"
            },
            "docs": []
          }
        },
        {
          "id": "3",
          "type": {
            "path": [
              "frame_system",
              "AccountInfo"
            ],
            "params": [
              {
                "name": "Nonce",
                "type": "4"
              },
              {
                "name": "AccountData",
                "type": "5"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "nonce",
                    "type": "4",
                    "typeName": "Nonce",
                    "docs": []
                  },
                  {
                    "name": "consumers",
                    "type": "4",
                    "typeName": "RefCount",
                    "docs": []
                  },
                  {
                    "name": "providers",
                    "type": "4",
                    "typeName": "RefCount",
                    "docs": []
                  },
                  {
                    "name": "sufficients",
                    "type": "4",
                    "typeName": "RefCount",
                    "docs": []
                  },
                  {
                    "name": "data",
                    "type": "5",
                    "typeName": "AccountData",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "4",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Primitive": "U32"
            },
            "docs": []
          }
        },
        {
          "id": "5",
          "type": {
            "path": [
              "pallet_balances",
              "types",
              "AccountData"
            ],
            "params": [
              {
                "name": "Balance",
                "type": "6"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "free",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "reserved",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "frozen",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "flags",
                    "type": "7",
                    "typeName": "ExtraFlags",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "6",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Primitive": "U128"
            },
            "docs": []
          }
        },
        {
          "id": "7",
          "type": {
            "path": [
              "pallet_balances",
              "types",
              "ExtraFlags"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "6",
                    "typeName": "u128",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "8",
          "type": {
            "path": [
              "frame_support",
              "dispatch",
              "PerDispatchClass"
            ],
            "params": [
              {
                "name": "T",
                "type": "9"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "normal",
                    "type": "9",
                    "typeName": "T",
                    "docs": []
                  },
                  {
                    "name": "operational",
                    "type": "9",
                    "typeName": "T",
                    "docs": []
                  },
                  {
                    "name": "mandatory",
                    "type": "9",
                    "typeName": "T",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "9",
          "type": {
            "path": [
              "sp_weights",
              "weight_v2",
              "Weight"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "ref_time",
                    "type": "10",
                    "typeName": "u64",
                    "docs": []
                  },
                  {
                    "name": "proof_size",
                    "type": "10",
                    "typeName": "u64",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "10",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Compact": {
                "type": "11"
              }
            },
            "docs": []
          }
        },
        {
          "id": "11",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Primitive": "U64"
            },
            "docs": []
          }
        },
        {
          "id": "12",
          "type": {
            "path": [
              "primitive_types",
              "H256"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "1",
                    "typeName": "[u8; 32]",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "13",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "14",
          "type": {
            "path": [
              "sp_runtime",
              "generic",
              "digest",
              "Digest"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "logs",
                    "type": "15",
                    "typeName": "Vec<DigestItem>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "15",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "16"
              }
            },
            "docs": []
          }
        },
        {
          "id": "16",
          "type": {
            "path": [
              "sp_runtime",
              "generic",
              "digest",
              "DigestItem"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "PreRuntime",
                    "fields": [
                      {
                        "name": null,
                        "type": "17",
                        "typeName": "ConsensusEngineId",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "Consensus",
                    "fields": [
                      {
                        "name": null,
                        "type": "17",
                        "typeName": "ConsensusEngineId",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Seal",
                    "fields": [
                      {
                        "name": null,
                        "type": "17",
                        "typeName": "ConsensusEngineId",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Other",
                    "fields": [
                      {
                        "name": null,
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "RuntimeEnvironmentUpdated",
                    "fields": [],
                    "index": "8",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "17",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Array": {
                "len": "4",
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "18",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "19"
              }
            },
            "docs": []
          }
        },
        {
          "id": "19",
          "type": {
            "path": [
              "frame_system",
              "EventRecord"
            ],
            "params": [
              {
                "name": "E",
                "type": "20"
              },
              {
                "name": "T",
                "type": "12"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "phase",
                    "type": "125",
                    "typeName": "Phase",
                    "docs": []
                  },
                  {
                    "name": "event",
                    "type": "20",
                    "typeName": "E",
                    "docs": []
                  },
                  {
                    "name": "topics",
                    "type": "126",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "20",
          "type": {
            "path": [
              "container_chain_template_simple_runtime",
              "RuntimeEvent"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "System",
                    "fields": [
                      {
                        "name": null,
                        "type": "21",
                        "typeName": "frame_system::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ParachainSystem",
                    "fields": [
                      {
                        "name": null,
                        "type": "31",
                        "typeName": "cumulus_pallet_parachain_system::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Sudo",
                    "fields": [
                      {
                        "name": null,
                        "type": "33",
                        "typeName": "pallet_sudo::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Utility",
                    "fields": [
                      {
                        "name": null,
                        "type": "37",
                        "typeName": "pallet_utility::Event",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Proxy",
                    "fields": [
                      {
                        "name": null,
                        "type": "38",
                        "typeName": "pallet_proxy::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "Migrations",
                    "fields": [
                      {
                        "name": null,
                        "type": "41",
                        "typeName": "pallet_migrations::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "MaintenanceMode",
                    "fields": [
                      {
                        "name": null,
                        "type": "42",
                        "typeName": "pallet_maintenance_mode::Event",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "TxPause",
                    "fields": [
                      {
                        "name": null,
                        "type": "43",
                        "typeName": "pallet_tx_pause::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "Balances",
                    "fields": [
                      {
                        "name": null,
                        "type": "46",
                        "typeName": "pallet_balances::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "TransactionPayment",
                    "fields": [
                      {
                        "name": null,
                        "type": "48",
                        "typeName": "pallet_transaction_payment::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "Multisig",
                    "fields": [
                      {
                        "name": null,
                        "type": "49",
                        "typeName": "pallet_multisig::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "AuthoritiesNoting",
                    "fields": [
                      {
                        "name": null,
                        "type": "51",
                        "typeName": "pallet_cc_authorities_noting::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "50",
                    "docs": []
                  },
                  {
                    "name": "XcmpQueue",
                    "fields": [
                      {
                        "name": null,
                        "type": "56",
                        "typeName": "cumulus_pallet_xcmp_queue::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "70",
                    "docs": []
                  },
                  {
                    "name": "CumulusXcm",
                    "fields": [
                      {
                        "name": null,
                        "type": "57",
                        "typeName": "cumulus_pallet_xcm::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "71",
                    "docs": []
                  },
                  {
                    "name": "DmpQueue",
                    "fields": [
                      {
                        "name": null,
                        "type": "60",
                        "typeName": "cumulus_pallet_dmp_queue::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "72",
                    "docs": []
                  },
                  {
                    "name": "PolkadotXcm",
                    "fields": [
                      {
                        "name": null,
                        "type": "61",
                        "typeName": "pallet_xcm::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "73",
                    "docs": []
                  },
                  {
                    "name": "MessageQueue",
                    "fields": [
                      {
                        "name": null,
                        "type": "115",
                        "typeName": "pallet_message_queue::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "74",
                    "docs": []
                  },
                  {
                    "name": "ForeignAssets",
                    "fields": [
                      {
                        "name": null,
                        "type": "118",
                        "typeName": "pallet_assets::Event<Runtime, pallet_assets::Instance1>",
                        "docs": []
                      }
                    ],
                    "index": "75",
                    "docs": []
                  },
                  {
                    "name": "ForeignAssetsCreator",
                    "fields": [
                      {
                        "name": null,
                        "type": "119",
                        "typeName": "pallet_foreign_asset_creator::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "76",
                    "docs": []
                  },
                  {
                    "name": "AssetRate",
                    "fields": [
                      {
                        "name": null,
                        "type": "120",
                        "typeName": "pallet_asset_rate::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "77",
                    "docs": []
                  },
                  {
                    "name": "XcmExecutorUtils",
                    "fields": [
                      {
                        "name": null,
                        "type": "122",
                        "typeName": "pallet_xcm_executor_utils::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "78",
                    "docs": []
                  },
                  {
                    "name": "RootTesting",
                    "fields": [
                      {
                        "name": null,
                        "type": "123",
                        "typeName": "pallet_root_testing::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "100",
                    "docs": []
                  },
                  {
                    "name": "Anchor",
                    "fields": [
                      {
                        "name": null,
                        "type": "124",
                        "typeName": "pallet_anchor::Event<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "111",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "21",
          "type": {
            "path": [
              "frame_system",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ExtrinsicSuccess",
                    "fields": [
                      {
                        "name": "dispatch_info",
                        "type": "22",
                        "typeName": "DispatchInfo",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "An extrinsic completed successfully."
                    ]
                  },
                  {
                    "name": "ExtrinsicFailed",
                    "fields": [
                      {
                        "name": "dispatch_error",
                        "type": "25",
                        "typeName": "DispatchError",
                        "docs": []
                      },
                      {
                        "name": "dispatch_info",
                        "type": "22",
                        "typeName": "DispatchInfo",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "An extrinsic failed."
                    ]
                  },
                  {
                    "name": "CodeUpdated",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "`:code` was updated."
                    ]
                  },
                  {
                    "name": "NewAccount",
                    "fields": [
                      {
                        "name": "account",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "A new account was created."
                    ]
                  },
                  {
                    "name": "KilledAccount",
                    "fields": [
                      {
                        "name": "account",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "An account was reaped."
                    ]
                  },
                  {
                    "name": "Remarked",
                    "fields": [
                      {
                        "name": "sender",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "hash",
                        "type": "12",
                        "typeName": "T::Hash",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "On on-chain remark happened."
                    ]
                  },
                  {
                    "name": "UpgradeAuthorized",
                    "fields": [
                      {
                        "name": "code_hash",
                        "type": "12",
                        "typeName": "T::Hash",
                        "docs": []
                      },
                      {
                        "name": "check_version",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "An upgrade was authorized."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Event for the System pallet."
            ]
          }
        },
        {
          "id": "22",
          "type": {
            "path": [
              "frame_support",
              "dispatch",
              "DispatchInfo"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "weight",
                    "type": "9",
                    "typeName": "Weight",
                    "docs": []
                  },
                  {
                    "name": "class",
                    "type": "23",
                    "typeName": "DispatchClass",
                    "docs": []
                  },
                  {
                    "name": "pays_fee",
                    "type": "24",
                    "typeName": "Pays",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "23",
          "type": {
            "path": [
              "frame_support",
              "dispatch",
              "DispatchClass"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Normal",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Operational",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Mandatory",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "24",
          "type": {
            "path": [
              "frame_support",
              "dispatch",
              "Pays"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Yes",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "No",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "25",
          "type": {
            "path": [
              "sp_runtime",
              "DispatchError"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Other",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "CannotLookup",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "BadOrigin",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Module",
                    "fields": [
                      {
                        "name": null,
                        "type": "26",
                        "typeName": "ModuleError",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "ConsumerRemaining",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "NoProviders",
                    "fields": [],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "TooManyConsumers",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "Token",
                    "fields": [
                      {
                        "name": null,
                        "type": "27",
                        "typeName": "TokenError",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "Arithmetic",
                    "fields": [
                      {
                        "name": null,
                        "type": "28",
                        "typeName": "ArithmeticError",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "Transactional",
                    "fields": [
                      {
                        "name": null,
                        "type": "29",
                        "typeName": "TransactionalError",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "Exhausted",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "Corruption",
                    "fields": [],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "Unavailable",
                    "fields": [],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "RootNotAllowed",
                    "fields": [],
                    "index": "13",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "26",
          "type": {
            "path": [
              "sp_runtime",
              "ModuleError"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "index",
                    "type": "2",
                    "typeName": "u8",
                    "docs": []
                  },
                  {
                    "name": "error",
                    "type": "17",
                    "typeName": "[u8; MAX_MODULE_ERROR_ENCODED_SIZE]",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "27",
          "type": {
            "path": [
              "sp_runtime",
              "TokenError"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "FundsUnavailable",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "OnlyProvider",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "BelowMinimum",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "CannotCreate",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "UnknownAsset",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Frozen",
                    "fields": [],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Unsupported",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "CannotCreateHold",
                    "fields": [],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "NotExpendable",
                    "fields": [],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "Blocked",
                    "fields": [],
                    "index": "9",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "28",
          "type": {
            "path": [
              "sp_arithmetic",
              "ArithmeticError"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Underflow",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Overflow",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "DivisionByZero",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "29",
          "type": {
            "path": [
              "sp_runtime",
              "TransactionalError"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "LimitReached",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "NoLayer",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "30",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Primitive": "Bool"
            },
            "docs": []
          }
        },
        {
          "id": "31",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ValidationFunctionStored",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The validation function has been scheduled to apply."
                    ]
                  },
                  {
                    "name": "ValidationFunctionApplied",
                    "fields": [
                      {
                        "name": "relay_chain_block_num",
                        "type": "4",
                        "typeName": "RelayChainBlockNumber",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "The validation function was applied as of the contained relay chain block number."
                    ]
                  },
                  {
                    "name": "ValidationFunctionDiscarded",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The relay-chain aborted the upgrade process."
                    ]
                  },
                  {
                    "name": "DownwardMessagesReceived",
                    "fields": [
                      {
                        "name": "count",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "Some downward messages have been received and will be processed."
                    ]
                  },
                  {
                    "name": "DownwardMessagesProcessed",
                    "fields": [
                      {
                        "name": "weight_used",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      },
                      {
                        "name": "dmq_head",
                        "type": "12",
                        "typeName": "relay_chain::Hash",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "Downward messages were processed using the given weight."
                    ]
                  },
                  {
                    "name": "UpwardMessageSent",
                    "fields": [
                      {
                        "name": "message_hash",
                        "type": "32",
                        "typeName": "Option<XcmHash>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "An upward message was sent to the relay chain."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "32",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "1"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "33",
          "type": {
            "path": [
              "pallet_sudo",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Sudid",
                    "fields": [
                      {
                        "name": "sudo_result",
                        "type": "34",
                        "typeName": "DispatchResult",
                        "docs": [
                          "The result of the call made by the sudo user."
                        ]
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "A sudo call just took place."
                    ]
                  },
                  {
                    "name": "KeyChanged",
                    "fields": [
                      {
                        "name": "old",
                        "type": "36",
                        "typeName": "Option<T::AccountId>",
                        "docs": [
                          "The old sudo key (if one was previously set)."
                        ]
                      },
                      {
                        "name": "new",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": [
                          "The new sudo key (if one was set)."
                        ]
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "The sudo key has been updated."
                    ]
                  },
                  {
                    "name": "KeyRemoved",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The key was permanently removed."
                    ]
                  },
                  {
                    "name": "SudoAsDone",
                    "fields": [
                      {
                        "name": "sudo_result",
                        "type": "34",
                        "typeName": "DispatchResult",
                        "docs": [
                          "The result of the call made by the sudo user."
                        ]
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "A [sudo_as](Pallet::sudo_as) call just took place."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "34",
          "type": {
            "path": [
              "Result"
            ],
            "params": [
              {
                "name": "T",
                "type": "35"
              },
              {
                "name": "E",
                "type": "25"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Ok",
                    "fields": [
                      {
                        "name": null,
                        "type": "35",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Err",
                    "fields": [
                      {
                        "name": null,
                        "type": "25",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "35",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": []
            },
            "docs": []
          }
        },
        {
          "id": "36",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "0"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "0",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "37",
          "type": {
            "path": [
              "pallet_utility",
              "pallet",
              "Event"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "BatchInterrupted",
                    "fields": [
                      {
                        "name": "index",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "error",
                        "type": "25",
                        "typeName": "DispatchError",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "Batch of dispatches did not complete fully. Index of first failing dispatch given, as",
                      "well as the error."
                    ]
                  },
                  {
                    "name": "BatchCompleted",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Batch of dispatches completed fully with no error."
                    ]
                  },
                  {
                    "name": "BatchCompletedWithErrors",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Batch of dispatches completed but has errors."
                    ]
                  },
                  {
                    "name": "ItemCompleted",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "A single item within a Batch of dispatches has completed with no error."
                    ]
                  },
                  {
                    "name": "ItemFailed",
                    "fields": [
                      {
                        "name": "error",
                        "type": "25",
                        "typeName": "DispatchError",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "A single item within a Batch of dispatches has completed with error."
                    ]
                  },
                  {
                    "name": "DispatchedAs",
                    "fields": [
                      {
                        "name": "result",
                        "type": "34",
                        "typeName": "DispatchResult",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "A call was dispatched."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "38",
          "type": {
            "path": [
              "pallet_proxy",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ProxyExecuted",
                    "fields": [
                      {
                        "name": "result",
                        "type": "34",
                        "typeName": "DispatchResult",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "A proxy was executed correctly, with the given."
                    ]
                  },
                  {
                    "name": "PureCreated",
                    "fields": [
                      {
                        "name": "pure",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "proxy_type",
                        "type": "39",
                        "typeName": "T::ProxyType",
                        "docs": []
                      },
                      {
                        "name": "disambiguation_index",
                        "type": "40",
                        "typeName": "u16",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "A pure account has been created by new proxy with given",
                      "disambiguation index and proxy type."
                    ]
                  },
                  {
                    "name": "Announced",
                    "fields": [
                      {
                        "name": "real",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "proxy",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "12",
                        "typeName": "CallHashOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "An announcement was placed to make a call in the future."
                    ]
                  },
                  {
                    "name": "ProxyAdded",
                    "fields": [
                      {
                        "name": "delegator",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "delegatee",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "proxy_type",
                        "type": "39",
                        "typeName": "T::ProxyType",
                        "docs": []
                      },
                      {
                        "name": "delay",
                        "type": "4",
                        "typeName": "BlockNumberFor<T>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "A proxy was added."
                    ]
                  },
                  {
                    "name": "ProxyRemoved",
                    "fields": [
                      {
                        "name": "delegator",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "delegatee",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "proxy_type",
                        "type": "39",
                        "typeName": "T::ProxyType",
                        "docs": []
                      },
                      {
                        "name": "delay",
                        "type": "4",
                        "typeName": "BlockNumberFor<T>",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "A proxy was removed."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "39",
          "type": {
            "path": [
              "container_chain_template_simple_runtime",
              "ProxyType"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Any",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "NonTransfer",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Governance",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "CancelProxy",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Balances",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "40",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Primitive": "U16"
            },
            "docs": []
          }
        },
        {
          "id": "41",
          "type": {
            "path": [
              "pallet_migrations",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "RuntimeUpgradeStarted",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Runtime upgrade started"
                    ]
                  },
                  {
                    "name": "RuntimeUpgradeCompleted",
                    "fields": [
                      {
                        "name": "weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "Runtime upgrade completed"
                    ]
                  },
                  {
                    "name": "MigrationStarted",
                    "fields": [
                      {
                        "name": "migration_name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "Migration started"
                    ]
                  },
                  {
                    "name": "MigrationCompleted",
                    "fields": [
                      {
                        "name": "migration_name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "consumed_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "Migration completed"
                    ]
                  },
                  {
                    "name": "FailedToSuspendIdleXcmExecution",
                    "fields": [
                      {
                        "name": "error",
                        "type": "25",
                        "typeName": "DispatchError",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "XCM execution suspension failed with inner error"
                    ]
                  },
                  {
                    "name": "FailedToResumeIdleXcmExecution",
                    "fields": [
                      {
                        "name": "error",
                        "type": "25",
                        "typeName": "DispatchError",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "XCM execution resume failed with inner error"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "42",
          "type": {
            "path": [
              "pallet_maintenance_mode",
              "pallet",
              "Event"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "EnteredMaintenanceMode",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The chain was put into Maintenance Mode"
                    ]
                  },
                  {
                    "name": "NormalOperationResumed",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "The chain returned to its normal operating state"
                    ]
                  },
                  {
                    "name": "FailedToSuspendIdleXcmExecution",
                    "fields": [
                      {
                        "name": "error",
                        "type": "25",
                        "typeName": "DispatchError",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "The call to suspend on_idle XCM execution failed with inner error"
                    ]
                  },
                  {
                    "name": "FailedToResumeIdleXcmExecution",
                    "fields": [
                      {
                        "name": "error",
                        "type": "25",
                        "typeName": "DispatchError",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "The call to resume on_idle XCM execution failed with inner error"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "43",
          "type": {
            "path": [
              "pallet_tx_pause",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "CallPaused",
                    "fields": [
                      {
                        "name": "full_name",
                        "type": "44",
                        "typeName": "RuntimeCallNameOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "This pallet, or a specific call is now paused."
                    ]
                  },
                  {
                    "name": "CallUnpaused",
                    "fields": [
                      {
                        "name": "full_name",
                        "type": "44",
                        "typeName": "RuntimeCallNameOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "This pallet, or a specific call is now unpaused."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "44",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "45",
                "45"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "45",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "2"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "46",
          "type": {
            "path": [
              "pallet_balances",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              },
              {
                "name": "I",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Endowed",
                    "fields": [
                      {
                        "name": "account",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "free_balance",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "An account was created with some free balance."
                    ]
                  },
                  {
                    "name": "DustLost",
                    "fields": [
                      {
                        "name": "account",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "An account was removed whose balance was non-zero but below ExistentialDeposit,",
                      "resulting in an outright loss."
                    ]
                  },
                  {
                    "name": "Transfer",
                    "fields": [
                      {
                        "name": "from",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "to",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "Transfer succeeded."
                    ]
                  },
                  {
                    "name": "BalanceSet",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "free",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "A balance was set by root."
                    ]
                  },
                  {
                    "name": "Reserved",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "Some balance was reserved (moved from free to reserved)."
                    ]
                  },
                  {
                    "name": "Unreserved",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "Some balance was unreserved (moved from reserved to free)."
                    ]
                  },
                  {
                    "name": "ReserveRepatriated",
                    "fields": [
                      {
                        "name": "from",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "to",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      },
                      {
                        "name": "destination_status",
                        "type": "47",
                        "typeName": "Status",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "Some balance was moved from the reserve of the first account to the second account.",
                      "Final argument indicates the destination balance type."
                    ]
                  },
                  {
                    "name": "Deposit",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": [
                      "Some amount was deposited (e.g. for transaction fees)."
                    ]
                  },
                  {
                    "name": "Withdraw",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": [
                      "Some amount was withdrawn from the account (e.g. for transaction fees)."
                    ]
                  },
                  {
                    "name": "Slashed",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "Some amount was removed from the account (e.g. for misbehavior)."
                    ]
                  },
                  {
                    "name": "Minted",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": [
                      "Some amount was minted into an account."
                    ]
                  },
                  {
                    "name": "Burned",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": [
                      "Some amount was burned from an account."
                    ]
                  },
                  {
                    "name": "Suspended",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": [
                      "Some amount was suspended from an account (it can be restored later)."
                    ]
                  },
                  {
                    "name": "Restored",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": [
                      "Some amount was restored into an account."
                    ]
                  },
                  {
                    "name": "Upgraded",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": [
                      "An account was upgraded."
                    ]
                  },
                  {
                    "name": "Issued",
                    "fields": [
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": [
                      "Total issuance was increased by `amount`, creating a credit to be balanced."
                    ]
                  },
                  {
                    "name": "Rescinded",
                    "fields": [
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": [
                      "Total issuance was decreased by `amount`, creating a debt to be balanced."
                    ]
                  },
                  {
                    "name": "Locked",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": [
                      "Some balance was locked."
                    ]
                  },
                  {
                    "name": "Unlocked",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": [
                      "Some balance was unlocked."
                    ]
                  },
                  {
                    "name": "Frozen",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": [
                      "Some balance was frozen."
                    ]
                  },
                  {
                    "name": "Thawed",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "20",
                    "docs": [
                      "Some balance was thawed."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "47",
          "type": {
            "path": [
              "frame_support",
              "traits",
              "tokens",
              "misc",
              "BalanceStatus"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Free",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Reserved",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "48",
          "type": {
            "path": [
              "pallet_transaction_payment",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "TransactionFeePaid",
                    "fields": [
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "actual_fee",
                        "type": "6",
                        "typeName": "BalanceOf<T>",
                        "docs": []
                      },
                      {
                        "name": "tip",
                        "type": "6",
                        "typeName": "BalanceOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "A transaction fee `actual_fee`, of which `tip` was added to the minimum inclusion fee,",
                      "has been paid by `who`."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "49",
          "type": {
            "path": [
              "pallet_multisig",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "NewMultisig",
                    "fields": [
                      {
                        "name": "approving",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "multisig",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "1",
                        "typeName": "CallHash",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "A new multisig operation has begun."
                    ]
                  },
                  {
                    "name": "MultisigApproval",
                    "fields": [
                      {
                        "name": "approving",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "timepoint",
                        "type": "50",
                        "typeName": "Timepoint<BlockNumberFor<T>>",
                        "docs": []
                      },
                      {
                        "name": "multisig",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "1",
                        "typeName": "CallHash",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "A multisig operation has been approved by someone."
                    ]
                  },
                  {
                    "name": "MultisigExecuted",
                    "fields": [
                      {
                        "name": "approving",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "timepoint",
                        "type": "50",
                        "typeName": "Timepoint<BlockNumberFor<T>>",
                        "docs": []
                      },
                      {
                        "name": "multisig",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "1",
                        "typeName": "CallHash",
                        "docs": []
                      },
                      {
                        "name": "result",
                        "type": "34",
                        "typeName": "DispatchResult",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "A multisig operation has been executed."
                    ]
                  },
                  {
                    "name": "MultisigCancelled",
                    "fields": [
                      {
                        "name": "cancelling",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "timepoint",
                        "type": "50",
                        "typeName": "Timepoint<BlockNumberFor<T>>",
                        "docs": []
                      },
                      {
                        "name": "multisig",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "1",
                        "typeName": "CallHash",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "A multisig operation has been cancelled."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "50",
          "type": {
            "path": [
              "pallet_multisig",
              "Timepoint"
            ],
            "params": [
              {
                "name": "BlockNumber",
                "type": "4"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "height",
                    "type": "4",
                    "typeName": "BlockNumber",
                    "docs": []
                  },
                  {
                    "name": "index",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "51",
          "type": {
            "path": [
              "pallet_cc_authorities_noting",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "AuthoritiesInserted",
                    "fields": [
                      {
                        "name": "authorities",
                        "type": "52",
                        "typeName": "Vec<T::AuthorityId>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "Authorities inserted"
                    ]
                  },
                  {
                    "name": "OrchestratorParachainIdUpdated",
                    "fields": [
                      {
                        "name": "new_para_id",
                        "type": "55",
                        "typeName": "ParaId",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "Orchestrator Parachain Id updated"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "52",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "53"
              }
            },
            "docs": []
          }
        },
        {
          "id": "53",
          "type": {
            "path": [
              "nimbus_primitives",
              "nimbus_crypto",
              "Public"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "54",
                    "typeName": "sr25519::Public",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "54",
          "type": {
            "path": [
              "sp_core",
              "sr25519",
              "Public"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "1",
                    "typeName": "[u8; 32]",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "55",
          "type": {
            "path": [
              "polkadot_parachain_primitives",
              "primitives",
              "Id"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "56",
          "type": {
            "path": [
              "cumulus_pallet_xcmp_queue",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "XcmpMessageSent",
                    "fields": [
                      {
                        "name": "message_hash",
                        "type": "1",
                        "typeName": "XcmHash",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "An HRMP message was sent to a sibling parachain."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "57",
          "type": {
            "path": [
              "cumulus_pallet_xcm",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "InvalidFormat",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "Downward message is invalid XCM.",
                      "\\[ id \\]"
                    ]
                  },
                  {
                    "name": "UnsupportedVersion",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "Downward message is unsupported version of XCM.",
                      "\\[ id \\]"
                    ]
                  },
                  {
                    "name": "ExecutedDownward",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "58",
                        "typeName": "Outcome",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "Downward message executed with the given outcome.",
                      "\\[ id, outcome \\]"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "58",
          "type": {
            "path": [
              "xcm",
              "v3",
              "traits",
              "Outcome"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Complete",
                    "fields": [
                      {
                        "name": null,
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Incomplete",
                    "fields": [
                      {
                        "name": null,
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "59",
                        "typeName": "Error",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Error",
                    "fields": [
                      {
                        "name": null,
                        "type": "59",
                        "typeName": "Error",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "59",
          "type": {
            "path": [
              "xcm",
              "v3",
              "traits",
              "Error"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Overflow",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Unimplemented",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "UntrustedReserveLocation",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "UntrustedTeleportLocation",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "LocationFull",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "LocationNotInvertible",
                    "fields": [],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "BadOrigin",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "InvalidLocation",
                    "fields": [],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "AssetNotFound",
                    "fields": [],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "FailedToTransactAsset",
                    "fields": [],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "NotWithdrawable",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "LocationCannotHold",
                    "fields": [],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "ExceedsMaxMessageSize",
                    "fields": [],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "DestinationUnsupported",
                    "fields": [],
                    "index": "13",
                    "docs": []
                  },
                  {
                    "name": "Transport",
                    "fields": [],
                    "index": "14",
                    "docs": []
                  },
                  {
                    "name": "Unroutable",
                    "fields": [],
                    "index": "15",
                    "docs": []
                  },
                  {
                    "name": "UnknownClaim",
                    "fields": [],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "FailedToDecode",
                    "fields": [],
                    "index": "17",
                    "docs": []
                  },
                  {
                    "name": "MaxWeightInvalid",
                    "fields": [],
                    "index": "18",
                    "docs": []
                  },
                  {
                    "name": "NotHoldingFees",
                    "fields": [],
                    "index": "19",
                    "docs": []
                  },
                  {
                    "name": "TooExpensive",
                    "fields": [],
                    "index": "20",
                    "docs": []
                  },
                  {
                    "name": "Trap",
                    "fields": [
                      {
                        "name": null,
                        "type": "11",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": []
                  },
                  {
                    "name": "ExpectationFalse",
                    "fields": [],
                    "index": "22",
                    "docs": []
                  },
                  {
                    "name": "PalletNotFound",
                    "fields": [],
                    "index": "23",
                    "docs": []
                  },
                  {
                    "name": "NameMismatch",
                    "fields": [],
                    "index": "24",
                    "docs": []
                  },
                  {
                    "name": "VersionIncompatible",
                    "fields": [],
                    "index": "25",
                    "docs": []
                  },
                  {
                    "name": "HoldingWouldOverflow",
                    "fields": [],
                    "index": "26",
                    "docs": []
                  },
                  {
                    "name": "ExportError",
                    "fields": [],
                    "index": "27",
                    "docs": []
                  },
                  {
                    "name": "ReanchorFailed",
                    "fields": [],
                    "index": "28",
                    "docs": []
                  },
                  {
                    "name": "NoDeal",
                    "fields": [],
                    "index": "29",
                    "docs": []
                  },
                  {
                    "name": "FeesNotMet",
                    "fields": [],
                    "index": "30",
                    "docs": []
                  },
                  {
                    "name": "LockError",
                    "fields": [],
                    "index": "31",
                    "docs": []
                  },
                  {
                    "name": "NoPermission",
                    "fields": [],
                    "index": "32",
                    "docs": []
                  },
                  {
                    "name": "Unanchored",
                    "fields": [],
                    "index": "33",
                    "docs": []
                  },
                  {
                    "name": "NotDepositable",
                    "fields": [],
                    "index": "34",
                    "docs": []
                  },
                  {
                    "name": "UnhandledXcmVersion",
                    "fields": [],
                    "index": "35",
                    "docs": []
                  },
                  {
                    "name": "WeightLimitReached",
                    "fields": [
                      {
                        "name": null,
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "36",
                    "docs": []
                  },
                  {
                    "name": "Barrier",
                    "fields": [],
                    "index": "37",
                    "docs": []
                  },
                  {
                    "name": "WeightNotComputable",
                    "fields": [],
                    "index": "38",
                    "docs": []
                  },
                  {
                    "name": "ExceedsStackLimit",
                    "fields": [],
                    "index": "39",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "60",
          "type": {
            "path": [
              "cumulus_pallet_dmp_queue",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "StartedExport",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The export of pages started."
                    ]
                  },
                  {
                    "name": "Exported",
                    "fields": [
                      {
                        "name": "page",
                        "type": "4",
                        "typeName": "PageCounter",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "The export of a page completed."
                    ]
                  },
                  {
                    "name": "ExportFailed",
                    "fields": [
                      {
                        "name": "page",
                        "type": "4",
                        "typeName": "PageCounter",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "The export of a page failed.",
                      "",
                      "This should never be emitted."
                    ]
                  },
                  {
                    "name": "CompletedExport",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "The export of pages completed."
                    ]
                  },
                  {
                    "name": "StartedOverweightExport",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "The export of overweight messages started."
                    ]
                  },
                  {
                    "name": "ExportedOverweight",
                    "fields": [
                      {
                        "name": "index",
                        "type": "11",
                        "typeName": "OverweightIndex",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "The export of an overweight message completed."
                    ]
                  },
                  {
                    "name": "ExportOverweightFailed",
                    "fields": [
                      {
                        "name": "index",
                        "type": "11",
                        "typeName": "OverweightIndex",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "The export of an overweight message failed.",
                      "",
                      "This should never be emitted."
                    ]
                  },
                  {
                    "name": "CompletedOverweightExport",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "The export of overweight messages completed."
                    ]
                  },
                  {
                    "name": "StartedCleanup",
                    "fields": [],
                    "index": "8",
                    "docs": [
                      "The cleanup of remaining pallet storage started."
                    ]
                  },
                  {
                    "name": "CleanedSome",
                    "fields": [
                      {
                        "name": "keys_removed",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "Some debris was cleaned up."
                    ]
                  },
                  {
                    "name": "Completed",
                    "fields": [
                      {
                        "name": "error",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": [
                      "The cleanup of remaining pallet storage completed."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "61",
          "type": {
            "path": [
              "pallet_xcm",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Attempted",
                    "fields": [
                      {
                        "name": "outcome",
                        "type": "58",
                        "typeName": "xcm::latest::Outcome",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "Execution of an XCM message was attempted."
                    ]
                  },
                  {
                    "name": "Sent",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "destination",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "message",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      },
                      {
                        "name": "message_id",
                        "type": "1",
                        "typeName": "XcmHash",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "A XCM message was sent."
                    ]
                  },
                  {
                    "name": "UnexpectedResponse",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "Query response received which does not match a registered query. This may be because a",
                      "matching query was never registered, it may be because it is a duplicate response, or",
                      "because the query timed out."
                    ]
                  },
                  {
                    "name": "ResponseReady",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "response",
                        "type": "83",
                        "typeName": "Response",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "Query response has been received and is ready for taking with `take_response`. There is",
                      "no registered notification call."
                    ]
                  },
                  {
                    "name": "Notified",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "pallet_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "call_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "Query response has been received and query is removed. The registered notification has",
                      "been dispatched and executed successfully."
                    ]
                  },
                  {
                    "name": "NotifyOverweight",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "pallet_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "call_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "actual_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      },
                      {
                        "name": "max_budgeted_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "Query response has been received and query is removed. The registered notification",
                      "could not be dispatched because the dispatch weight is greater than the maximum weight",
                      "originally budgeted by this runtime for the query result."
                    ]
                  },
                  {
                    "name": "NotifyDispatchError",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "pallet_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "call_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "Query response has been received and query is removed. There was a general error with",
                      "dispatching the notification call."
                    ]
                  },
                  {
                    "name": "NotifyDecodeFailed",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "pallet_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "call_index",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": [
                      "Query response has been received and query is removed. The dispatch was unable to be",
                      "decoded into a `Call`; this might be due to dispatch function having a signature which",
                      "is not `(origin, QueryId, Response)`."
                    ]
                  },
                  {
                    "name": "InvalidResponder",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "expected_location",
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": [
                      "Expected query response has been received but the origin location of the response does",
                      "not match that expected. The query remains registered for a later, valid, response to",
                      "be received and acted upon."
                    ]
                  },
                  {
                    "name": "InvalidResponderVersion",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "Expected query response has been received but the expected origin location placed in",
                      "storage by this runtime previously cannot be decoded. The query remains registered.",
                      "",
                      "This is unexpected (since a location placed in storage in a previously executing",
                      "runtime should be readable prior to query timeout) and dangerous since the possibly",
                      "valid response will be dropped. Manual governance intervention is probably going to be",
                      "needed."
                    ]
                  },
                  {
                    "name": "ResponseTaken",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": [
                      "Received query response has been read and removed."
                    ]
                  },
                  {
                    "name": "AssetsTrapped",
                    "fields": [
                      {
                        "name": "hash",
                        "type": "12",
                        "typeName": "H256",
                        "docs": []
                      },
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "100",
                        "typeName": "VersionedMultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": [
                      "Some assets have been placed in an asset trap."
                    ]
                  },
                  {
                    "name": "VersionChangeNotified",
                    "fields": [
                      {
                        "name": "destination",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "result",
                        "type": "4",
                        "typeName": "XcmVersion",
                        "docs": []
                      },
                      {
                        "name": "cost",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "message_id",
                        "type": "1",
                        "typeName": "XcmHash",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": [
                      "An XCM version change notification message has been attempted to be sent.",
                      "",
                      "The cost of sending it (borne by the chain) is included."
                    ]
                  },
                  {
                    "name": "SupportedVersionChanged",
                    "fields": [
                      {
                        "name": "location",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "version",
                        "type": "4",
                        "typeName": "XcmVersion",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": [
                      "The supported version of a location has been changed. This might be through an",
                      "automatic notification or a manual intervention."
                    ]
                  },
                  {
                    "name": "NotifyTargetSendFail",
                    "fields": [
                      {
                        "name": "location",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "error",
                        "type": "59",
                        "typeName": "XcmError",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": [
                      "A given location which had a version change subscription was dropped owing to an error",
                      "sending the notification to it."
                    ]
                  },
                  {
                    "name": "NotifyTargetMigrationFail",
                    "fields": [
                      {
                        "name": "location",
                        "type": "114",
                        "typeName": "VersionedMultiLocation",
                        "docs": []
                      },
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": [
                      "A given location which had a version change subscription was dropped owing to an error",
                      "migrating the location to our new XCM format."
                    ]
                  },
                  {
                    "name": "InvalidQuerierVersion",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": [
                      "Expected query response has been received but the expected querier location placed in",
                      "storage by this runtime previously cannot be decoded. The query remains registered.",
                      "",
                      "This is unexpected (since a location placed in storage in a previously executing",
                      "runtime should be readable prior to query timeout) and dangerous since the possibly",
                      "valid response will be dropped. Manual governance intervention is probably going to be",
                      "needed."
                    ]
                  },
                  {
                    "name": "InvalidQuerier",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "query_id",
                        "type": "11",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "expected_querier",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "maybe_actual_querier",
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": [
                      "Expected query response has been received but the querier location of the response does",
                      "not match the expected. The query remains registered for a later, valid, response to",
                      "be received and acted upon."
                    ]
                  },
                  {
                    "name": "VersionNotifyStarted",
                    "fields": [
                      {
                        "name": "destination",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "cost",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "message_id",
                        "type": "1",
                        "typeName": "XcmHash",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": [
                      "A remote has requested XCM version change notification from us and we have honored it.",
                      "A version information message is sent to them and its cost is included."
                    ]
                  },
                  {
                    "name": "VersionNotifyRequested",
                    "fields": [
                      {
                        "name": "destination",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "cost",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "message_id",
                        "type": "1",
                        "typeName": "XcmHash",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": [
                      "We have requested that a remote chain send us XCM version change notifications."
                    ]
                  },
                  {
                    "name": "VersionNotifyUnrequested",
                    "fields": [
                      {
                        "name": "destination",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "cost",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "message_id",
                        "type": "1",
                        "typeName": "XcmHash",
                        "docs": []
                      }
                    ],
                    "index": "20",
                    "docs": [
                      "We have requested that a remote chain stops sending us XCM version change",
                      "notifications."
                    ]
                  },
                  {
                    "name": "FeesPaid",
                    "fields": [
                      {
                        "name": "paying",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "fees",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": [
                      "Fees were paid from a location for an operation (often for using `SendXcm`)."
                    ]
                  },
                  {
                    "name": "AssetsClaimed",
                    "fields": [
                      {
                        "name": "hash",
                        "type": "12",
                        "typeName": "H256",
                        "docs": []
                      },
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "100",
                        "typeName": "VersionedMultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": [
                      "Some assets have been claimed from an asset trap"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "62",
          "type": {
            "path": [
              "staging_xcm",
              "v3",
              "multilocation",
              "MultiLocation"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "parents",
                    "type": "2",
                    "typeName": "u8",
                    "docs": []
                  },
                  {
                    "name": "interior",
                    "type": "63",
                    "typeName": "Junctions",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "63",
          "type": {
            "path": [
              "xcm",
              "v3",
              "junctions",
              "Junctions"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Here",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "X1",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "X2",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "X3",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "X4",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "X5",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "X6",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "X7",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "X8",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "64",
          "type": {
            "path": [
              "xcm",
              "v3",
              "junction",
              "Junction"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Parachain",
                    "fields": [
                      {
                        "name": null,
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AccountId32",
                    "fields": [
                      {
                        "name": "network",
                        "type": "66",
                        "typeName": "Option<NetworkId>",
                        "docs": []
                      },
                      {
                        "name": "id",
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "AccountIndex64",
                    "fields": [
                      {
                        "name": "network",
                        "type": "66",
                        "typeName": "Option<NetworkId>",
                        "docs": []
                      },
                      {
                        "name": "index",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "AccountKey20",
                    "fields": [
                      {
                        "name": "network",
                        "type": "66",
                        "typeName": "Option<NetworkId>",
                        "docs": []
                      },
                      {
                        "name": "key",
                        "type": "68",
                        "typeName": "[u8; 20]",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "PalletInstance",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "GeneralIndex",
                    "fields": [
                      {
                        "name": null,
                        "type": "69",
                        "typeName": "u128",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "GeneralKey",
                    "fields": [
                      {
                        "name": "length",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "data",
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "OnlyChild",
                    "fields": [],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "Plurality",
                    "fields": [
                      {
                        "name": "id",
                        "type": "70",
                        "typeName": "BodyId",
                        "docs": []
                      },
                      {
                        "name": "part",
                        "type": "71",
                        "typeName": "BodyPart",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "GlobalConsensus",
                    "fields": [
                      {
                        "name": null,
                        "type": "67",
                        "typeName": "NetworkId",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "65",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Compact": {
                "type": "4"
              }
            },
            "docs": []
          }
        },
        {
          "id": "66",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "67"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "67",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "67",
          "type": {
            "path": [
              "xcm",
              "v3",
              "junction",
              "NetworkId"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ByGenesis",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ByFork",
                    "fields": [
                      {
                        "name": "block_number",
                        "type": "11",
                        "typeName": "u64",
                        "docs": []
                      },
                      {
                        "name": "block_hash",
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Polkadot",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Kusama",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Westend",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Rococo",
                    "fields": [],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Wococo",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "Ethereum",
                    "fields": [
                      {
                        "name": "chain_id",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "BitcoinCore",
                    "fields": [],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "BitcoinCash",
                    "fields": [],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "PolkadotBulletin",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "68",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Array": {
                "len": "20",
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "69",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Compact": {
                "type": "6"
              }
            },
            "docs": []
          }
        },
        {
          "id": "70",
          "type": {
            "path": [
              "xcm",
              "v3",
              "junction",
              "BodyId"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Unit",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Moniker",
                    "fields": [
                      {
                        "name": null,
                        "type": "17",
                        "typeName": "[u8; 4]",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Index",
                    "fields": [
                      {
                        "name": null,
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Executive",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Technical",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Legislative",
                    "fields": [],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Judicial",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "Defense",
                    "fields": [],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "Administration",
                    "fields": [],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "Treasury",
                    "fields": [],
                    "index": "9",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "71",
          "type": {
            "path": [
              "xcm",
              "v3",
              "junction",
              "BodyPart"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Voice",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Members",
                    "fields": [
                      {
                        "name": "count",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Fraction",
                    "fields": [
                      {
                        "name": "nom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "denom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "AtLeastProportion",
                    "fields": [
                      {
                        "name": "nom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "denom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "MoreThanProportion",
                    "fields": [
                      {
                        "name": "nom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "denom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "72",
          "type": {
            "path": [
              "xcm",
              "v3",
              "Xcm"
            ],
            "params": [
              {
                "name": "Call",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "73",
                    "typeName": "Vec<Instruction<Call>>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "73",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "74"
              }
            },
            "docs": []
          }
        },
        {
          "id": "74",
          "type": {
            "path": [
              "xcm",
              "v3",
              "Instruction"
            ],
            "params": [
              {
                "name": "Call",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "WithdrawAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ReserveAssetDeposited",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "ReceiveTeleportedAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "QueryResponse",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "response",
                        "type": "83",
                        "typeName": "Response",
                        "docs": []
                      },
                      {
                        "name": "max_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      },
                      {
                        "name": "querier",
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "TransferAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "TransferReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Transact",
                    "fields": [
                      {
                        "name": "origin_kind",
                        "type": "93",
                        "typeName": "OriginKind",
                        "docs": []
                      },
                      {
                        "name": "require_weight_at_most",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "94",
                        "typeName": "DoubleEncoded<Call>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "HrmpNewChannelOpenRequest",
                    "fields": [
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_message_size",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_capacity",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelAccepted",
                    "fields": [
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelClosing",
                    "fields": [
                      {
                        "name": "initiator",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "ClearOrigin",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "DescendOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "63",
                        "typeName": "InteriorMultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "ReportError",
                    "fields": [
                      {
                        "name": null,
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "DepositAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": []
                  },
                  {
                    "name": "DepositReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": []
                  },
                  {
                    "name": "ExchangeAsset",
                    "fields": [
                      {
                        "name": "give",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "want",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "maximal",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": []
                  },
                  {
                    "name": "InitiateReserveWithdraw",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "reserve",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "InitiateTeleport",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": []
                  },
                  {
                    "name": "ReportHolding",
                    "fields": [
                      {
                        "name": "response_info",
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": []
                  },
                  {
                    "name": "BuyExecution",
                    "fields": [
                      {
                        "name": "fees",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "99",
                        "typeName": "WeightLimit",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": []
                  },
                  {
                    "name": "RefundSurplus",
                    "fields": [],
                    "index": "20",
                    "docs": []
                  },
                  {
                    "name": "SetErrorHandler",
                    "fields": [
                      {
                        "name": null,
                        "type": "72",
                        "typeName": "Xcm<Call>",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": []
                  },
                  {
                    "name": "SetAppendix",
                    "fields": [
                      {
                        "name": null,
                        "type": "72",
                        "typeName": "Xcm<Call>",
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": []
                  },
                  {
                    "name": "ClearError",
                    "fields": [],
                    "index": "23",
                    "docs": []
                  },
                  {
                    "name": "ClaimAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "ticket",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "24",
                    "docs": []
                  },
                  {
                    "name": "Trap",
                    "fields": [
                      {
                        "name": null,
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "25",
                    "docs": []
                  },
                  {
                    "name": "SubscribeVersion",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "26",
                    "docs": []
                  },
                  {
                    "name": "UnsubscribeVersion",
                    "fields": [],
                    "index": "27",
                    "docs": []
                  },
                  {
                    "name": "BurnAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "28",
                    "docs": []
                  },
                  {
                    "name": "ExpectAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "29",
                    "docs": []
                  },
                  {
                    "name": "ExpectOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "30",
                    "docs": []
                  },
                  {
                    "name": "ExpectError",
                    "fields": [
                      {
                        "name": null,
                        "type": "84",
                        "typeName": "Option<(u32, Error)>",
                        "docs": []
                      }
                    ],
                    "index": "31",
                    "docs": []
                  },
                  {
                    "name": "ExpectTransactStatus",
                    "fields": [
                      {
                        "name": null,
                        "type": "90",
                        "typeName": "MaybeErrorCode",
                        "docs": []
                      }
                    ],
                    "index": "32",
                    "docs": []
                  },
                  {
                    "name": "QueryPallet",
                    "fields": [
                      {
                        "name": "module_name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "response_info",
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      }
                    ],
                    "index": "33",
                    "docs": []
                  },
                  {
                    "name": "ExpectPallet",
                    "fields": [
                      {
                        "name": "index",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "module_name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "crate_major",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "min_crate_minor",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "34",
                    "docs": []
                  },
                  {
                    "name": "ReportTransactStatus",
                    "fields": [
                      {
                        "name": null,
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      }
                    ],
                    "index": "35",
                    "docs": []
                  },
                  {
                    "name": "ClearTransactStatus",
                    "fields": [],
                    "index": "36",
                    "docs": []
                  },
                  {
                    "name": "UniversalOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "37",
                    "docs": []
                  },
                  {
                    "name": "ExportMessage",
                    "fields": [
                      {
                        "name": "network",
                        "type": "67",
                        "typeName": "NetworkId",
                        "docs": []
                      },
                      {
                        "name": "destination",
                        "type": "63",
                        "typeName": "InteriorMultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "38",
                    "docs": []
                  },
                  {
                    "name": "LockAsset",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "unlocker",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "39",
                    "docs": []
                  },
                  {
                    "name": "UnlockAsset",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "target",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "40",
                    "docs": []
                  },
                  {
                    "name": "NoteUnlockable",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "41",
                    "docs": []
                  },
                  {
                    "name": "RequestUnlock",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "locker",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "42",
                    "docs": []
                  },
                  {
                    "name": "SetFeesMode",
                    "fields": [
                      {
                        "name": "jit_withdraw",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "43",
                    "docs": []
                  },
                  {
                    "name": "SetTopic",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "44",
                    "docs": []
                  },
                  {
                    "name": "ClearTopic",
                    "fields": [],
                    "index": "45",
                    "docs": []
                  },
                  {
                    "name": "AliasOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "46",
                    "docs": []
                  },
                  {
                    "name": "UnpaidExecution",
                    "fields": [
                      {
                        "name": "weight_limit",
                        "type": "99",
                        "typeName": "WeightLimit",
                        "docs": []
                      },
                      {
                        "name": "check_origin",
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "47",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "75",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "MultiAssets"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "76",
                    "typeName": "Vec<MultiAsset>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "76",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "77"
              }
            },
            "docs": []
          }
        },
        {
          "id": "77",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "MultiAsset"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "id",
                    "type": "78",
                    "typeName": "AssetId",
                    "docs": []
                  },
                  {
                    "name": "fun",
                    "type": "79",
                    "typeName": "Fungibility",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "78",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "AssetId"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Concrete",
                    "fields": [
                      {
                        "name": null,
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Abstract",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "79",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "Fungibility"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Fungible",
                    "fields": [
                      {
                        "name": null,
                        "type": "69",
                        "typeName": "u128",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "NonFungible",
                    "fields": [
                      {
                        "name": null,
                        "type": "80",
                        "typeName": "AssetInstance",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "80",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "AssetInstance"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Undefined",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Index",
                    "fields": [
                      {
                        "name": null,
                        "type": "69",
                        "typeName": "u128",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Array4",
                    "fields": [
                      {
                        "name": null,
                        "type": "17",
                        "typeName": "[u8; 4]",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Array8",
                    "fields": [
                      {
                        "name": null,
                        "type": "81",
                        "typeName": "[u8; 8]",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Array16",
                    "fields": [
                      {
                        "name": null,
                        "type": "82",
                        "typeName": "[u8; 16]",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Array32",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "81",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Array": {
                "len": "8",
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "82",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Array": {
                "len": "16",
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "83",
          "type": {
            "path": [
              "xcm",
              "v3",
              "Response"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Null",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Assets",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "ExecutionResult",
                    "fields": [
                      {
                        "name": null,
                        "type": "84",
                        "typeName": "Option<(u32, Error)>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Version",
                    "fields": [
                      {
                        "name": null,
                        "type": "4",
                        "typeName": "super::Version",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "PalletsInfo",
                    "fields": [
                      {
                        "name": null,
                        "type": "86",
                        "typeName": "BoundedVec<PalletInfo, MaxPalletsInfo>",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "DispatchResult",
                    "fields": [
                      {
                        "name": null,
                        "type": "90",
                        "typeName": "MaybeErrorCode",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "84",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "85"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "85",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "85",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "4",
                "59"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "86",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "87"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "89",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "87",
          "type": {
            "path": [
              "xcm",
              "v3",
              "PalletInfo"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "index",
                    "type": "65",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "name",
                    "type": "88",
                    "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                    "docs": []
                  },
                  {
                    "name": "module_name",
                    "type": "88",
                    "typeName": "BoundedVec<u8, MaxPalletNameLen>",
                    "docs": []
                  },
                  {
                    "name": "major",
                    "type": "65",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "minor",
                    "type": "65",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "patch",
                    "type": "65",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "88",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "2"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "89",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "87"
              }
            },
            "docs": []
          }
        },
        {
          "id": "90",
          "type": {
            "path": [
              "xcm",
              "v3",
              "MaybeErrorCode"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Success",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Error",
                    "fields": [
                      {
                        "name": null,
                        "type": "91",
                        "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "TruncatedError",
                    "fields": [
                      {
                        "name": null,
                        "type": "91",
                        "typeName": "BoundedVec<u8, MaxDispatchErrorLen>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "91",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "2"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "92",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "62"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "62",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "93",
          "type": {
            "path": [
              "xcm",
              "v2",
              "OriginKind"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Native",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "SovereignAccount",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Superuser",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Xcm",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "94",
          "type": {
            "path": [
              "xcm",
              "double_encoded",
              "DoubleEncoded"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "encoded",
                    "type": "13",
                    "typeName": "Vec<u8>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "95",
          "type": {
            "path": [
              "xcm",
              "v3",
              "QueryResponseInfo"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "destination",
                    "type": "62",
                    "typeName": "MultiLocation",
                    "docs": []
                  },
                  {
                    "name": "query_id",
                    "type": "10",
                    "typeName": "QueryId",
                    "docs": []
                  },
                  {
                    "name": "max_weight",
                    "type": "9",
                    "typeName": "Weight",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "96",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "MultiAssetFilter"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Definite",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Wild",
                    "fields": [
                      {
                        "name": null,
                        "type": "97",
                        "typeName": "WildMultiAsset",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "97",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "WildMultiAsset"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "All",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AllOf",
                    "fields": [
                      {
                        "name": "id",
                        "type": "78",
                        "typeName": "AssetId",
                        "docs": []
                      },
                      {
                        "name": "fun",
                        "type": "98",
                        "typeName": "WildFungibility",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "AllCounted",
                    "fields": [
                      {
                        "name": null,
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "AllOfCounted",
                    "fields": [
                      {
                        "name": "id",
                        "type": "78",
                        "typeName": "AssetId",
                        "docs": []
                      },
                      {
                        "name": "fun",
                        "type": "98",
                        "typeName": "WildFungibility",
                        "docs": []
                      },
                      {
                        "name": "count",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "98",
          "type": {
            "path": [
              "xcm",
              "v3",
              "multiasset",
              "WildFungibility"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Fungible",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "NonFungible",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "99",
          "type": {
            "path": [
              "xcm",
              "v3",
              "WeightLimit"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Unlimited",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Limited",
                    "fields": [
                      {
                        "name": null,
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "100",
          "type": {
            "path": [
              "xcm",
              "VersionedMultiAssets"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "V2",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "v2::MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "V3",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "v3::MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "101",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "MultiAssets"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "102",
                    "typeName": "Vec<MultiAsset>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "102",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "103"
              }
            },
            "docs": []
          }
        },
        {
          "id": "103",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "MultiAsset"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "id",
                    "type": "104",
                    "typeName": "AssetId",
                    "docs": []
                  },
                  {
                    "name": "fun",
                    "type": "112",
                    "typeName": "Fungibility",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "104",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "AssetId"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Concrete",
                    "fields": [
                      {
                        "name": null,
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Abstract",
                    "fields": [
                      {
                        "name": null,
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "105",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multilocation",
              "MultiLocation"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "parents",
                    "type": "2",
                    "typeName": "u8",
                    "docs": []
                  },
                  {
                    "name": "interior",
                    "type": "106",
                    "typeName": "Junctions",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "106",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multilocation",
              "Junctions"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Here",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "X1",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "X2",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "X3",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "X4",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "X5",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "X6",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "X7",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "X8",
                    "fields": [
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "107",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "107",
          "type": {
            "path": [
              "xcm",
              "v2",
              "junction",
              "Junction"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Parachain",
                    "fields": [
                      {
                        "name": null,
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AccountId32",
                    "fields": [
                      {
                        "name": "network",
                        "type": "108",
                        "typeName": "NetworkId",
                        "docs": []
                      },
                      {
                        "name": "id",
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "AccountIndex64",
                    "fields": [
                      {
                        "name": "network",
                        "type": "108",
                        "typeName": "NetworkId",
                        "docs": []
                      },
                      {
                        "name": "index",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "AccountKey20",
                    "fields": [
                      {
                        "name": "network",
                        "type": "108",
                        "typeName": "NetworkId",
                        "docs": []
                      },
                      {
                        "name": "key",
                        "type": "68",
                        "typeName": "[u8; 20]",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "PalletInstance",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "GeneralIndex",
                    "fields": [
                      {
                        "name": null,
                        "type": "69",
                        "typeName": "u128",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "GeneralKey",
                    "fields": [
                      {
                        "name": null,
                        "type": "109",
                        "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "OnlyChild",
                    "fields": [],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "Plurality",
                    "fields": [
                      {
                        "name": "id",
                        "type": "110",
                        "typeName": "BodyId",
                        "docs": []
                      },
                      {
                        "name": "part",
                        "type": "111",
                        "typeName": "BodyPart",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "108",
          "type": {
            "path": [
              "xcm",
              "v2",
              "NetworkId"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Any",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Named",
                    "fields": [
                      {
                        "name": null,
                        "type": "109",
                        "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Polkadot",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Kusama",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "109",
          "type": {
            "path": [
              "bounded_collections",
              "weak_bounded_vec",
              "WeakBoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "2"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "110",
          "type": {
            "path": [
              "xcm",
              "v2",
              "BodyId"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Unit",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Named",
                    "fields": [
                      {
                        "name": null,
                        "type": "109",
                        "typeName": "WeakBoundedVec<u8, ConstU32<32>>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Index",
                    "fields": [
                      {
                        "name": null,
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Executive",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Technical",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Legislative",
                    "fields": [],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Judicial",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "Defense",
                    "fields": [],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "Administration",
                    "fields": [],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "Treasury",
                    "fields": [],
                    "index": "9",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "111",
          "type": {
            "path": [
              "xcm",
              "v2",
              "BodyPart"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Voice",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Members",
                    "fields": [
                      {
                        "name": "count",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Fraction",
                    "fields": [
                      {
                        "name": "nom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "denom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "AtLeastProportion",
                    "fields": [
                      {
                        "name": "nom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "denom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "MoreThanProportion",
                    "fields": [
                      {
                        "name": "nom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "denom",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "112",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "Fungibility"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Fungible",
                    "fields": [
                      {
                        "name": null,
                        "type": "69",
                        "typeName": "u128",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "NonFungible",
                    "fields": [
                      {
                        "name": null,
                        "type": "113",
                        "typeName": "AssetInstance",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "113",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "AssetInstance"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Undefined",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Index",
                    "fields": [
                      {
                        "name": null,
                        "type": "69",
                        "typeName": "u128",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Array4",
                    "fields": [
                      {
                        "name": null,
                        "type": "17",
                        "typeName": "[u8; 4]",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Array8",
                    "fields": [
                      {
                        "name": null,
                        "type": "81",
                        "typeName": "[u8; 8]",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Array16",
                    "fields": [
                      {
                        "name": null,
                        "type": "82",
                        "typeName": "[u8; 16]",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Array32",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Blob",
                    "fields": [
                      {
                        "name": null,
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "114",
          "type": {
            "path": [
              "xcm",
              "VersionedMultiLocation"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "V2",
                    "fields": [
                      {
                        "name": null,
                        "type": "105",
                        "typeName": "v2::MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "V3",
                    "fields": [
                      {
                        "name": null,
                        "type": "62",
                        "typeName": "v3::MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "115",
          "type": {
            "path": [
              "pallet_message_queue",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ProcessingFailed",
                    "fields": [
                      {
                        "name": "id",
                        "type": "12",
                        "typeName": "H256",
                        "docs": [
                          "The `blake2_256` hash of the message."
                        ]
                      },
                      {
                        "name": "origin",
                        "type": "116",
                        "typeName": "MessageOriginOf<T>",
                        "docs": [
                          "The queue of the message."
                        ]
                      },
                      {
                        "name": "error",
                        "type": "117",
                        "typeName": "ProcessMessageError",
                        "docs": [
                          "The error that occurred.",
                          "",
                          "This error is pretty opaque. More fine-grained errors need to be emitted as events",
                          "by the `MessageProcessor`."
                        ]
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "Message discarded due to an error in the `MessageProcessor` (usually a format error)."
                    ]
                  },
                  {
                    "name": "Processed",
                    "fields": [
                      {
                        "name": "id",
                        "type": "12",
                        "typeName": "H256",
                        "docs": [
                          "The `blake2_256` hash of the message."
                        ]
                      },
                      {
                        "name": "origin",
                        "type": "116",
                        "typeName": "MessageOriginOf<T>",
                        "docs": [
                          "The queue of the message."
                        ]
                      },
                      {
                        "name": "weight_used",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": [
                          "How much weight was used to process the message."
                        ]
                      },
                      {
                        "name": "success",
                        "type": "30",
                        "typeName": "bool",
                        "docs": [
                          "Whether the message was processed.",
                          "",
                          "Note that this does not mean that the underlying `MessageProcessor` was internally",
                          "successful. It *solely* means that the MQ pallet will treat this as a success",
                          "condition and discard the message. Any internal error needs to be emitted as events",
                          "by the `MessageProcessor`."
                        ]
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "Message is processed."
                    ]
                  },
                  {
                    "name": "OverweightEnqueued",
                    "fields": [
                      {
                        "name": "id",
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": [
                          "The `blake2_256` hash of the message."
                        ]
                      },
                      {
                        "name": "origin",
                        "type": "116",
                        "typeName": "MessageOriginOf<T>",
                        "docs": [
                          "The queue of the message."
                        ]
                      },
                      {
                        "name": "page_index",
                        "type": "4",
                        "typeName": "PageIndex",
                        "docs": [
                          "The page of the message."
                        ]
                      },
                      {
                        "name": "message_index",
                        "type": "4",
                        "typeName": "T::Size",
                        "docs": [
                          "The index of the message within the page."
                        ]
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "Message placed in overweight queue."
                    ]
                  },
                  {
                    "name": "PageReaped",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "116",
                        "typeName": "MessageOriginOf<T>",
                        "docs": [
                          "The queue of the page."
                        ]
                      },
                      {
                        "name": "index",
                        "type": "4",
                        "typeName": "PageIndex",
                        "docs": [
                          "The index of the page."
                        ]
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "This page was reaped."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "116",
          "type": {
            "path": [
              "cumulus_primitives_core",
              "AggregateMessageOrigin"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Here",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Parent",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Sibling",
                    "fields": [
                      {
                        "name": null,
                        "type": "55",
                        "typeName": "ParaId",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "117",
          "type": {
            "path": [
              "frame_support",
              "traits",
              "messages",
              "ProcessMessageError"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "BadFormat",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Corrupt",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Unsupported",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Overweight",
                    "fields": [
                      {
                        "name": null,
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Yield",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "118",
          "type": {
            "path": [
              "pallet_assets",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              },
              {
                "name": "I",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Created",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "creator",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "Some asset class was created."
                    ]
                  },
                  {
                    "name": "Issued",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "Some assets were issued."
                    ]
                  },
                  {
                    "name": "Transferred",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "from",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "to",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "Some assets were transferred."
                    ]
                  },
                  {
                    "name": "Burned",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "balance",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "Some assets were destroyed."
                    ]
                  },
                  {
                    "name": "TeamChanged",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "issuer",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "admin",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "freezer",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "The management team changed."
                    ]
                  },
                  {
                    "name": "OwnerChanged",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "The owner changed."
                    ]
                  },
                  {
                    "name": "Frozen",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "Some account `who` was frozen."
                    ]
                  },
                  {
                    "name": "Thawed",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": [
                      "Some account `who` was thawed."
                    ]
                  },
                  {
                    "name": "AssetFrozen",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": [
                      "Some asset `asset_id` was frozen."
                    ]
                  },
                  {
                    "name": "AssetThawed",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "Some asset `asset_id` was thawed."
                    ]
                  },
                  {
                    "name": "AccountsDestroyed",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "accounts_destroyed",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "accounts_remaining",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": [
                      "Accounts were destroyed for given asset."
                    ]
                  },
                  {
                    "name": "ApprovalsDestroyed",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "approvals_destroyed",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "approvals_remaining",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": [
                      "Approvals were destroyed for given asset."
                    ]
                  },
                  {
                    "name": "DestructionStarted",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": [
                      "An asset class is in the process of being destroyed."
                    ]
                  },
                  {
                    "name": "Destroyed",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": [
                      "An asset class was destroyed."
                    ]
                  },
                  {
                    "name": "ForceCreated",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": [
                      "Some asset class was force-created."
                    ]
                  },
                  {
                    "name": "MetadataSet",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "symbol",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "decimals",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "is_frozen",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": [
                      "New metadata has been set for an asset."
                    ]
                  },
                  {
                    "name": "MetadataCleared",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": [
                      "Metadata has been cleared for an asset."
                    ]
                  },
                  {
                    "name": "ApprovedTransfer",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "source",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "delegate",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": [
                      "(Additional) funds have been approved for transfer to a destination account."
                    ]
                  },
                  {
                    "name": "ApprovalCancelled",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "delegate",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": [
                      "An approval for account `delegate` was cancelled by `owner`."
                    ]
                  },
                  {
                    "name": "TransferredApproved",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "delegate",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "destination",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": [
                      "An `amount` was transferred in its entirety from `owner` to `destination` by",
                      "the approved `delegate`."
                    ]
                  },
                  {
                    "name": "AssetStatusChanged",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      }
                    ],
                    "index": "20",
                    "docs": [
                      "An asset has had its attributes changed by the `Force` origin."
                    ]
                  },
                  {
                    "name": "AssetMinBalanceChanged",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "new_min_balance",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": [
                      "The min_balance of an asset has been updated by the asset owner."
                    ]
                  },
                  {
                    "name": "Touched",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "depositor",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": [
                      "Some account `who` was created with a deposit from `depositor`."
                    ]
                  },
                  {
                    "name": "Blocked",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "T::AssetId",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "23",
                    "docs": [
                      "Some account `who` was blocked."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "119",
          "type": {
            "path": [
              "pallet_foreign_asset_creator",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ForeignAssetCreated",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      },
                      {
                        "name": "foreign_asset",
                        "type": "62",
                        "typeName": "T::ForeignAsset",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "New asset with the asset manager is registered"
                    ]
                  },
                  {
                    "name": "ForeignAssetTypeChanged",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      },
                      {
                        "name": "new_foreign_asset",
                        "type": "62",
                        "typeName": "T::ForeignAsset",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "Changed the xcm type mapping for a given asset id"
                    ]
                  },
                  {
                    "name": "ForeignAssetRemoved",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      },
                      {
                        "name": "foreign_asset",
                        "type": "62",
                        "typeName": "T::ForeignAsset",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "Removed all information related to an assetId"
                    ]
                  },
                  {
                    "name": "ForeignAssetDestroyed",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      },
                      {
                        "name": "foreign_asset",
                        "type": "62",
                        "typeName": "T::ForeignAsset",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "Removed all information related to an assetId and destroyed asset"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "120",
          "type": {
            "path": [
              "pallet_asset_rate",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "AssetRateCreated",
                    "fields": [
                      {
                        "name": "asset_kind",
                        "type": "40",
                        "typeName": "T::AssetKind",
                        "docs": []
                      },
                      {
                        "name": "rate",
                        "type": "121",
                        "typeName": "FixedU128",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AssetRateRemoved",
                    "fields": [
                      {
                        "name": "asset_kind",
                        "type": "40",
                        "typeName": "T::AssetKind",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "AssetRateUpdated",
                    "fields": [
                      {
                        "name": "asset_kind",
                        "type": "40",
                        "typeName": "T::AssetKind",
                        "docs": []
                      },
                      {
                        "name": "old",
                        "type": "121",
                        "typeName": "FixedU128",
                        "docs": []
                      },
                      {
                        "name": "new",
                        "type": "121",
                        "typeName": "FixedU128",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "121",
          "type": {
            "path": [
              "sp_arithmetic",
              "fixed_point",
              "FixedU128"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "6",
                    "typeName": "u128",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "122",
          "type": {
            "path": [
              "pallet_xcm_executor_utils",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ReservePolicySet",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ReservePolicyRemoved",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "TeleportPolicySet",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "TeleportPolicyRemoved",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "123",
          "type": {
            "path": [
              "pallet_root_testing",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "DefensiveTestCall",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Event dispatched when the trigger_defensive extrinsic is called."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "124",
          "type": {
            "path": [
              "pallet_anchor",
              "pallet",
              "Event"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "AnchorToSell",
                    "fields": [
                      {
                        "name": null,
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "An anchor is set to selling status."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Event` enum of this pallet"
            ]
          }
        },
        {
          "id": "125",
          "type": {
            "path": [
              "frame_system",
              "Phase"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "ApplyExtrinsic",
                    "fields": [
                      {
                        "name": null,
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Finalization",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Initialization",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "126",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "12"
              }
            },
            "docs": []
          }
        },
        {
          "id": "127",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "128"
              }
            },
            "docs": []
          }
        },
        {
          "id": "128",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "4",
                "4"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "129",
          "type": {
            "path": [
              "frame_system",
              "LastRuntimeUpgradeInfo"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "spec_version",
                    "type": "65",
                    "typeName": "codec::Compact<u32>",
                    "docs": []
                  },
                  {
                    "name": "spec_name",
                    "type": "130",
                    "typeName": "sp_runtime::RuntimeString",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "130",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Primitive": "Str"
            },
            "docs": []
          }
        },
        {
          "id": "131",
          "type": {
            "path": [
              "frame_system",
              "CodeUpgradeAuthorization"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "code_hash",
                    "type": "12",
                    "typeName": "T::Hash",
                    "docs": []
                  },
                  {
                    "name": "check_version",
                    "type": "30",
                    "typeName": "bool",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "132",
          "type": {
            "path": [
              "frame_system",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "remark",
                    "fields": [
                      {
                        "name": "remark",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::remark`]."
                    ]
                  },
                  {
                    "name": "set_heap_pages",
                    "fields": [
                      {
                        "name": "pages",
                        "type": "11",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::set_heap_pages`]."
                    ]
                  },
                  {
                    "name": "set_code",
                    "fields": [
                      {
                        "name": "code",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::set_code`]."
                    ]
                  },
                  {
                    "name": "set_code_without_checks",
                    "fields": [
                      {
                        "name": "code",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::set_code_without_checks`]."
                    ]
                  },
                  {
                    "name": "set_storage",
                    "fields": [
                      {
                        "name": "items",
                        "type": "133",
                        "typeName": "Vec<KeyValue>",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "See [`Pallet::set_storage`]."
                    ]
                  },
                  {
                    "name": "kill_storage",
                    "fields": [
                      {
                        "name": "keys",
                        "type": "135",
                        "typeName": "Vec<Key>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "See [`Pallet::kill_storage`]."
                    ]
                  },
                  {
                    "name": "kill_prefix",
                    "fields": [
                      {
                        "name": "prefix",
                        "type": "13",
                        "typeName": "Key",
                        "docs": []
                      },
                      {
                        "name": "subkeys",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "See [`Pallet::kill_prefix`]."
                    ]
                  },
                  {
                    "name": "remark_with_event",
                    "fields": [
                      {
                        "name": "remark",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": [
                      "See [`Pallet::remark_with_event`]."
                    ]
                  },
                  {
                    "name": "authorize_upgrade",
                    "fields": [
                      {
                        "name": "code_hash",
                        "type": "12",
                        "typeName": "T::Hash",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "See [`Pallet::authorize_upgrade`]."
                    ]
                  },
                  {
                    "name": "authorize_upgrade_without_checks",
                    "fields": [
                      {
                        "name": "code_hash",
                        "type": "12",
                        "typeName": "T::Hash",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": [
                      "See [`Pallet::authorize_upgrade_without_checks`]."
                    ]
                  },
                  {
                    "name": "apply_authorized_upgrade",
                    "fields": [
                      {
                        "name": "code",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": [
                      "See [`Pallet::apply_authorized_upgrade`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "133",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "134"
              }
            },
            "docs": []
          }
        },
        {
          "id": "134",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "13",
                "13"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "135",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "13"
              }
            },
            "docs": []
          }
        },
        {
          "id": "136",
          "type": {
            "path": [
              "frame_system",
              "limits",
              "BlockWeights"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "base_block",
                    "type": "9",
                    "typeName": "Weight",
                    "docs": []
                  },
                  {
                    "name": "max_block",
                    "type": "9",
                    "typeName": "Weight",
                    "docs": []
                  },
                  {
                    "name": "per_class",
                    "type": "137",
                    "typeName": "PerDispatchClass<WeightsPerClass>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "137",
          "type": {
            "path": [
              "frame_support",
              "dispatch",
              "PerDispatchClass"
            ],
            "params": [
              {
                "name": "T",
                "type": "138"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "normal",
                    "type": "138",
                    "typeName": "T",
                    "docs": []
                  },
                  {
                    "name": "operational",
                    "type": "138",
                    "typeName": "T",
                    "docs": []
                  },
                  {
                    "name": "mandatory",
                    "type": "138",
                    "typeName": "T",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "138",
          "type": {
            "path": [
              "frame_system",
              "limits",
              "WeightsPerClass"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "base_extrinsic",
                    "type": "9",
                    "typeName": "Weight",
                    "docs": []
                  },
                  {
                    "name": "max_extrinsic",
                    "type": "139",
                    "typeName": "Option<Weight>",
                    "docs": []
                  },
                  {
                    "name": "max_total",
                    "type": "139",
                    "typeName": "Option<Weight>",
                    "docs": []
                  },
                  {
                    "name": "reserved",
                    "type": "139",
                    "typeName": "Option<Weight>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "139",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "9"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "9",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "140",
          "type": {
            "path": [
              "frame_system",
              "limits",
              "BlockLength"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "max",
                    "type": "141",
                    "typeName": "PerDispatchClass<u32>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "141",
          "type": {
            "path": [
              "frame_support",
              "dispatch",
              "PerDispatchClass"
            ],
            "params": [
              {
                "name": "T",
                "type": "4"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "normal",
                    "type": "4",
                    "typeName": "T",
                    "docs": []
                  },
                  {
                    "name": "operational",
                    "type": "4",
                    "typeName": "T",
                    "docs": []
                  },
                  {
                    "name": "mandatory",
                    "type": "4",
                    "typeName": "T",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "142",
          "type": {
            "path": [
              "sp_weights",
              "RuntimeDbWeight"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "read",
                    "type": "11",
                    "typeName": "u64",
                    "docs": []
                  },
                  {
                    "name": "write",
                    "type": "11",
                    "typeName": "u64",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "143",
          "type": {
            "path": [
              "sp_version",
              "RuntimeVersion"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "spec_name",
                    "type": "130",
                    "typeName": "RuntimeString",
                    "docs": []
                  },
                  {
                    "name": "impl_name",
                    "type": "130",
                    "typeName": "RuntimeString",
                    "docs": []
                  },
                  {
                    "name": "authoring_version",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "spec_version",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "impl_version",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "apis",
                    "type": "144",
                    "typeName": "ApisVec",
                    "docs": []
                  },
                  {
                    "name": "transaction_version",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "state_version",
                    "type": "2",
                    "typeName": "u8",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "144",
          "type": {
            "path": [
              "Cow"
            ],
            "params": [
              {
                "name": "T",
                "type": "145"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "145",
                    "typeName": null,
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "145",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "146"
              }
            },
            "docs": []
          }
        },
        {
          "id": "146",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "81",
                "4"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "147",
          "type": {
            "path": [
              "frame_system",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "InvalidSpecName",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The name of specification does not match between the current runtime",
                      "and the new runtime."
                    ]
                  },
                  {
                    "name": "SpecVersionNeedsToIncrease",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "The specification version is not allowed to decrease between the current runtime",
                      "and the new runtime."
                    ]
                  },
                  {
                    "name": "FailedToExtractRuntimeVersion",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Failed to extract the runtime version from the new runtime.",
                      "",
                      "Either calling `Core_version` or decoding `RuntimeVersion` failed."
                    ]
                  },
                  {
                    "name": "NonDefaultComposite",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "Suicide called when the account has non-default composite data."
                    ]
                  },
                  {
                    "name": "NonZeroRefCount",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "There is a non-zero reference count preventing the account from being purged."
                    ]
                  },
                  {
                    "name": "CallFiltered",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "The origin filter prevent the call to be dispatched."
                    ]
                  },
                  {
                    "name": "NothingAuthorized",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "No upgrade authorized."
                    ]
                  },
                  {
                    "name": "Unauthorized",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "The submitted code is not authorized."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Error for the System pallet"
            ]
          }
        },
        {
          "id": "148",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "149"
              }
            },
            "docs": []
          }
        },
        {
          "id": "149",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "unincluded_segment",
              "Ancestor"
            ],
            "params": [
              {
                "name": "H",
                "type": "12"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "used_bandwidth",
                    "type": "150",
                    "typeName": "UsedBandwidth",
                    "docs": []
                  },
                  {
                    "name": "para_head_hash",
                    "type": "155",
                    "typeName": "Option<H>",
                    "docs": []
                  },
                  {
                    "name": "consumed_go_ahead_signal",
                    "type": "156",
                    "typeName": "Option<relay_chain::UpgradeGoAhead>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "150",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "unincluded_segment",
              "UsedBandwidth"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "ump_msg_count",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "ump_total_bytes",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "hrmp_outgoing",
                    "type": "151",
                    "typeName": "BTreeMap<ParaId, HrmpChannelUpdate>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "151",
          "type": {
            "path": [
              "BTreeMap"
            ],
            "params": [
              {
                "name": "K",
                "type": "55"
              },
              {
                "name": "V",
                "type": "152"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "153",
                    "typeName": null,
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "152",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "unincluded_segment",
              "HrmpChannelUpdate"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "msg_count",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "total_bytes",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "153",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "154"
              }
            },
            "docs": []
          }
        },
        {
          "id": "154",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "55",
                "152"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "155",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "12"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "12",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "156",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "157"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "157",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "157",
          "type": {
            "path": [
              "polkadot_primitives",
              "v6",
              "UpgradeGoAhead"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Abort",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "GoAhead",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "158",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "unincluded_segment",
              "SegmentTracker"
            ],
            "params": [
              {
                "name": "H",
                "type": "12"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "used_bandwidth",
                    "type": "150",
                    "typeName": "UsedBandwidth",
                    "docs": []
                  },
                  {
                    "name": "hrmp_watermark",
                    "type": "159",
                    "typeName": "Option<relay_chain::BlockNumber>",
                    "docs": []
                  },
                  {
                    "name": "consumed_go_ahead_signal",
                    "type": "156",
                    "typeName": "Option<relay_chain::UpgradeGoAhead>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "159",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "4"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "4",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "160",
          "type": {
            "path": [
              "polkadot_primitives",
              "v6",
              "PersistedValidationData"
            ],
            "params": [
              {
                "name": "H",
                "type": "12"
              },
              {
                "name": "N",
                "type": "4"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "parent_head",
                    "type": "161",
                    "typeName": "HeadData",
                    "docs": []
                  },
                  {
                    "name": "relay_parent_number",
                    "type": "4",
                    "typeName": "N",
                    "docs": []
                  },
                  {
                    "name": "relay_parent_storage_root",
                    "type": "12",
                    "typeName": "H",
                    "docs": []
                  },
                  {
                    "name": "max_pov_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "161",
          "type": {
            "path": [
              "polkadot_parachain_primitives",
              "primitives",
              "HeadData"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<u8>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "162",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "163"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "163",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "163",
          "type": {
            "path": [
              "polkadot_primitives",
              "v6",
              "UpgradeRestriction"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Present",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "164",
          "type": {
            "path": [
              "sp_trie",
              "storage_proof",
              "StorageProof"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "trie_nodes",
                    "type": "165",
                    "typeName": "BTreeSet<Vec<u8>>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "165",
          "type": {
            "path": [
              "BTreeSet"
            ],
            "params": [
              {
                "name": "T",
                "type": "13"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "135",
                    "typeName": null,
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "166",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "relay_state_snapshot",
              "MessagingStateSnapshot"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "dmq_mqc_head",
                    "type": "12",
                    "typeName": "relay_chain::Hash",
                    "docs": []
                  },
                  {
                    "name": "relay_dispatch_queue_remaining_capacity",
                    "type": "167",
                    "typeName": "RelayDispatchQueueRemainingCapacity",
                    "docs": []
                  },
                  {
                    "name": "ingress_channels",
                    "type": "168",
                    "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                    "docs": []
                  },
                  {
                    "name": "egress_channels",
                    "type": "168",
                    "typeName": "Vec<(ParaId, AbridgedHrmpChannel)>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "167",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "relay_state_snapshot",
              "RelayDispatchQueueRemainingCapacity"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "remaining_count",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "remaining_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "168",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "169"
              }
            },
            "docs": []
          }
        },
        {
          "id": "169",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "55",
                "170"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "170",
          "type": {
            "path": [
              "polkadot_primitives",
              "v6",
              "AbridgedHrmpChannel"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "max_capacity",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "max_total_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "max_message_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "msg_count",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "total_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "mqc_head",
                    "type": "155",
                    "typeName": "Option<Hash>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "171",
          "type": {
            "path": [
              "polkadot_primitives",
              "v6",
              "AbridgedHostConfiguration"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "max_code_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "max_head_data_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "max_upward_queue_count",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "max_upward_queue_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "max_upward_message_size",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "max_upward_message_num_per_candidate",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "hrmp_max_message_num_per_candidate",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "validation_upgrade_cooldown",
                    "type": "4",
                    "typeName": "BlockNumber",
                    "docs": []
                  },
                  {
                    "name": "validation_upgrade_delay",
                    "type": "4",
                    "typeName": "BlockNumber",
                    "docs": []
                  },
                  {
                    "name": "async_backing_params",
                    "type": "172",
                    "typeName": "AsyncBackingParams",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "172",
          "type": {
            "path": [
              "polkadot_primitives",
              "v6",
              "async_backing",
              "AsyncBackingParams"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "max_candidate_depth",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "allowed_ancestry_len",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "173",
          "type": {
            "path": [
              "cumulus_primitives_parachain_inherent",
              "MessageQueueChain"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "12",
                    "typeName": "RelayHash",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "174",
          "type": {
            "path": [
              "BTreeMap"
            ],
            "params": [
              {
                "name": "K",
                "type": "55"
              },
              {
                "name": "V",
                "type": "173"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "175",
                    "typeName": null,
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "175",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "176"
              }
            },
            "docs": []
          }
        },
        {
          "id": "176",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "55",
                "173"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "177",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "178"
              }
            },
            "docs": []
          }
        },
        {
          "id": "178",
          "type": {
            "path": [
              "polkadot_core_primitives",
              "OutboundHrmpMessage"
            ],
            "params": [
              {
                "name": "Id",
                "type": "55"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "recipient",
                    "type": "55",
                    "typeName": "Id",
                    "docs": []
                  },
                  {
                    "name": "data",
                    "type": "13",
                    "typeName": "sp_std::vec::Vec<u8>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "179",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "set_validation_data",
                    "fields": [
                      {
                        "name": "data",
                        "type": "180",
                        "typeName": "ParachainInherentData",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::set_validation_data`]."
                    ]
                  },
                  {
                    "name": "sudo_send_upward_message",
                    "fields": [
                      {
                        "name": "message",
                        "type": "13",
                        "typeName": "UpwardMessage",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::sudo_send_upward_message`]."
                    ]
                  },
                  {
                    "name": "authorize_upgrade",
                    "fields": [
                      {
                        "name": "code_hash",
                        "type": "12",
                        "typeName": "T::Hash",
                        "docs": []
                      },
                      {
                        "name": "check_version",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::authorize_upgrade`]."
                    ]
                  },
                  {
                    "name": "enact_authorized_upgrade",
                    "fields": [
                      {
                        "name": "code",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::enact_authorized_upgrade`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "180",
          "type": {
            "path": [
              "cumulus_primitives_parachain_inherent",
              "ParachainInherentData"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "validation_data",
                    "type": "160",
                    "typeName": "PersistedValidationData",
                    "docs": []
                  },
                  {
                    "name": "relay_chain_state",
                    "type": "164",
                    "typeName": "sp_trie::StorageProof",
                    "docs": []
                  },
                  {
                    "name": "downward_messages",
                    "type": "181",
                    "typeName": "Vec<InboundDownwardMessage>",
                    "docs": []
                  },
                  {
                    "name": "horizontal_messages",
                    "type": "183",
                    "typeName": "BTreeMap<ParaId, Vec<InboundHrmpMessage>>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "181",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "182"
              }
            },
            "docs": []
          }
        },
        {
          "id": "182",
          "type": {
            "path": [
              "polkadot_core_primitives",
              "InboundDownwardMessage"
            ],
            "params": [
              {
                "name": "BlockNumber",
                "type": "4"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "sent_at",
                    "type": "4",
                    "typeName": "BlockNumber",
                    "docs": []
                  },
                  {
                    "name": "msg",
                    "type": "13",
                    "typeName": "DownwardMessage",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "183",
          "type": {
            "path": [
              "BTreeMap"
            ],
            "params": [
              {
                "name": "K",
                "type": "55"
              },
              {
                "name": "V",
                "type": "184"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "186",
                    "typeName": null,
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "184",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "185"
              }
            },
            "docs": []
          }
        },
        {
          "id": "185",
          "type": {
            "path": [
              "polkadot_core_primitives",
              "InboundHrmpMessage"
            ],
            "params": [
              {
                "name": "BlockNumber",
                "type": "4"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "sent_at",
                    "type": "4",
                    "typeName": "BlockNumber",
                    "docs": []
                  },
                  {
                    "name": "data",
                    "type": "13",
                    "typeName": "sp_std::vec::Vec<u8>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "186",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "187"
              }
            },
            "docs": []
          }
        },
        {
          "id": "187",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "55",
                "184"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "188",
          "type": {
            "path": [
              "cumulus_pallet_parachain_system",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "OverlappingUpgrades",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Attempt to upgrade validation function while existing upgrade pending."
                    ]
                  },
                  {
                    "name": "ProhibitedByPolkadot",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Polkadot currently prohibits this parachain from upgrading its validation function."
                    ]
                  },
                  {
                    "name": "TooBig",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The supplied validation function has compiled into a blob larger than Polkadot is",
                      "willing to run."
                    ]
                  },
                  {
                    "name": "ValidationDataNotAvailable",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "The inherent which supplies the validation data did not run this block."
                    ]
                  },
                  {
                    "name": "HostConfigurationNotAvailable",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "The inherent which supplies the host configuration did not run this block."
                    ]
                  },
                  {
                    "name": "NotScheduled",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "No validation function upgrade is currently scheduled."
                    ]
                  },
                  {
                    "name": "NothingAuthorized",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "No code upgrade has been authorized."
                    ]
                  },
                  {
                    "name": "Unauthorized",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "The given code upgrade has not been authorized."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "189",
          "type": {
            "path": [
              "pallet_timestamp",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "set",
                    "fields": [
                      {
                        "name": "now",
                        "type": "10",
                        "typeName": "T::Moment",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::set`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "190",
          "type": {
            "path": [
              "staging_parachain_info",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": []
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "191",
          "type": {
            "path": [
              "pallet_sudo",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "sudo",
                    "fields": [
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::sudo`]."
                    ]
                  },
                  {
                    "name": "sudo_unchecked_weight",
                    "fields": [
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      },
                      {
                        "name": "weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::sudo_unchecked_weight`]."
                    ]
                  },
                  {
                    "name": "set_key",
                    "fields": [
                      {
                        "name": "new",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::set_key`]."
                    ]
                  },
                  {
                    "name": "sudo_as",
                    "fields": [
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::sudo_as`]."
                    ]
                  },
                  {
                    "name": "remove_key",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "See [`Pallet::remove_key`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "192",
          "type": {
            "path": [
              "container_chain_template_simple_runtime",
              "RuntimeCall"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "System",
                    "fields": [
                      {
                        "name": null,
                        "type": "132",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<System, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ParachainSystem",
                    "fields": [
                      {
                        "name": null,
                        "type": "179",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainSystem, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Timestamp",
                    "fields": [
                      {
                        "name": null,
                        "type": "189",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Timestamp, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "ParachainInfo",
                    "fields": [
                      {
                        "name": null,
                        "type": "190",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ParachainInfo, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Sudo",
                    "fields": [
                      {
                        "name": null,
                        "type": "191",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Sudo, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Utility",
                    "fields": [
                      {
                        "name": null,
                        "type": "193",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Utility, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Proxy",
                    "fields": [
                      {
                        "name": null,
                        "type": "200",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Proxy, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "MaintenanceMode",
                    "fields": [
                      {
                        "name": null,
                        "type": "204",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MaintenanceMode, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "TxPause",
                    "fields": [
                      {
                        "name": null,
                        "type": "205",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<TxPause, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "Balances",
                    "fields": [
                      {
                        "name": null,
                        "type": "206",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Balances, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "Multisig",
                    "fields": [
                      {
                        "name": null,
                        "type": "208",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Multisig, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "AuthoritiesNoting",
                    "fields": [
                      {
                        "name": null,
                        "type": "210",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AuthoritiesNoting, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "50",
                    "docs": []
                  },
                  {
                    "name": "AuthorInherent",
                    "fields": [
                      {
                        "name": null,
                        "type": "212",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AuthorInherent, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "51",
                    "docs": []
                  },
                  {
                    "name": "DmpQueue",
                    "fields": [
                      {
                        "name": null,
                        "type": "213",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<DmpQueue, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "72",
                    "docs": []
                  },
                  {
                    "name": "PolkadotXcm",
                    "fields": [
                      {
                        "name": null,
                        "type": "214",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<PolkadotXcm, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "73",
                    "docs": []
                  },
                  {
                    "name": "MessageQueue",
                    "fields": [
                      {
                        "name": null,
                        "type": "235",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<MessageQueue, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "74",
                    "docs": []
                  },
                  {
                    "name": "ForeignAssets",
                    "fields": [
                      {
                        "name": null,
                        "type": "236",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ForeignAssets, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "75",
                    "docs": []
                  },
                  {
                    "name": "ForeignAssetsCreator",
                    "fields": [
                      {
                        "name": null,
                        "type": "237",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<ForeignAssetsCreator, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "76",
                    "docs": []
                  },
                  {
                    "name": "AssetRate",
                    "fields": [
                      {
                        "name": null,
                        "type": "238",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<AssetRate, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "77",
                    "docs": []
                  },
                  {
                    "name": "XcmExecutorUtils",
                    "fields": [
                      {
                        "name": null,
                        "type": "239",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<XcmExecutorUtils, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "78",
                    "docs": []
                  },
                  {
                    "name": "RootTesting",
                    "fields": [
                      {
                        "name": null,
                        "type": "244",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<RootTesting, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "100",
                    "docs": []
                  },
                  {
                    "name": "Anchor",
                    "fields": [
                      {
                        "name": null,
                        "type": "246",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::dispatch\n::CallableCallFor<Anchor, Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "111",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "193",
          "type": {
            "path": [
              "pallet_utility",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "batch",
                    "fields": [
                      {
                        "name": "calls",
                        "type": "194",
                        "typeName": "Vec<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::batch`]."
                    ]
                  },
                  {
                    "name": "as_derivative",
                    "fields": [
                      {
                        "name": "index",
                        "type": "40",
                        "typeName": "u16",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::as_derivative`]."
                    ]
                  },
                  {
                    "name": "batch_all",
                    "fields": [
                      {
                        "name": "calls",
                        "type": "194",
                        "typeName": "Vec<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::batch_all`]."
                    ]
                  },
                  {
                    "name": "dispatch_as",
                    "fields": [
                      {
                        "name": "as_origin",
                        "type": "195",
                        "typeName": "Box<T::PalletsOrigin>",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::dispatch_as`]."
                    ]
                  },
                  {
                    "name": "force_batch",
                    "fields": [
                      {
                        "name": "calls",
                        "type": "194",
                        "typeName": "Vec<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "See [`Pallet::force_batch`]."
                    ]
                  },
                  {
                    "name": "with_weight",
                    "fields": [
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      },
                      {
                        "name": "weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "See [`Pallet::with_weight`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "194",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "192"
              }
            },
            "docs": []
          }
        },
        {
          "id": "195",
          "type": {
            "path": [
              "container_chain_template_simple_runtime",
              "OriginCaller"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "system",
                    "fields": [
                      {
                        "name": null,
                        "type": "196",
                        "typeName": "frame_system::Origin<Runtime>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "CumulusXcm",
                    "fields": [
                      {
                        "name": null,
                        "type": "197",
                        "typeName": "cumulus_pallet_xcm::Origin",
                        "docs": []
                      }
                    ],
                    "index": "71",
                    "docs": []
                  },
                  {
                    "name": "PolkadotXcm",
                    "fields": [
                      {
                        "name": null,
                        "type": "198",
                        "typeName": "pallet_xcm::Origin",
                        "docs": []
                      }
                    ],
                    "index": "73",
                    "docs": []
                  },
                  {
                    "name": "Void",
                    "fields": [
                      {
                        "name": null,
                        "type": "199",
                        "typeName": "self::sp_api_hidden_includes_construct_runtime::hidden_include::\n__private::Void",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "196",
          "type": {
            "path": [
              "frame_support",
              "dispatch",
              "RawOrigin"
            ],
            "params": [
              {
                "name": "AccountId",
                "type": "0"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Root",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Signed",
                    "fields": [
                      {
                        "name": null,
                        "type": "0",
                        "typeName": "AccountId",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "None",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "197",
          "type": {
            "path": [
              "cumulus_pallet_xcm",
              "pallet",
              "Origin"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Relay",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "SiblingParachain",
                    "fields": [
                      {
                        "name": null,
                        "type": "55",
                        "typeName": "ParaId",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "198",
          "type": {
            "path": [
              "pallet_xcm",
              "pallet",
              "Origin"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Xcm",
                    "fields": [
                      {
                        "name": null,
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Response",
                    "fields": [
                      {
                        "name": null,
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "199",
          "type": {
            "path": [
              "sp_core",
              "Void"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "200",
          "type": {
            "path": [
              "pallet_proxy",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "proxy",
                    "fields": [
                      {
                        "name": "real",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "force_proxy_type",
                        "type": "203",
                        "typeName": "Option<T::ProxyType>",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::proxy`]."
                    ]
                  },
                  {
                    "name": "add_proxy",
                    "fields": [
                      {
                        "name": "delegate",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "proxy_type",
                        "type": "39",
                        "typeName": "T::ProxyType",
                        "docs": []
                      },
                      {
                        "name": "delay",
                        "type": "4",
                        "typeName": "BlockNumberFor<T>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::add_proxy`]."
                    ]
                  },
                  {
                    "name": "remove_proxy",
                    "fields": [
                      {
                        "name": "delegate",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "proxy_type",
                        "type": "39",
                        "typeName": "T::ProxyType",
                        "docs": []
                      },
                      {
                        "name": "delay",
                        "type": "4",
                        "typeName": "BlockNumberFor<T>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::remove_proxy`]."
                    ]
                  },
                  {
                    "name": "remove_proxies",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::remove_proxies`]."
                    ]
                  },
                  {
                    "name": "create_pure",
                    "fields": [
                      {
                        "name": "proxy_type",
                        "type": "39",
                        "typeName": "T::ProxyType",
                        "docs": []
                      },
                      {
                        "name": "delay",
                        "type": "4",
                        "typeName": "BlockNumberFor<T>",
                        "docs": []
                      },
                      {
                        "name": "index",
                        "type": "40",
                        "typeName": "u16",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "See [`Pallet::create_pure`]."
                    ]
                  },
                  {
                    "name": "kill_pure",
                    "fields": [
                      {
                        "name": "spawner",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "proxy_type",
                        "type": "39",
                        "typeName": "T::ProxyType",
                        "docs": []
                      },
                      {
                        "name": "index",
                        "type": "40",
                        "typeName": "u16",
                        "docs": []
                      },
                      {
                        "name": "height",
                        "type": "65",
                        "typeName": "BlockNumberFor<T>",
                        "docs": []
                      },
                      {
                        "name": "ext_index",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "See [`Pallet::kill_pure`]."
                    ]
                  },
                  {
                    "name": "announce",
                    "fields": [
                      {
                        "name": "real",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "12",
                        "typeName": "CallHashOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "See [`Pallet::announce`]."
                    ]
                  },
                  {
                    "name": "remove_announcement",
                    "fields": [
                      {
                        "name": "real",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "12",
                        "typeName": "CallHashOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": [
                      "See [`Pallet::remove_announcement`]."
                    ]
                  },
                  {
                    "name": "reject_announcement",
                    "fields": [
                      {
                        "name": "delegate",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "12",
                        "typeName": "CallHashOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": [
                      "See [`Pallet::reject_announcement`]."
                    ]
                  },
                  {
                    "name": "proxy_announced",
                    "fields": [
                      {
                        "name": "delegate",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "real",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "force_proxy_type",
                        "type": "203",
                        "typeName": "Option<T::ProxyType>",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "See [`Pallet::proxy_announced`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "201",
          "type": {
            "path": [
              "sp_runtime",
              "multiaddress",
              "MultiAddress"
            ],
            "params": [
              {
                "name": "AccountId",
                "type": "0"
              },
              {
                "name": "AccountIndex",
                "type": "35"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Id",
                    "fields": [
                      {
                        "name": null,
                        "type": "0",
                        "typeName": "AccountId",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Index",
                    "fields": [
                      {
                        "name": null,
                        "type": "202",
                        "typeName": "AccountIndex",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Raw",
                    "fields": [
                      {
                        "name": null,
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Address32",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Address20",
                    "fields": [
                      {
                        "name": null,
                        "type": "68",
                        "typeName": "[u8; 20]",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "202",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Compact": {
                "type": "35"
              }
            },
            "docs": []
          }
        },
        {
          "id": "203",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "39"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "39",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "204",
          "type": {
            "path": [
              "pallet_maintenance_mode",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "enter_maintenance_mode",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::enter_maintenance_mode`]."
                    ]
                  },
                  {
                    "name": "resume_normal_operation",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::resume_normal_operation`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "205",
          "type": {
            "path": [
              "pallet_tx_pause",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "pause",
                    "fields": [
                      {
                        "name": "full_name",
                        "type": "44",
                        "typeName": "RuntimeCallNameOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::pause`]."
                    ]
                  },
                  {
                    "name": "unpause",
                    "fields": [
                      {
                        "name": "ident",
                        "type": "44",
                        "typeName": "RuntimeCallNameOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::unpause`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "206",
          "type": {
            "path": [
              "pallet_balances",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              },
              {
                "name": "I",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "transfer_allow_death",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "value",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::transfer_allow_death`]."
                    ]
                  },
                  {
                    "name": "force_transfer",
                    "fields": [
                      {
                        "name": "source",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "value",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::force_transfer`]."
                    ]
                  },
                  {
                    "name": "transfer_keep_alive",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "value",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::transfer_keep_alive`]."
                    ]
                  },
                  {
                    "name": "transfer_all",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "keep_alive",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "See [`Pallet::transfer_all`]."
                    ]
                  },
                  {
                    "name": "force_unreserve",
                    "fields": [
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "See [`Pallet::force_unreserve`]."
                    ]
                  },
                  {
                    "name": "upgrade_accounts",
                    "fields": [
                      {
                        "name": "who",
                        "type": "207",
                        "typeName": "Vec<T::AccountId>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "See [`Pallet::upgrade_accounts`]."
                    ]
                  },
                  {
                    "name": "force_set_balance",
                    "fields": [
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "new_free",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": [
                      "See [`Pallet::force_set_balance`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "207",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "0"
              }
            },
            "docs": []
          }
        },
        {
          "id": "208",
          "type": {
            "path": [
              "pallet_multisig",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "as_multi_threshold_1",
                    "fields": [
                      {
                        "name": "other_signatories",
                        "type": "207",
                        "typeName": "Vec<T::AccountId>",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::as_multi_threshold_1`]."
                    ]
                  },
                  {
                    "name": "as_multi",
                    "fields": [
                      {
                        "name": "threshold",
                        "type": "40",
                        "typeName": "u16",
                        "docs": []
                      },
                      {
                        "name": "other_signatories",
                        "type": "207",
                        "typeName": "Vec<T::AccountId>",
                        "docs": []
                      },
                      {
                        "name": "maybe_timepoint",
                        "type": "209",
                        "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "192",
                        "typeName": "Box<<T as Config>::RuntimeCall>",
                        "docs": []
                      },
                      {
                        "name": "max_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::as_multi`]."
                    ]
                  },
                  {
                    "name": "approve_as_multi",
                    "fields": [
                      {
                        "name": "threshold",
                        "type": "40",
                        "typeName": "u16",
                        "docs": []
                      },
                      {
                        "name": "other_signatories",
                        "type": "207",
                        "typeName": "Vec<T::AccountId>",
                        "docs": []
                      },
                      {
                        "name": "maybe_timepoint",
                        "type": "209",
                        "typeName": "Option<Timepoint<BlockNumberFor<T>>>",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      },
                      {
                        "name": "max_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::approve_as_multi`]."
                    ]
                  },
                  {
                    "name": "cancel_as_multi",
                    "fields": [
                      {
                        "name": "threshold",
                        "type": "40",
                        "typeName": "u16",
                        "docs": []
                      },
                      {
                        "name": "other_signatories",
                        "type": "207",
                        "typeName": "Vec<T::AccountId>",
                        "docs": []
                      },
                      {
                        "name": "timepoint",
                        "type": "50",
                        "typeName": "Timepoint<BlockNumberFor<T>>",
                        "docs": []
                      },
                      {
                        "name": "call_hash",
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::cancel_as_multi`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "209",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "50"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "50",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "210",
          "type": {
            "path": [
              "pallet_cc_authorities_noting",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "set_latest_authorities_data",
                    "fields": [
                      {
                        "name": "data",
                        "type": "211",
                        "typeName": "ccp_authorities_noting_inherent::ContainerChainAuthoritiesInherentData",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::set_latest_authorities_data`]."
                    ]
                  },
                  {
                    "name": "set_authorities",
                    "fields": [
                      {
                        "name": "authorities",
                        "type": "52",
                        "typeName": "Vec<T::AuthorityId>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::set_authorities`]."
                    ]
                  },
                  {
                    "name": "set_orchestrator_para_id",
                    "fields": [
                      {
                        "name": "new_para_id",
                        "type": "55",
                        "typeName": "ParaId",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::set_orchestrator_para_id`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "211",
          "type": {
            "path": [
              "ccp_authorities_noting_inherent",
              "ContainerChainAuthoritiesInherentData"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "relay_chain_state",
                    "type": "164",
                    "typeName": "sp_trie::StorageProof",
                    "docs": []
                  },
                  {
                    "name": "orchestrator_chain_state",
                    "type": "164",
                    "typeName": "sp_trie::StorageProof",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "212",
          "type": {
            "path": [
              "pallet_author_inherent",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "kick_off_authorship_validation",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::kick_off_authorship_validation`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "213",
          "type": {
            "path": [
              "cumulus_pallet_dmp_queue",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": []
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "214",
          "type": {
            "path": [
              "pallet_xcm",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "send",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "message",
                        "type": "215",
                        "typeName": "Box<VersionedXcm<()>>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::send`]."
                    ]
                  },
                  {
                    "name": "teleport_assets",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "100",
                        "typeName": "Box<VersionedMultiAssets>",
                        "docs": []
                      },
                      {
                        "name": "fee_asset_item",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::teleport_assets`]."
                    ]
                  },
                  {
                    "name": "reserve_transfer_assets",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "100",
                        "typeName": "Box<VersionedMultiAssets>",
                        "docs": []
                      },
                      {
                        "name": "fee_asset_item",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::reserve_transfer_assets`]."
                    ]
                  },
                  {
                    "name": "execute",
                    "fields": [
                      {
                        "name": "message",
                        "type": "227",
                        "typeName": "Box<VersionedXcm<<T as Config>::RuntimeCall>>",
                        "docs": []
                      },
                      {
                        "name": "max_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::execute`]."
                    ]
                  },
                  {
                    "name": "force_xcm_version",
                    "fields": [
                      {
                        "name": "location",
                        "type": "62",
                        "typeName": "Box<MultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "version",
                        "type": "4",
                        "typeName": "XcmVersion",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "See [`Pallet::force_xcm_version`]."
                    ]
                  },
                  {
                    "name": "force_default_xcm_version",
                    "fields": [
                      {
                        "name": "maybe_xcm_version",
                        "type": "159",
                        "typeName": "Option<XcmVersion>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "See [`Pallet::force_default_xcm_version`]."
                    ]
                  },
                  {
                    "name": "force_subscribe_version_notify",
                    "fields": [
                      {
                        "name": "location",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "See [`Pallet::force_subscribe_version_notify`]."
                    ]
                  },
                  {
                    "name": "force_unsubscribe_version_notify",
                    "fields": [
                      {
                        "name": "location",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": [
                      "See [`Pallet::force_unsubscribe_version_notify`]."
                    ]
                  },
                  {
                    "name": "limited_reserve_transfer_assets",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "100",
                        "typeName": "Box<VersionedMultiAssets>",
                        "docs": []
                      },
                      {
                        "name": "fee_asset_item",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "99",
                        "typeName": "WeightLimit",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": [
                      "See [`Pallet::limited_reserve_transfer_assets`]."
                    ]
                  },
                  {
                    "name": "limited_teleport_assets",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "100",
                        "typeName": "Box<VersionedMultiAssets>",
                        "docs": []
                      },
                      {
                        "name": "fee_asset_item",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "99",
                        "typeName": "WeightLimit",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "See [`Pallet::limited_teleport_assets`]."
                    ]
                  },
                  {
                    "name": "force_suspension",
                    "fields": [
                      {
                        "name": "suspended",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": [
                      "See [`Pallet::force_suspension`]."
                    ]
                  },
                  {
                    "name": "transfer_assets",
                    "fields": [
                      {
                        "name": "dest",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "114",
                        "typeName": "Box<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "100",
                        "typeName": "Box<VersionedMultiAssets>",
                        "docs": []
                      },
                      {
                        "name": "fee_asset_item",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "99",
                        "typeName": "WeightLimit",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": [
                      "See [`Pallet::transfer_assets`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "215",
          "type": {
            "path": [
              "xcm",
              "VersionedXcm"
            ],
            "params": [
              {
                "name": "RuntimeCall",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "V2",
                    "fields": [
                      {
                        "name": null,
                        "type": "216",
                        "typeName": "v2::Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "V3",
                    "fields": [
                      {
                        "name": null,
                        "type": "72",
                        "typeName": "v3::Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "216",
          "type": {
            "path": [
              "xcm",
              "v2",
              "Xcm"
            ],
            "params": [
              {
                "name": "RuntimeCall",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "217",
                    "typeName": "Vec<Instruction<RuntimeCall>>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "217",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "218"
              }
            },
            "docs": []
          }
        },
        {
          "id": "218",
          "type": {
            "path": [
              "xcm",
              "v2",
              "Instruction"
            ],
            "params": [
              {
                "name": "RuntimeCall",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "WithdrawAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ReserveAssetDeposited",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "ReceiveTeleportedAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "QueryResponse",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "response",
                        "type": "219",
                        "typeName": "Response",
                        "docs": []
                      },
                      {
                        "name": "max_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "TransferAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "TransferReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Transact",
                    "fields": [
                      {
                        "name": "origin_type",
                        "type": "93",
                        "typeName": "OriginKind",
                        "docs": []
                      },
                      {
                        "name": "require_weight_at_most",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "94",
                        "typeName": "DoubleEncoded<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "HrmpNewChannelOpenRequest",
                    "fields": [
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_message_size",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_capacity",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelAccepted",
                    "fields": [
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelClosing",
                    "fields": [
                      {
                        "name": "initiator",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "ClearOrigin",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "DescendOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "106",
                        "typeName": "InteriorMultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "ReportError",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "DepositAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "max_assets",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": []
                  },
                  {
                    "name": "DepositReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "max_assets",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": []
                  },
                  {
                    "name": "ExchangeAsset",
                    "fields": [
                      {
                        "name": "give",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "receive",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": []
                  },
                  {
                    "name": "InitiateReserveWithdraw",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "reserve",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "InitiateTeleport",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": []
                  },
                  {
                    "name": "QueryHolding",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": []
                  },
                  {
                    "name": "BuyExecution",
                    "fields": [
                      {
                        "name": "fees",
                        "type": "103",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "226",
                        "typeName": "WeightLimit",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": []
                  },
                  {
                    "name": "RefundSurplus",
                    "fields": [],
                    "index": "20",
                    "docs": []
                  },
                  {
                    "name": "SetErrorHandler",
                    "fields": [
                      {
                        "name": null,
                        "type": "216",
                        "typeName": "Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": []
                  },
                  {
                    "name": "SetAppendix",
                    "fields": [
                      {
                        "name": null,
                        "type": "216",
                        "typeName": "Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": []
                  },
                  {
                    "name": "ClearError",
                    "fields": [],
                    "index": "23",
                    "docs": []
                  },
                  {
                    "name": "ClaimAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "ticket",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "24",
                    "docs": []
                  },
                  {
                    "name": "Trap",
                    "fields": [
                      {
                        "name": null,
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "25",
                    "docs": []
                  },
                  {
                    "name": "SubscribeVersion",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "26",
                    "docs": []
                  },
                  {
                    "name": "UnsubscribeVersion",
                    "fields": [],
                    "index": "27",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "219",
          "type": {
            "path": [
              "xcm",
              "v2",
              "Response"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Null",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Assets",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "ExecutionResult",
                    "fields": [
                      {
                        "name": null,
                        "type": "220",
                        "typeName": "Option<(u32, Error)>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Version",
                    "fields": [
                      {
                        "name": null,
                        "type": "4",
                        "typeName": "super::Version",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "220",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "221"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "221",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "221",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "4",
                "222"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "222",
          "type": {
            "path": [
              "xcm",
              "v2",
              "traits",
              "Error"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Overflow",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Unimplemented",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "UntrustedReserveLocation",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "UntrustedTeleportLocation",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "MultiLocationFull",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "MultiLocationNotInvertible",
                    "fields": [],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "BadOrigin",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "InvalidLocation",
                    "fields": [],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "AssetNotFound",
                    "fields": [],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "FailedToTransactAsset",
                    "fields": [],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "NotWithdrawable",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "LocationCannotHold",
                    "fields": [],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "ExceedsMaxMessageSize",
                    "fields": [],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "DestinationUnsupported",
                    "fields": [],
                    "index": "13",
                    "docs": []
                  },
                  {
                    "name": "Transport",
                    "fields": [],
                    "index": "14",
                    "docs": []
                  },
                  {
                    "name": "Unroutable",
                    "fields": [],
                    "index": "15",
                    "docs": []
                  },
                  {
                    "name": "UnknownClaim",
                    "fields": [],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "FailedToDecode",
                    "fields": [],
                    "index": "17",
                    "docs": []
                  },
                  {
                    "name": "MaxWeightInvalid",
                    "fields": [],
                    "index": "18",
                    "docs": []
                  },
                  {
                    "name": "NotHoldingFees",
                    "fields": [],
                    "index": "19",
                    "docs": []
                  },
                  {
                    "name": "TooExpensive",
                    "fields": [],
                    "index": "20",
                    "docs": []
                  },
                  {
                    "name": "Trap",
                    "fields": [
                      {
                        "name": null,
                        "type": "11",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": []
                  },
                  {
                    "name": "UnhandledXcmVersion",
                    "fields": [],
                    "index": "22",
                    "docs": []
                  },
                  {
                    "name": "WeightLimitReached",
                    "fields": [
                      {
                        "name": null,
                        "type": "11",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "23",
                    "docs": []
                  },
                  {
                    "name": "Barrier",
                    "fields": [],
                    "index": "24",
                    "docs": []
                  },
                  {
                    "name": "WeightNotComputable",
                    "fields": [],
                    "index": "25",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "223",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "MultiAssetFilter"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Definite",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Wild",
                    "fields": [
                      {
                        "name": null,
                        "type": "224",
                        "typeName": "WildMultiAsset",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "224",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "WildMultiAsset"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "All",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AllOf",
                    "fields": [
                      {
                        "name": "id",
                        "type": "104",
                        "typeName": "AssetId",
                        "docs": []
                      },
                      {
                        "name": "fun",
                        "type": "225",
                        "typeName": "WildFungibility",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "225",
          "type": {
            "path": [
              "xcm",
              "v2",
              "multiasset",
              "WildFungibility"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Fungible",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "NonFungible",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "226",
          "type": {
            "path": [
              "xcm",
              "v2",
              "WeightLimit"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Unlimited",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Limited",
                    "fields": [
                      {
                        "name": null,
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "227",
          "type": {
            "path": [
              "xcm",
              "VersionedXcm"
            ],
            "params": [
              {
                "name": "RuntimeCall",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "V2",
                    "fields": [
                      {
                        "name": null,
                        "type": "228",
                        "typeName": "v2::Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "V3",
                    "fields": [
                      {
                        "name": null,
                        "type": "232",
                        "typeName": "v3::Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "228",
          "type": {
            "path": [
              "xcm",
              "v2",
              "Xcm"
            ],
            "params": [
              {
                "name": "RuntimeCall",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "229",
                    "typeName": "Vec<Instruction<RuntimeCall>>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "229",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "230"
              }
            },
            "docs": []
          }
        },
        {
          "id": "230",
          "type": {
            "path": [
              "xcm",
              "v2",
              "Instruction"
            ],
            "params": [
              {
                "name": "RuntimeCall",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "WithdrawAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ReserveAssetDeposited",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "ReceiveTeleportedAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "QueryResponse",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "response",
                        "type": "219",
                        "typeName": "Response",
                        "docs": []
                      },
                      {
                        "name": "max_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "TransferAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "TransferReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Transact",
                    "fields": [
                      {
                        "name": "origin_type",
                        "type": "93",
                        "typeName": "OriginKind",
                        "docs": []
                      },
                      {
                        "name": "require_weight_at_most",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "231",
                        "typeName": "DoubleEncoded<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "HrmpNewChannelOpenRequest",
                    "fields": [
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_message_size",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_capacity",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelAccepted",
                    "fields": [
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelClosing",
                    "fields": [
                      {
                        "name": "initiator",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "ClearOrigin",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "DescendOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "106",
                        "typeName": "InteriorMultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "ReportError",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "DepositAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "max_assets",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": []
                  },
                  {
                    "name": "DepositReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "max_assets",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": []
                  },
                  {
                    "name": "ExchangeAsset",
                    "fields": [
                      {
                        "name": "give",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "receive",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": []
                  },
                  {
                    "name": "InitiateReserveWithdraw",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "reserve",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "InitiateTeleport",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "216",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": []
                  },
                  {
                    "name": "QueryHolding",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "223",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": []
                  },
                  {
                    "name": "BuyExecution",
                    "fields": [
                      {
                        "name": "fees",
                        "type": "103",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "226",
                        "typeName": "WeightLimit",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": []
                  },
                  {
                    "name": "RefundSurplus",
                    "fields": [],
                    "index": "20",
                    "docs": []
                  },
                  {
                    "name": "SetErrorHandler",
                    "fields": [
                      {
                        "name": null,
                        "type": "228",
                        "typeName": "Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": []
                  },
                  {
                    "name": "SetAppendix",
                    "fields": [
                      {
                        "name": null,
                        "type": "228",
                        "typeName": "Xcm<RuntimeCall>",
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": []
                  },
                  {
                    "name": "ClearError",
                    "fields": [],
                    "index": "23",
                    "docs": []
                  },
                  {
                    "name": "ClaimAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "101",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "ticket",
                        "type": "105",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "24",
                    "docs": []
                  },
                  {
                    "name": "Trap",
                    "fields": [
                      {
                        "name": null,
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "25",
                    "docs": []
                  },
                  {
                    "name": "SubscribeVersion",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "26",
                    "docs": []
                  },
                  {
                    "name": "UnsubscribeVersion",
                    "fields": [],
                    "index": "27",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "231",
          "type": {
            "path": [
              "xcm",
              "double_encoded",
              "DoubleEncoded"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "encoded",
                    "type": "13",
                    "typeName": "Vec<u8>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "232",
          "type": {
            "path": [
              "xcm",
              "v3",
              "Xcm"
            ],
            "params": [
              {
                "name": "Call",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "233",
                    "typeName": "Vec<Instruction<Call>>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "233",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "234"
              }
            },
            "docs": []
          }
        },
        {
          "id": "234",
          "type": {
            "path": [
              "xcm",
              "v3",
              "Instruction"
            ],
            "params": [
              {
                "name": "Call",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "WithdrawAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "ReserveAssetDeposited",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "ReceiveTeleportedAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "QueryResponse",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "response",
                        "type": "83",
                        "typeName": "Response",
                        "docs": []
                      },
                      {
                        "name": "max_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      },
                      {
                        "name": "querier",
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "TransferAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "TransferReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Transact",
                    "fields": [
                      {
                        "name": "origin_kind",
                        "type": "93",
                        "typeName": "OriginKind",
                        "docs": []
                      },
                      {
                        "name": "require_weight_at_most",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      },
                      {
                        "name": "call",
                        "type": "231",
                        "typeName": "DoubleEncoded<Call>",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "HrmpNewChannelOpenRequest",
                    "fields": [
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_message_size",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "max_capacity",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelAccepted",
                    "fields": [
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "HrmpChannelClosing",
                    "fields": [
                      {
                        "name": "initiator",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "sender",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "recipient",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "ClearOrigin",
                    "fields": [],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "DescendOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "63",
                        "typeName": "InteriorMultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "ReportError",
                    "fields": [
                      {
                        "name": null,
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "DepositAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": []
                  },
                  {
                    "name": "DepositReserveAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": []
                  },
                  {
                    "name": "ExchangeAsset",
                    "fields": [
                      {
                        "name": "give",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "want",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "maximal",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": []
                  },
                  {
                    "name": "InitiateReserveWithdraw",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "reserve",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "InitiateTeleport",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": []
                  },
                  {
                    "name": "ReportHolding",
                    "fields": [
                      {
                        "name": "response_info",
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      },
                      {
                        "name": "assets",
                        "type": "96",
                        "typeName": "MultiAssetFilter",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": []
                  },
                  {
                    "name": "BuyExecution",
                    "fields": [
                      {
                        "name": "fees",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "99",
                        "typeName": "WeightLimit",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": []
                  },
                  {
                    "name": "RefundSurplus",
                    "fields": [],
                    "index": "20",
                    "docs": []
                  },
                  {
                    "name": "SetErrorHandler",
                    "fields": [
                      {
                        "name": null,
                        "type": "232",
                        "typeName": "Xcm<Call>",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": []
                  },
                  {
                    "name": "SetAppendix",
                    "fields": [
                      {
                        "name": null,
                        "type": "232",
                        "typeName": "Xcm<Call>",
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": []
                  },
                  {
                    "name": "ClearError",
                    "fields": [],
                    "index": "23",
                    "docs": []
                  },
                  {
                    "name": "ClaimAsset",
                    "fields": [
                      {
                        "name": "assets",
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      },
                      {
                        "name": "ticket",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "24",
                    "docs": []
                  },
                  {
                    "name": "Trap",
                    "fields": [
                      {
                        "name": null,
                        "type": "10",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "25",
                    "docs": []
                  },
                  {
                    "name": "SubscribeVersion",
                    "fields": [
                      {
                        "name": "query_id",
                        "type": "10",
                        "typeName": "QueryId",
                        "docs": []
                      },
                      {
                        "name": "max_response_weight",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "26",
                    "docs": []
                  },
                  {
                    "name": "UnsubscribeVersion",
                    "fields": [],
                    "index": "27",
                    "docs": []
                  },
                  {
                    "name": "BurnAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "28",
                    "docs": []
                  },
                  {
                    "name": "ExpectAsset",
                    "fields": [
                      {
                        "name": null,
                        "type": "75",
                        "typeName": "MultiAssets",
                        "docs": []
                      }
                    ],
                    "index": "29",
                    "docs": []
                  },
                  {
                    "name": "ExpectOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "30",
                    "docs": []
                  },
                  {
                    "name": "ExpectError",
                    "fields": [
                      {
                        "name": null,
                        "type": "84",
                        "typeName": "Option<(u32, Error)>",
                        "docs": []
                      }
                    ],
                    "index": "31",
                    "docs": []
                  },
                  {
                    "name": "ExpectTransactStatus",
                    "fields": [
                      {
                        "name": null,
                        "type": "90",
                        "typeName": "MaybeErrorCode",
                        "docs": []
                      }
                    ],
                    "index": "32",
                    "docs": []
                  },
                  {
                    "name": "QueryPallet",
                    "fields": [
                      {
                        "name": "module_name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "response_info",
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      }
                    ],
                    "index": "33",
                    "docs": []
                  },
                  {
                    "name": "ExpectPallet",
                    "fields": [
                      {
                        "name": "index",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "module_name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "crate_major",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "min_crate_minor",
                        "type": "65",
                        "typeName": "u32",
                        "docs": []
                      }
                    ],
                    "index": "34",
                    "docs": []
                  },
                  {
                    "name": "ReportTransactStatus",
                    "fields": [
                      {
                        "name": null,
                        "type": "95",
                        "typeName": "QueryResponseInfo",
                        "docs": []
                      }
                    ],
                    "index": "35",
                    "docs": []
                  },
                  {
                    "name": "ClearTransactStatus",
                    "fields": [],
                    "index": "36",
                    "docs": []
                  },
                  {
                    "name": "UniversalOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "64",
                        "typeName": "Junction",
                        "docs": []
                      }
                    ],
                    "index": "37",
                    "docs": []
                  },
                  {
                    "name": "ExportMessage",
                    "fields": [
                      {
                        "name": "network",
                        "type": "67",
                        "typeName": "NetworkId",
                        "docs": []
                      },
                      {
                        "name": "destination",
                        "type": "63",
                        "typeName": "InteriorMultiLocation",
                        "docs": []
                      },
                      {
                        "name": "xcm",
                        "type": "72",
                        "typeName": "Xcm<()>",
                        "docs": []
                      }
                    ],
                    "index": "38",
                    "docs": []
                  },
                  {
                    "name": "LockAsset",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "unlocker",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "39",
                    "docs": []
                  },
                  {
                    "name": "UnlockAsset",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "target",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "40",
                    "docs": []
                  },
                  {
                    "name": "NoteUnlockable",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "41",
                    "docs": []
                  },
                  {
                    "name": "RequestUnlock",
                    "fields": [
                      {
                        "name": "asset",
                        "type": "77",
                        "typeName": "MultiAsset",
                        "docs": []
                      },
                      {
                        "name": "locker",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "42",
                    "docs": []
                  },
                  {
                    "name": "SetFeesMode",
                    "fields": [
                      {
                        "name": "jit_withdraw",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "43",
                    "docs": []
                  },
                  {
                    "name": "SetTopic",
                    "fields": [
                      {
                        "name": null,
                        "type": "1",
                        "typeName": "[u8; 32]",
                        "docs": []
                      }
                    ],
                    "index": "44",
                    "docs": []
                  },
                  {
                    "name": "ClearTopic",
                    "fields": [],
                    "index": "45",
                    "docs": []
                  },
                  {
                    "name": "AliasOrigin",
                    "fields": [
                      {
                        "name": null,
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "46",
                    "docs": []
                  },
                  {
                    "name": "UnpaidExecution",
                    "fields": [
                      {
                        "name": "weight_limit",
                        "type": "99",
                        "typeName": "WeightLimit",
                        "docs": []
                      },
                      {
                        "name": "check_origin",
                        "type": "92",
                        "typeName": "Option<MultiLocation>",
                        "docs": []
                      }
                    ],
                    "index": "47",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "235",
          "type": {
            "path": [
              "pallet_message_queue",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "reap_page",
                    "fields": [
                      {
                        "name": "message_origin",
                        "type": "116",
                        "typeName": "MessageOriginOf<T>",
                        "docs": []
                      },
                      {
                        "name": "page_index",
                        "type": "4",
                        "typeName": "PageIndex",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::reap_page`]."
                    ]
                  },
                  {
                    "name": "execute_overweight",
                    "fields": [
                      {
                        "name": "message_origin",
                        "type": "116",
                        "typeName": "MessageOriginOf<T>",
                        "docs": []
                      },
                      {
                        "name": "page",
                        "type": "4",
                        "typeName": "PageIndex",
                        "docs": []
                      },
                      {
                        "name": "index",
                        "type": "4",
                        "typeName": "T::Size",
                        "docs": []
                      },
                      {
                        "name": "weight_limit",
                        "type": "9",
                        "typeName": "Weight",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::execute_overweight`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "236",
          "type": {
            "path": [
              "pallet_assets",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              },
              {
                "name": "I",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "create",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "admin",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "min_balance",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::create`]."
                    ]
                  },
                  {
                    "name": "force_create",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "is_sufficient",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      },
                      {
                        "name": "min_balance",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::force_create`]."
                    ]
                  },
                  {
                    "name": "start_destroy",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::start_destroy`]."
                    ]
                  },
                  {
                    "name": "destroy_accounts",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::destroy_accounts`]."
                    ]
                  },
                  {
                    "name": "destroy_approvals",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": [
                      "See [`Pallet::destroy_approvals`]."
                    ]
                  },
                  {
                    "name": "finish_destroy",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": [
                      "See [`Pallet::finish_destroy`]."
                    ]
                  },
                  {
                    "name": "mint",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "beneficiary",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": [
                      "See [`Pallet::mint`]."
                    ]
                  },
                  {
                    "name": "burn",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": [
                      "See [`Pallet::burn`]."
                    ]
                  },
                  {
                    "name": "transfer",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "target",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": [
                      "See [`Pallet::transfer`]."
                    ]
                  },
                  {
                    "name": "transfer_keep_alive",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "target",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": [
                      "See [`Pallet::transfer_keep_alive`]."
                    ]
                  },
                  {
                    "name": "force_transfer",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "source",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "dest",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": [
                      "See [`Pallet::force_transfer`]."
                    ]
                  },
                  {
                    "name": "freeze",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": [
                      "See [`Pallet::freeze`]."
                    ]
                  },
                  {
                    "name": "thaw",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": [
                      "See [`Pallet::thaw`]."
                    ]
                  },
                  {
                    "name": "freeze_asset",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": [
                      "See [`Pallet::freeze_asset`]."
                    ]
                  },
                  {
                    "name": "thaw_asset",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": [
                      "See [`Pallet::thaw_asset`]."
                    ]
                  },
                  {
                    "name": "transfer_ownership",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": [
                      "See [`Pallet::transfer_ownership`]."
                    ]
                  },
                  {
                    "name": "set_team",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "issuer",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "admin",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "freezer",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": [
                      "See [`Pallet::set_team`]."
                    ]
                  },
                  {
                    "name": "set_metadata",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "symbol",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "decimals",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": [
                      "See [`Pallet::set_metadata`]."
                    ]
                  },
                  {
                    "name": "clear_metadata",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": [
                      "See [`Pallet::clear_metadata`]."
                    ]
                  },
                  {
                    "name": "force_set_metadata",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "name",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "symbol",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "decimals",
                        "type": "2",
                        "typeName": "u8",
                        "docs": []
                      },
                      {
                        "name": "is_frozen",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": [
                      "See [`Pallet::force_set_metadata`]."
                    ]
                  },
                  {
                    "name": "force_clear_metadata",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "20",
                    "docs": [
                      "See [`Pallet::force_clear_metadata`]."
                    ]
                  },
                  {
                    "name": "force_asset_status",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "issuer",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "admin",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "freezer",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "min_balance",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      },
                      {
                        "name": "is_sufficient",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      },
                      {
                        "name": "is_frozen",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": [
                      "See [`Pallet::force_asset_status`]."
                    ]
                  },
                  {
                    "name": "approve_transfer",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "delegate",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": [
                      "See [`Pallet::approve_transfer`]."
                    ]
                  },
                  {
                    "name": "cancel_approval",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "delegate",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "23",
                    "docs": [
                      "See [`Pallet::cancel_approval`]."
                    ]
                  },
                  {
                    "name": "force_cancel_approval",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "delegate",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "24",
                    "docs": [
                      "See [`Pallet::force_cancel_approval`]."
                    ]
                  },
                  {
                    "name": "transfer_approved",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "owner",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "destination",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      },
                      {
                        "name": "amount",
                        "type": "69",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "25",
                    "docs": [
                      "See [`Pallet::transfer_approved`]."
                    ]
                  },
                  {
                    "name": "touch",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      }
                    ],
                    "index": "26",
                    "docs": [
                      "See [`Pallet::touch`]."
                    ]
                  },
                  {
                    "name": "refund",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "allow_burn",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "27",
                    "docs": [
                      "See [`Pallet::refund`]."
                    ]
                  },
                  {
                    "name": "set_min_balance",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "min_balance",
                        "type": "6",
                        "typeName": "T::Balance",
                        "docs": []
                      }
                    ],
                    "index": "28",
                    "docs": [
                      "See [`Pallet::set_min_balance`]."
                    ]
                  },
                  {
                    "name": "touch_other",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "29",
                    "docs": [
                      "See [`Pallet::touch_other`]."
                    ]
                  },
                  {
                    "name": "refund_other",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "30",
                    "docs": [
                      "See [`Pallet::refund_other`]."
                    ]
                  },
                  {
                    "name": "block",
                    "fields": [
                      {
                        "name": "id",
                        "type": "40",
                        "typeName": "T::AssetIdParameter",
                        "docs": []
                      },
                      {
                        "name": "who",
                        "type": "201",
                        "typeName": "AccountIdLookupOf<T>",
                        "docs": []
                      }
                    ],
                    "index": "31",
                    "docs": [
                      "See [`Pallet::block`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "237",
          "type": {
            "path": [
              "pallet_foreign_asset_creator",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "create_foreign_asset",
                    "fields": [
                      {
                        "name": "foreign_asset",
                        "type": "62",
                        "typeName": "T::ForeignAsset",
                        "docs": []
                      },
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      },
                      {
                        "name": "admin",
                        "type": "0",
                        "typeName": "T::AccountId",
                        "docs": []
                      },
                      {
                        "name": "is_sufficient",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      },
                      {
                        "name": "min_balance",
                        "type": "6",
                        "typeName": "AssetBalance<T>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::create_foreign_asset`]."
                    ]
                  },
                  {
                    "name": "change_existing_asset_type",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      },
                      {
                        "name": "new_foreign_asset",
                        "type": "62",
                        "typeName": "T::ForeignAsset",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::change_existing_asset_type`]."
                    ]
                  },
                  {
                    "name": "remove_existing_asset_type",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::remove_existing_asset_type`]."
                    ]
                  },
                  {
                    "name": "destroy_foreign_asset",
                    "fields": [
                      {
                        "name": "asset_id",
                        "type": "40",
                        "typeName": "AssetId<T>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::destroy_foreign_asset`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "238",
          "type": {
            "path": [
              "pallet_asset_rate",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "create",
                    "fields": [
                      {
                        "name": "asset_kind",
                        "type": "40",
                        "typeName": "Box<T::AssetKind>",
                        "docs": []
                      },
                      {
                        "name": "rate",
                        "type": "121",
                        "typeName": "FixedU128",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::create`]."
                    ]
                  },
                  {
                    "name": "update",
                    "fields": [
                      {
                        "name": "asset_kind",
                        "type": "40",
                        "typeName": "Box<T::AssetKind>",
                        "docs": []
                      },
                      {
                        "name": "rate",
                        "type": "121",
                        "typeName": "FixedU128",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::update`]."
                    ]
                  },
                  {
                    "name": "remove",
                    "fields": [
                      {
                        "name": "asset_kind",
                        "type": "40",
                        "typeName": "Box<T::AssetKind>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::remove`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "239",
          "type": {
            "path": [
              "pallet_xcm_executor_utils",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "set_reserve_policy",
                    "fields": [
                      {
                        "name": "origin_multilocation",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "policy",
                        "type": "240",
                        "typeName": "TrustPolicy<T::TrustPolicyMaxAssets>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::set_reserve_policy`]."
                    ]
                  },
                  {
                    "name": "remove_reserve_policy",
                    "fields": [
                      {
                        "name": "origin_multilocation",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::remove_reserve_policy`]."
                    ]
                  },
                  {
                    "name": "set_teleport_policy",
                    "fields": [
                      {
                        "name": "origin_multilocation",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      },
                      {
                        "name": "policy",
                        "type": "240",
                        "typeName": "TrustPolicy<T::TrustPolicyMaxAssets>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::set_teleport_policy`]."
                    ]
                  },
                  {
                    "name": "remove_teleport_policy",
                    "fields": [
                      {
                        "name": "origin_multilocation",
                        "type": "62",
                        "typeName": "MultiLocation",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::remove_teleport_policy`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "240",
          "type": {
            "path": [
              "pallet_xcm_executor_utils",
              "pallet",
              "TrustPolicy"
            ],
            "params": [
              {
                "name": "MaxAssets",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "DefaultTrustPolicy",
                    "fields": [
                      {
                        "name": null,
                        "type": "241",
                        "typeName": "DefaultTrustPolicy",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AllowedAssets",
                    "fields": [
                      {
                        "name": null,
                        "type": "242",
                        "typeName": "BoundedVec<AssetId, MaxAssets>",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "241",
          "type": {
            "path": [
              "pallet_xcm_executor_utils",
              "pallet",
              "DefaultTrustPolicy"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "All",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AllNative",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Never",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "242",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "78"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "243",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "243",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "78"
              }
            },
            "docs": []
          }
        },
        {
          "id": "244",
          "type": {
            "path": [
              "pallet_root_testing",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "fill_block",
                    "fields": [
                      {
                        "name": "ratio",
                        "type": "245",
                        "typeName": "Perbill",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See `Pallet::fill_block`."
                    ]
                  },
                  {
                    "name": "trigger_defensive",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "See `Pallet::trigger_defensive`."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "245",
          "type": {
            "path": [
              "sp_arithmetic",
              "per_things",
              "Perbill"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "246",
          "type": {
            "path": [
              "pallet_anchor",
              "pallet",
              "Call"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "set_anchor",
                    "fields": [
                      {
                        "name": "key",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "raw",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "protocol",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "pre",
                        "type": "4",
                        "typeName": "BlockNumberFor<T>",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": [
                      "See [`Pallet::set_anchor`]."
                    ]
                  },
                  {
                    "name": "sell_anchor",
                    "fields": [
                      {
                        "name": "key",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      },
                      {
                        "name": "price",
                        "type": "4",
                        "typeName": "u32",
                        "docs": []
                      },
                      {
                        "name": "target",
                        "type": "201",
                        "typeName": "<T::Lookup as StaticLookup>::Source",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": [
                      "See [`Pallet::sell_anchor`]."
                    ]
                  },
                  {
                    "name": "buy_anchor",
                    "fields": [
                      {
                        "name": "key",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": [
                      "See [`Pallet::buy_anchor`]."
                    ]
                  },
                  {
                    "name": "unsell_anchor",
                    "fields": [
                      {
                        "name": "key",
                        "type": "13",
                        "typeName": "Vec<u8>",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": [
                      "See [`Pallet::unsell_anchor`]."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Contains a variant per dispatchable extrinsic that this pallet has."
            ]
          }
        },
        {
          "id": "247",
          "type": {
            "path": [
              "pallet_sudo",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "RequireSudo",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Sender must be the Sudo account."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "Error for the Sudo pallet."
            ]
          }
        },
        {
          "id": "248",
          "type": {
            "path": [
              "pallet_utility",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "TooManyCalls",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Too many calls batched."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "249",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "250",
                "6"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "250",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "251"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "252",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "251",
          "type": {
            "path": [
              "pallet_proxy",
              "ProxyDefinition"
            ],
            "params": [
              {
                "name": "AccountId",
                "type": "0"
              },
              {
                "name": "ProxyType",
                "type": "39"
              },
              {
                "name": "BlockNumber",
                "type": "4"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "delegate",
                    "type": "0",
                    "typeName": "AccountId",
                    "docs": []
                  },
                  {
                    "name": "proxy_type",
                    "type": "39",
                    "typeName": "ProxyType",
                    "docs": []
                  },
                  {
                    "name": "delay",
                    "type": "4",
                    "typeName": "BlockNumber",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "252",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "251"
              }
            },
            "docs": []
          }
        },
        {
          "id": "253",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "254",
                "6"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "254",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "255"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "256",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "255",
          "type": {
            "path": [
              "pallet_proxy",
              "Announcement"
            ],
            "params": [
              {
                "name": "AccountId",
                "type": "0"
              },
              {
                "name": "Hash",
                "type": "12"
              },
              {
                "name": "BlockNumber",
                "type": "4"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "real",
                    "type": "0",
                    "typeName": "AccountId",
                    "docs": []
                  },
                  {
                    "name": "call_hash",
                    "type": "12",
                    "typeName": "Hash",
                    "docs": []
                  },
                  {
                    "name": "height",
                    "type": "4",
                    "typeName": "BlockNumber",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "256",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "255"
              }
            },
            "docs": []
          }
        },
        {
          "id": "257",
          "type": {
            "path": [
              "pallet_proxy",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "TooMany",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "There are too many proxies registered or too many announcements pending."
                    ]
                  },
                  {
                    "name": "NotFound",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Proxy registration not found."
                    ]
                  },
                  {
                    "name": "NotProxy",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Sender is not a proxy of the account to be proxied."
                    ]
                  },
                  {
                    "name": "Unproxyable",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "A call which is incompatible with the proxy type's filter was attempted."
                    ]
                  },
                  {
                    "name": "Duplicate",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "Account is already a proxy."
                    ]
                  },
                  {
                    "name": "NoPermission",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "Call may not be made by proxy because it may escalate its privileges."
                    ]
                  },
                  {
                    "name": "Unannounced",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "Announcement, if made at all, was made too recently."
                    ]
                  },
                  {
                    "name": "NoSelfProxy",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "Cannot add self as proxy."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "258",
          "type": {
            "path": [
              "pallet_migrations",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "PreimageMissing",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Missing preimage in original democracy storage"
                    ]
                  },
                  {
                    "name": "WrongUpperBound",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Provided upper bound is too low."
                    ]
                  },
                  {
                    "name": "PreimageIsTooBig",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Preimage is larger than the new max size."
                    ]
                  },
                  {
                    "name": "PreimageAlreadyExists",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "Preimage already exists in the new storage."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "259",
          "type": {
            "path": [
              "pallet_maintenance_mode",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "AlreadyInMaintenanceMode",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The chain cannot enter maintenance mode because it is already in maintenance mode"
                    ]
                  },
                  {
                    "name": "NotInMaintenanceMode",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "The chain cannot resume normal operation because it is not in maintenance mode"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "An error that can occur while executing this pallet's extrinsics."
            ]
          }
        },
        {
          "id": "260",
          "type": {
            "path": [
              "pallet_tx_pause",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "IsPaused",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The call is paused."
                    ]
                  },
                  {
                    "name": "IsUnpaused",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "The call is unpaused."
                    ]
                  },
                  {
                    "name": "Unpausable",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The call is whitelisted and cannot be paused."
                    ]
                  },
                  {
                    "name": "NotFound",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "261",
          "type": {
            "path": [
              "bounded_collections",
              "weak_bounded_vec",
              "WeakBoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "262"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "264",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "262",
          "type": {
            "path": [
              "pallet_balances",
              "types",
              "BalanceLock"
            ],
            "params": [
              {
                "name": "Balance",
                "type": "6"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "id",
                    "type": "81",
                    "typeName": "LockIdentifier",
                    "docs": []
                  },
                  {
                    "name": "amount",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "reasons",
                    "type": "263",
                    "typeName": "Reasons",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "263",
          "type": {
            "path": [
              "pallet_balances",
              "types",
              "Reasons"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Fee",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Misc",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "All",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "264",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "262"
              }
            },
            "docs": []
          }
        },
        {
          "id": "265",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "266"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "267",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "266",
          "type": {
            "path": [
              "pallet_balances",
              "types",
              "ReserveData"
            ],
            "params": [
              {
                "name": "ReserveIdentifier",
                "type": "81"
              },
              {
                "name": "Balance",
                "type": "6"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "id",
                    "type": "81",
                    "typeName": "ReserveIdentifier",
                    "docs": []
                  },
                  {
                    "name": "amount",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "267",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "266"
              }
            },
            "docs": []
          }
        },
        {
          "id": "268",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "269"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "271",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "269",
          "type": {
            "path": [
              "pallet_balances",
              "types",
              "IdAmount"
            ],
            "params": [
              {
                "name": "Id",
                "type": "270"
              },
              {
                "name": "Balance",
                "type": "6"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "id",
                    "type": "270",
                    "typeName": "Id",
                    "docs": []
                  },
                  {
                    "name": "amount",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "270",
          "type": {
            "path": [
              "container_chain_template_simple_runtime",
              "RuntimeHoldReason"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "271",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "269"
              }
            },
            "docs": []
          }
        },
        {
          "id": "272",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "273"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "275",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "273",
          "type": {
            "path": [
              "pallet_balances",
              "types",
              "IdAmount"
            ],
            "params": [
              {
                "name": "Id",
                "type": "274"
              },
              {
                "name": "Balance",
                "type": "6"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "id",
                    "type": "274",
                    "typeName": "Id",
                    "docs": []
                  },
                  {
                    "name": "amount",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "274",
          "type": {
            "path": [
              "container_chain_template_simple_runtime",
              "RuntimeFreezeReason"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "275",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "273"
              }
            },
            "docs": []
          }
        },
        {
          "id": "276",
          "type": {
            "path": [
              "pallet_balances",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              },
              {
                "name": "I",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "VestingBalance",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Vesting balance too high to send value."
                    ]
                  },
                  {
                    "name": "LiquidityRestrictions",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Account liquidity restrictions prevent withdrawal."
                    ]
                  },
                  {
                    "name": "InsufficientBalance",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Balance too low to send value."
                    ]
                  },
                  {
                    "name": "ExistentialDeposit",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "Value too low to create account due to existential deposit."
                    ]
                  },
                  {
                    "name": "Expendability",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "Transfer/payment would kill account."
                    ]
                  },
                  {
                    "name": "ExistingVestingSchedule",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "A vesting schedule already exists for this account."
                    ]
                  },
                  {
                    "name": "DeadAccount",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "Beneficiary account must pre-exist."
                    ]
                  },
                  {
                    "name": "TooManyReserves",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "Number of named reserves exceed `MaxReserves`."
                    ]
                  },
                  {
                    "name": "TooManyHolds",
                    "fields": [],
                    "index": "8",
                    "docs": [
                      "Number of holds exceed `MaxHolds`."
                    ]
                  },
                  {
                    "name": "TooManyFreezes",
                    "fields": [],
                    "index": "9",
                    "docs": [
                      "Number of freezes exceed `MaxFreezes`."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "277",
          "type": {
            "path": [
              "pallet_transaction_payment",
              "Releases"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "V1Ancient",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "V2",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "278",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "0",
                "1"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "279",
          "type": {
            "path": [
              "pallet_multisig",
              "Multisig"
            ],
            "params": [
              {
                "name": "BlockNumber",
                "type": "4"
              },
              {
                "name": "Balance",
                "type": "6"
              },
              {
                "name": "AccountId",
                "type": "0"
              },
              {
                "name": "MaxApprovals",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "when",
                    "type": "50",
                    "typeName": "Timepoint<BlockNumber>",
                    "docs": []
                  },
                  {
                    "name": "deposit",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "depositor",
                    "type": "0",
                    "typeName": "AccountId",
                    "docs": []
                  },
                  {
                    "name": "approvals",
                    "type": "280",
                    "typeName": "BoundedVec<AccountId, MaxApprovals>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "280",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "0"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "207",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "281",
          "type": {
            "path": [
              "pallet_multisig",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "MinimumThreshold",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Threshold must be 2 or greater."
                    ]
                  },
                  {
                    "name": "AlreadyApproved",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Call is already approved by this signatory."
                    ]
                  },
                  {
                    "name": "NoApprovalsNeeded",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Call doesn't need any (more) approvals."
                    ]
                  },
                  {
                    "name": "TooFewSignatories",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "There are too few signatories in the list."
                    ]
                  },
                  {
                    "name": "TooManySignatories",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "There are too many signatories in the list."
                    ]
                  },
                  {
                    "name": "SignatoriesOutOfOrder",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "The signatories were provided out of order; they should be ordered."
                    ]
                  },
                  {
                    "name": "SenderInSignatories",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "The sender was contained in the other signatories; it shouldn't be."
                    ]
                  },
                  {
                    "name": "NotFound",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "Multisig operation not found when attempting to cancel."
                    ]
                  },
                  {
                    "name": "NotOwner",
                    "fields": [],
                    "index": "8",
                    "docs": [
                      "Only the account that originally created the multisig is able to cancel it."
                    ]
                  },
                  {
                    "name": "NoTimepoint",
                    "fields": [],
                    "index": "9",
                    "docs": [
                      "No timepoint was given, yet the multisig operation is already underway."
                    ]
                  },
                  {
                    "name": "WrongTimepoint",
                    "fields": [],
                    "index": "10",
                    "docs": [
                      "A different timepoint was given to the multisig operation that is underway."
                    ]
                  },
                  {
                    "name": "UnexpectedTimepoint",
                    "fields": [],
                    "index": "11",
                    "docs": [
                      "A timepoint was given, yet no multisig operation is underway."
                    ]
                  },
                  {
                    "name": "MaxWeightTooLow",
                    "fields": [],
                    "index": "12",
                    "docs": [
                      "The maximum weight information provided was too low."
                    ]
                  },
                  {
                    "name": "AlreadyStored",
                    "fields": [],
                    "index": "13",
                    "docs": [
                      "The data to be stored is already stored."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "282",
          "type": {
            "path": [
              "pallet_cc_authorities_noting",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "FailedReading",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The new value for a configuration parameter is invalid."
                    ]
                  },
                  {
                    "name": "FailedDecodingHeader",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "NoAuthoritiesFound",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "283",
          "type": {
            "path": [
              "pallet_author_inherent",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "AuthorAlreadySet",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Author already set in block."
                    ]
                  },
                  {
                    "name": "NoAccountId",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "No AccountId was found to be associated with this author"
                    ]
                  },
                  {
                    "name": "CannotBeAuthor",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The author in the inherent is not an eligible author."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "284",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_btree_set",
              "BoundedBTreeSet"
            ],
            "params": [
              {
                "name": "T",
                "type": "55"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "285",
                    "typeName": "BTreeSet<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "285",
          "type": {
            "path": [
              "BTreeSet"
            ],
            "params": [
              {
                "name": "T",
                "type": "55"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "286",
                    "typeName": null,
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "286",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "55"
              }
            },
            "docs": []
          }
        },
        {
          "id": "287",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "288"
              }
            },
            "docs": []
          }
        },
        {
          "id": "288",
          "type": {
            "path": [
              "cumulus_pallet_xcmp_queue",
              "OutboundChannelDetails"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "recipient",
                    "type": "55",
                    "typeName": "ParaId",
                    "docs": []
                  },
                  {
                    "name": "state",
                    "type": "289",
                    "typeName": "OutboundState",
                    "docs": []
                  },
                  {
                    "name": "signals_exist",
                    "type": "30",
                    "typeName": "bool",
                    "docs": []
                  },
                  {
                    "name": "first_index",
                    "type": "40",
                    "typeName": "u16",
                    "docs": []
                  },
                  {
                    "name": "last_index",
                    "type": "40",
                    "typeName": "u16",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "289",
          "type": {
            "path": [
              "cumulus_pallet_xcmp_queue",
              "OutboundState"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Ok",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Suspended",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "290",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "55",
                "40"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "291",
          "type": {
            "path": [
              "cumulus_pallet_xcmp_queue",
              "QueueConfigData"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "suspend_threshold",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "drop_threshold",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "resume_threshold",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "292",
          "type": {
            "path": [
              "cumulus_pallet_xcmp_queue",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "BadQueueConfig",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Setting the queue config failed since one of its values was invalid."
                    ]
                  },
                  {
                    "name": "AlreadySuspended",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "The execution is already suspended."
                    ]
                  },
                  {
                    "name": "AlreadyResumed",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The execution is already resumed."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "293",
          "type": {
            "path": [
              "cumulus_pallet_dmp_queue",
              "pallet",
              "MigrationState"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "NotStarted",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "StartedExport",
                    "fields": [
                      {
                        "name": "next_begin_used",
                        "type": "4",
                        "typeName": "PageCounter",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "CompletedExport",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "StartedOverweightExport",
                    "fields": [
                      {
                        "name": "next_overweight_index",
                        "type": "11",
                        "typeName": "u64",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "CompletedOverweightExport",
                    "fields": [],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "StartedCleanup",
                    "fields": [
                      {
                        "name": "cursor",
                        "type": "294",
                        "typeName": "Option<BoundedVec<u8, ConstU32<1024>>>",
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Completed",
                    "fields": [],
                    "index": "6",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "294",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "295"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "295",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "295",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "2"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "296",
          "type": {
            "path": [
              "pallet_xcm",
              "pallet",
              "QueryStatus"
            ],
            "params": [
              {
                "name": "BlockNumber",
                "type": "4"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Pending",
                    "fields": [
                      {
                        "name": "responder",
                        "type": "114",
                        "typeName": "VersionedMultiLocation",
                        "docs": []
                      },
                      {
                        "name": "maybe_match_querier",
                        "type": "297",
                        "typeName": "Option<VersionedMultiLocation>",
                        "docs": []
                      },
                      {
                        "name": "maybe_notify",
                        "type": "298",
                        "typeName": "Option<(u8, u8)>",
                        "docs": []
                      },
                      {
                        "name": "timeout",
                        "type": "4",
                        "typeName": "BlockNumber",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "VersionNotifier",
                    "fields": [
                      {
                        "name": "origin",
                        "type": "114",
                        "typeName": "VersionedMultiLocation",
                        "docs": []
                      },
                      {
                        "name": "is_active",
                        "type": "30",
                        "typeName": "bool",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Ready",
                    "fields": [
                      {
                        "name": "response",
                        "type": "300",
                        "typeName": "VersionedResponse",
                        "docs": []
                      },
                      {
                        "name": "at",
                        "type": "4",
                        "typeName": "BlockNumber",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "297",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "114"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "114",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "298",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "299"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "299",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "299",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "2",
                "2"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "300",
          "type": {
            "path": [
              "xcm",
              "VersionedResponse"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "V2",
                    "fields": [
                      {
                        "name": null,
                        "type": "219",
                        "typeName": "v2::Response",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "V3",
                    "fields": [
                      {
                        "name": null,
                        "type": "83",
                        "typeName": "v3::Response",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "301",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "4",
                "114"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "302",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "11",
                "9",
                "4"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "303",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "304"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "305",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "304",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "114",
                "4"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "305",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "304"
              }
            },
            "docs": []
          }
        },
        {
          "id": "306",
          "type": {
            "path": [
              "pallet_xcm",
              "pallet",
              "VersionMigrationStage"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "MigrateSupportedVersion",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "MigrateVersionNotifiers",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "NotifyCurrentTargets",
                    "fields": [
                      {
                        "name": null,
                        "type": "307",
                        "typeName": "Option<Vec<u8>>",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "MigrateAndNotifyOldTargets",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "307",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "13"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "13",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "308",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "4",
                "0",
                "309"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "309",
          "type": {
            "path": [
              "xcm",
              "VersionedAssetId"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "V3",
                    "fields": [
                      {
                        "name": null,
                        "type": "78",
                        "typeName": "v3::AssetId",
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "310",
          "type": {
            "path": [
              "pallet_xcm",
              "pallet",
              "RemoteLockedFungibleRecord"
            ],
            "params": [
              {
                "name": "ConsumerIdentifier",
                "type": "35"
              },
              {
                "name": "MaxConsumers",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "amount",
                    "type": "6",
                    "typeName": "u128",
                    "docs": []
                  },
                  {
                    "name": "owner",
                    "type": "114",
                    "typeName": "VersionedMultiLocation",
                    "docs": []
                  },
                  {
                    "name": "locker",
                    "type": "114",
                    "typeName": "VersionedMultiLocation",
                    "docs": []
                  },
                  {
                    "name": "consumers",
                    "type": "311",
                    "typeName": "BoundedVec<(ConsumerIdentifier, u128), MaxConsumers>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "311",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "312"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "313",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "312",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "35",
                "6"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "313",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "312"
              }
            },
            "docs": []
          }
        },
        {
          "id": "314",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "315"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "316",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "315",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "6",
                "114"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "316",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Sequence": {
                "type": "315"
              }
            },
            "docs": []
          }
        },
        {
          "id": "317",
          "type": {
            "path": [
              "pallet_xcm",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Unreachable",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The desired destination was unreachable, generally because there is a no way of routing",
                      "to it."
                    ]
                  },
                  {
                    "name": "SendFailure",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "There was some other issue (i.e. not to do with routing) in sending the message.",
                      "Perhaps a lack of space for buffering the message."
                    ]
                  },
                  {
                    "name": "Filtered",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The message execution fails the filter."
                    ]
                  },
                  {
                    "name": "UnweighableMessage",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "The message's weight could not be determined."
                    ]
                  },
                  {
                    "name": "DestinationNotInvertible",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "The destination `MultiLocation` provided cannot be inverted."
                    ]
                  },
                  {
                    "name": "Empty",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "The assets to be sent are empty."
                    ]
                  },
                  {
                    "name": "CannotReanchor",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "Could not re-anchor the assets to declare the fees for the destination chain."
                    ]
                  },
                  {
                    "name": "TooManyAssets",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "Too many assets have been attempted for transfer."
                    ]
                  },
                  {
                    "name": "InvalidOrigin",
                    "fields": [],
                    "index": "8",
                    "docs": [
                      "Origin is invalid for sending."
                    ]
                  },
                  {
                    "name": "BadVersion",
                    "fields": [],
                    "index": "9",
                    "docs": [
                      "The version of the `Versioned` value used is not able to be interpreted."
                    ]
                  },
                  {
                    "name": "BadLocation",
                    "fields": [],
                    "index": "10",
                    "docs": [
                      "The given location could not be used (e.g. because it cannot be expressed in the",
                      "desired version of XCM)."
                    ]
                  },
                  {
                    "name": "NoSubscription",
                    "fields": [],
                    "index": "11",
                    "docs": [
                      "The referenced subscription could not be found."
                    ]
                  },
                  {
                    "name": "AlreadySubscribed",
                    "fields": [],
                    "index": "12",
                    "docs": [
                      "The location is invalid since it already has a subscription from us."
                    ]
                  },
                  {
                    "name": "CannotCheckOutTeleport",
                    "fields": [],
                    "index": "13",
                    "docs": [
                      "Could not check-out the assets for teleportation to the destination chain."
                    ]
                  },
                  {
                    "name": "LowBalance",
                    "fields": [],
                    "index": "14",
                    "docs": [
                      "The owner does not own (all) of the asset that they wish to do the operation on."
                    ]
                  },
                  {
                    "name": "TooManyLocks",
                    "fields": [],
                    "index": "15",
                    "docs": [
                      "The asset owner has too many locks on the asset."
                    ]
                  },
                  {
                    "name": "AccountNotSovereign",
                    "fields": [],
                    "index": "16",
                    "docs": [
                      "The given account is not an identifiable sovereign account for any location."
                    ]
                  },
                  {
                    "name": "FeesNotMet",
                    "fields": [],
                    "index": "17",
                    "docs": [
                      "The operation required fees to be paid which the initiator could not meet."
                    ]
                  },
                  {
                    "name": "LockNotFound",
                    "fields": [],
                    "index": "18",
                    "docs": [
                      "A remote lock with the corresponding data could not be found."
                    ]
                  },
                  {
                    "name": "InUse",
                    "fields": [],
                    "index": "19",
                    "docs": [
                      "The unlock operation cannot succeed because there are still consumers of the lock."
                    ]
                  },
                  {
                    "name": "InvalidAssetNotConcrete",
                    "fields": [],
                    "index": "20",
                    "docs": [
                      "Invalid non-concrete asset."
                    ]
                  },
                  {
                    "name": "InvalidAssetUnknownReserve",
                    "fields": [],
                    "index": "21",
                    "docs": [
                      "Invalid asset, reserve chain could not be determined for it."
                    ]
                  },
                  {
                    "name": "InvalidAssetUnsupportedReserve",
                    "fields": [],
                    "index": "22",
                    "docs": [
                      "Invalid asset, do not support remote asset reserves with different fees reserves."
                    ]
                  },
                  {
                    "name": "TooManyReserves",
                    "fields": [],
                    "index": "23",
                    "docs": [
                      "Too many assets with different reserve locations have been attempted for transfer."
                    ]
                  },
                  {
                    "name": "LocalExecutionIncomplete",
                    "fields": [],
                    "index": "24",
                    "docs": [
                      "Local XCM execution incomplete."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "318",
          "type": {
            "path": [
              "pallet_message_queue",
              "BookState"
            ],
            "params": [
              {
                "name": "MessageOrigin",
                "type": "116"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "begin",
                    "type": "4",
                    "typeName": "PageIndex",
                    "docs": []
                  },
                  {
                    "name": "end",
                    "type": "4",
                    "typeName": "PageIndex",
                    "docs": []
                  },
                  {
                    "name": "count",
                    "type": "4",
                    "typeName": "PageIndex",
                    "docs": []
                  },
                  {
                    "name": "ready_neighbours",
                    "type": "319",
                    "typeName": "Option<Neighbours<MessageOrigin>>",
                    "docs": []
                  },
                  {
                    "name": "message_count",
                    "type": "11",
                    "typeName": "u64",
                    "docs": []
                  },
                  {
                    "name": "size",
                    "type": "11",
                    "typeName": "u64",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "319",
          "type": {
            "path": [
              "Option"
            ],
            "params": [
              {
                "name": "T",
                "type": "320"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "None",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Some",
                    "fields": [
                      {
                        "name": null,
                        "type": "320",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "320",
          "type": {
            "path": [
              "pallet_message_queue",
              "Neighbours"
            ],
            "params": [
              {
                "name": "MessageOrigin",
                "type": "116"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "prev",
                    "type": "116",
                    "typeName": "MessageOrigin",
                    "docs": []
                  },
                  {
                    "name": "next",
                    "type": "116",
                    "typeName": "MessageOrigin",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "321",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "116",
                "4"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "322",
          "type": {
            "path": [
              "pallet_message_queue",
              "Page"
            ],
            "params": [
              {
                "name": "Size",
                "type": "4"
              },
              {
                "name": "HeapSize",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "remaining",
                    "type": "4",
                    "typeName": "Size",
                    "docs": []
                  },
                  {
                    "name": "remaining_size",
                    "type": "4",
                    "typeName": "Size",
                    "docs": []
                  },
                  {
                    "name": "first_index",
                    "type": "4",
                    "typeName": "Size",
                    "docs": []
                  },
                  {
                    "name": "first",
                    "type": "4",
                    "typeName": "Size",
                    "docs": []
                  },
                  {
                    "name": "last",
                    "type": "4",
                    "typeName": "Size",
                    "docs": []
                  },
                  {
                    "name": "heap",
                    "type": "323",
                    "typeName": "BoundedVec<u8, IntoU32<HeapSize, Size>>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "323",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "2"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "324",
          "type": {
            "path": [
              "pallet_message_queue",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "NotReapable",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Page is not reapable because it has items remaining to be processed and is not old",
                      "enough."
                    ]
                  },
                  {
                    "name": "NoPage",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Page to be reaped does not exist."
                    ]
                  },
                  {
                    "name": "NoMessage",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The referenced message could not be found."
                    ]
                  },
                  {
                    "name": "AlreadyProcessed",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "The message was already processed and cannot be processed again."
                    ]
                  },
                  {
                    "name": "Queued",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "The message is queued for future execution."
                    ]
                  },
                  {
                    "name": "InsufficientWeight",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "There is temporarily not enough weight to continue servicing messages."
                    ]
                  },
                  {
                    "name": "TemporarilyUnprocessable",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "This message is temporarily unprocessable.",
                      "",
                      "Such errors are expected, but not guaranteed, to resolve themselves eventually through",
                      "retrying."
                    ]
                  },
                  {
                    "name": "QueuePaused",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "The queue is paused and no message can be executed from it.",
                      "",
                      "This can change at any time and may resolve in the future by re-trying."
                    ]
                  },
                  {
                    "name": "RecursiveDisallowed",
                    "fields": [],
                    "index": "8",
                    "docs": [
                      "Another call is in progress and needs to finish before this call can happen."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "325",
          "type": {
            "path": [
              "pallet_assets",
              "types",
              "AssetDetails"
            ],
            "params": [
              {
                "name": "Balance",
                "type": "6"
              },
              {
                "name": "AccountId",
                "type": "0"
              },
              {
                "name": "DepositBalance",
                "type": "6"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "owner",
                    "type": "0",
                    "typeName": "AccountId",
                    "docs": []
                  },
                  {
                    "name": "issuer",
                    "type": "0",
                    "typeName": "AccountId",
                    "docs": []
                  },
                  {
                    "name": "admin",
                    "type": "0",
                    "typeName": "AccountId",
                    "docs": []
                  },
                  {
                    "name": "freezer",
                    "type": "0",
                    "typeName": "AccountId",
                    "docs": []
                  },
                  {
                    "name": "supply",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "deposit",
                    "type": "6",
                    "typeName": "DepositBalance",
                    "docs": []
                  },
                  {
                    "name": "min_balance",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "is_sufficient",
                    "type": "30",
                    "typeName": "bool",
                    "docs": []
                  },
                  {
                    "name": "accounts",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "sufficients",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "approvals",
                    "type": "4",
                    "typeName": "u32",
                    "docs": []
                  },
                  {
                    "name": "status",
                    "type": "326",
                    "typeName": "AssetStatus",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "326",
          "type": {
            "path": [
              "pallet_assets",
              "types",
              "AssetStatus"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Live",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Frozen",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Destroying",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "327",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "40",
                "0"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "328",
          "type": {
            "path": [
              "pallet_assets",
              "types",
              "AssetAccount"
            ],
            "params": [
              {
                "name": "Balance",
                "type": "6"
              },
              {
                "name": "DepositBalance",
                "type": "6"
              },
              {
                "name": "Extra",
                "type": "35"
              },
              {
                "name": "AccountId",
                "type": "0"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "balance",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "status",
                    "type": "329",
                    "typeName": "AccountStatus",
                    "docs": []
                  },
                  {
                    "name": "reason",
                    "type": "330",
                    "typeName": "ExistenceReason<DepositBalance, AccountId>",
                    "docs": []
                  },
                  {
                    "name": "extra",
                    "type": "35",
                    "typeName": "Extra",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "329",
          "type": {
            "path": [
              "pallet_assets",
              "types",
              "AccountStatus"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Liquid",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Frozen",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Blocked",
                    "fields": [],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "330",
          "type": {
            "path": [
              "pallet_assets",
              "types",
              "ExistenceReason"
            ],
            "params": [
              {
                "name": "Balance",
                "type": "6"
              },
              {
                "name": "AccountId",
                "type": "0"
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Consumer",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Sufficient",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "DepositHeld",
                    "fields": [
                      {
                        "name": null,
                        "type": "6",
                        "typeName": "Balance",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "DepositRefunded",
                    "fields": [],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "DepositFrom",
                    "fields": [
                      {
                        "name": null,
                        "type": "0",
                        "typeName": "AccountId",
                        "docs": []
                      },
                      {
                        "name": null,
                        "type": "6",
                        "typeName": "Balance",
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "331",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "40",
                "0",
                "0"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "332",
          "type": {
            "path": [
              "pallet_assets",
              "types",
              "Approval"
            ],
            "params": [
              {
                "name": "Balance",
                "type": "6"
              },
              {
                "name": "DepositBalance",
                "type": "6"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "amount",
                    "type": "6",
                    "typeName": "Balance",
                    "docs": []
                  },
                  {
                    "name": "deposit",
                    "type": "6",
                    "typeName": "DepositBalance",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "333",
          "type": {
            "path": [
              "pallet_assets",
              "types",
              "AssetMetadata"
            ],
            "params": [
              {
                "name": "DepositBalance",
                "type": "6"
              },
              {
                "name": "BoundedString",
                "type": "334"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": "deposit",
                    "type": "6",
                    "typeName": "DepositBalance",
                    "docs": []
                  },
                  {
                    "name": "name",
                    "type": "334",
                    "typeName": "BoundedString",
                    "docs": []
                  },
                  {
                    "name": "symbol",
                    "type": "334",
                    "typeName": "BoundedString",
                    "docs": []
                  },
                  {
                    "name": "decimals",
                    "type": "2",
                    "typeName": "u8",
                    "docs": []
                  },
                  {
                    "name": "is_frozen",
                    "type": "30",
                    "typeName": "bool",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "334",
          "type": {
            "path": [
              "bounded_collections",
              "bounded_vec",
              "BoundedVec"
            ],
            "params": [
              {
                "name": "T",
                "type": "2"
              },
              {
                "name": "S",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": "Vec<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "335",
          "type": {
            "path": [
              "pallet_assets",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              },
              {
                "name": "I",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "BalanceLow",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Account balance must be greater than or equal to the transfer amount."
                    ]
                  },
                  {
                    "name": "NoAccount",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "The account to alter does not exist."
                    ]
                  },
                  {
                    "name": "NoPermission",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "The signing account has no permission to do the operation."
                    ]
                  },
                  {
                    "name": "Unknown",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "The given asset ID is unknown."
                    ]
                  },
                  {
                    "name": "Frozen",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "The origin account is frozen."
                    ]
                  },
                  {
                    "name": "InUse",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "The asset ID is already taken."
                    ]
                  },
                  {
                    "name": "BadWitness",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "Invalid witness data given."
                    ]
                  },
                  {
                    "name": "MinBalanceZero",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "Minimum balance should be non-zero."
                    ]
                  },
                  {
                    "name": "UnavailableConsumer",
                    "fields": [],
                    "index": "8",
                    "docs": [
                      "Unable to increment the consumer reference counters on the account. Either no provider",
                      "reference exists to allow a non-zero balance of a non-self-sufficient asset, or one",
                      "fewer then the maximum number of consumers has been reached."
                    ]
                  },
                  {
                    "name": "BadMetadata",
                    "fields": [],
                    "index": "9",
                    "docs": [
                      "Invalid metadata given."
                    ]
                  },
                  {
                    "name": "Unapproved",
                    "fields": [],
                    "index": "10",
                    "docs": [
                      "No approval exists that would allow the transfer."
                    ]
                  },
                  {
                    "name": "WouldDie",
                    "fields": [],
                    "index": "11",
                    "docs": [
                      "The source account would not survive the transfer and it needs to stay alive."
                    ]
                  },
                  {
                    "name": "AlreadyExists",
                    "fields": [],
                    "index": "12",
                    "docs": [
                      "The asset-account already exists."
                    ]
                  },
                  {
                    "name": "NoDeposit",
                    "fields": [],
                    "index": "13",
                    "docs": [
                      "The asset-account doesn't have an associated deposit."
                    ]
                  },
                  {
                    "name": "WouldBurn",
                    "fields": [],
                    "index": "14",
                    "docs": [
                      "The operation would result in funds being burned."
                    ]
                  },
                  {
                    "name": "LiveAsset",
                    "fields": [],
                    "index": "15",
                    "docs": [
                      "The asset is a live asset and is actively being used. Usually emit for operations such",
                      "as `start_destroy` which require the asset to be in a destroying state."
                    ]
                  },
                  {
                    "name": "AssetNotLive",
                    "fields": [],
                    "index": "16",
                    "docs": [
                      "The asset is not live, and likely being destroyed."
                    ]
                  },
                  {
                    "name": "IncorrectStatus",
                    "fields": [],
                    "index": "17",
                    "docs": [
                      "The asset status is not the expected status."
                    ]
                  },
                  {
                    "name": "NotFrozen",
                    "fields": [],
                    "index": "18",
                    "docs": [
                      "The asset should be frozen before the given operation."
                    ]
                  },
                  {
                    "name": "CallbackFailed",
                    "fields": [],
                    "index": "19",
                    "docs": [
                      "Callback action resulted in error"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "336",
          "type": {
            "path": [
              "pallet_foreign_asset_creator",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "AssetAlreadyExists",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "AssetDoesNotExist",
                    "fields": [],
                    "index": "1",
                    "docs": []
                  }
                ]
              }
            },
            "docs": [
              "An error that can occur while executing the mapping pallet's logic."
            ]
          }
        },
        {
          "id": "337",
          "type": {
            "path": [
              "pallet_asset_rate",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "UnknownAssetKind",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "The given asset ID is unknown."
                    ]
                  },
                  {
                    "name": "AlreadyExists",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "The given asset ID already has an assigned conversion rate and cannot be re-created."
                    ]
                  },
                  {
                    "name": "Overflow",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Overflow ocurred when calculating the inverse rate."
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "338",
          "type": {
            "path": [
              "pallet_xcm_executor_utils",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "NotValidOrigin",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "339",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "340",
                "4"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "340",
          "type": {
            "path": [
              "sp_consensus_slots",
              "Slot"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "11",
                    "typeName": "u64",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "341",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "0",
                "4"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "342",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "0",
                "4",
                "0"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "343",
          "type": {
            "path": [
              "pallet_anchor",
              "pallet",
              "Error"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "LengthMaxLimited",
                    "fields": [],
                    "index": "0",
                    "docs": [
                      "Anchor key length over load."
                    ]
                  },
                  {
                    "name": "KeyMaxLimited",
                    "fields": [],
                    "index": "1",
                    "docs": [
                      "Anchor name max length."
                    ]
                  },
                  {
                    "name": "Base64MaxLimited",
                    "fields": [],
                    "index": "2",
                    "docs": [
                      "Anchor raw data max limit."
                    ]
                  },
                  {
                    "name": "ProtocolMaxLimited",
                    "fields": [],
                    "index": "3",
                    "docs": [
                      "Anchor protocola max length"
                    ]
                  },
                  {
                    "name": "PreAnchorFailed",
                    "fields": [],
                    "index": "4",
                    "docs": [
                      "Pre number errror"
                    ]
                  },
                  {
                    "name": "PriceValueLimited",
                    "fields": [],
                    "index": "5",
                    "docs": [
                      "Anchor sell value error."
                    ]
                  },
                  {
                    "name": "AnchorExistsAlready",
                    "fields": [],
                    "index": "6",
                    "docs": [
                      "Anchor exists already, can not be created."
                    ]
                  },
                  {
                    "name": "AnchorNotExists",
                    "fields": [],
                    "index": "7",
                    "docs": [
                      "Anchor do not exist, can not change status."
                    ]
                  },
                  {
                    "name": "UnexceptDataError",
                    "fields": [],
                    "index": "8",
                    "docs": [
                      "unknown anchor owner data in storage."
                    ]
                  },
                  {
                    "name": "AnchorNotBelogToAccount",
                    "fields": [],
                    "index": "9",
                    "docs": [
                      "Anchor do not belong to the account"
                    ]
                  },
                  {
                    "name": "AnchorNotInSellList",
                    "fields": [],
                    "index": "10",
                    "docs": [
                      "Anchor is not in the sell list."
                    ]
                  },
                  {
                    "name": "InsufficientBalance",
                    "fields": [],
                    "index": "11",
                    "docs": [
                      "Not enough balance"
                    ]
                  },
                  {
                    "name": "TransferFailed",
                    "fields": [],
                    "index": "12",
                    "docs": [
                      "Transfer error."
                    ]
                  },
                  {
                    "name": "CanNotBuyYourOwnAnchor",
                    "fields": [],
                    "index": "13",
                    "docs": [
                      "User can not buy the anchor owned by himself"
                    ]
                  },
                  {
                    "name": "OnlySellToTargetBuyer",
                    "fields": [],
                    "index": "14",
                    "docs": [
                      "Anchor was set to sell to target buyer"
                    ]
                  }
                ]
              }
            },
            "docs": [
              "The `Error` enum of this pallet."
            ]
          }
        },
        {
          "id": "344",
          "type": {
            "path": [
              "sp_runtime",
              "generic",
              "unchecked_extrinsic",
              "UncheckedExtrinsic"
            ],
            "params": [
              {
                "name": "Address",
                "type": "201"
              },
              {
                "name": "Call",
                "type": "192"
              },
              {
                "name": "Signature",
                "type": "345"
              },
              {
                "name": "Extra",
                "type": "351"
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "13",
                    "typeName": null,
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "345",
          "type": {
            "path": [
              "sp_runtime",
              "MultiSignature"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Ed25519",
                    "fields": [
                      {
                        "name": null,
                        "type": "346",
                        "typeName": "ed25519::Signature",
                        "docs": []
                      }
                    ],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Sr25519",
                    "fields": [
                      {
                        "name": null,
                        "type": "348",
                        "typeName": "sr25519::Signature",
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Ecdsa",
                    "fields": [
                      {
                        "name": null,
                        "type": "349",
                        "typeName": "ecdsa::Signature",
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "346",
          "type": {
            "path": [
              "sp_core",
              "ed25519",
              "Signature"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "347",
                    "typeName": "[u8; 64]",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "347",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Array": {
                "len": "64",
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "348",
          "type": {
            "path": [
              "sp_core",
              "sr25519",
              "Signature"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "347",
                    "typeName": "[u8; 64]",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "349",
          "type": {
            "path": [
              "sp_core",
              "ecdsa",
              "Signature"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "350",
                    "typeName": "[u8; SIGNATURE_SERIALIZED_SIZE]",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "350",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Array": {
                "len": "65",
                "type": "2"
              }
            },
            "docs": []
          }
        },
        {
          "id": "351",
          "type": {
            "path": [],
            "params": [],
            "def": {
              "Tuple": [
                "352",
                "353",
                "354",
                "355",
                "356",
                "358",
                "359",
                "360"
              ]
            },
            "docs": []
          }
        },
        {
          "id": "352",
          "type": {
            "path": [
              "frame_system",
              "extensions",
              "check_non_zero_sender",
              "CheckNonZeroSender"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "353",
          "type": {
            "path": [
              "frame_system",
              "extensions",
              "check_spec_version",
              "CheckSpecVersion"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "354",
          "type": {
            "path": [
              "frame_system",
              "extensions",
              "check_tx_version",
              "CheckTxVersion"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "355",
          "type": {
            "path": [
              "frame_system",
              "extensions",
              "check_genesis",
              "CheckGenesis"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "356",
          "type": {
            "path": [
              "frame_system",
              "extensions",
              "check_mortality",
              "CheckMortality"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "357",
                    "typeName": "Era",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "357",
          "type": {
            "path": [
              "sp_runtime",
              "generic",
              "era",
              "Era"
            ],
            "params": [],
            "def": {
              "Variant": {
                "variants": [
                  {
                    "name": "Immortal",
                    "fields": [],
                    "index": "0",
                    "docs": []
                  },
                  {
                    "name": "Mortal1",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "1",
                    "docs": []
                  },
                  {
                    "name": "Mortal2",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "2",
                    "docs": []
                  },
                  {
                    "name": "Mortal3",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "3",
                    "docs": []
                  },
                  {
                    "name": "Mortal4",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "4",
                    "docs": []
                  },
                  {
                    "name": "Mortal5",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "5",
                    "docs": []
                  },
                  {
                    "name": "Mortal6",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "6",
                    "docs": []
                  },
                  {
                    "name": "Mortal7",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "7",
                    "docs": []
                  },
                  {
                    "name": "Mortal8",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "8",
                    "docs": []
                  },
                  {
                    "name": "Mortal9",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "9",
                    "docs": []
                  },
                  {
                    "name": "Mortal10",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "10",
                    "docs": []
                  },
                  {
                    "name": "Mortal11",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "11",
                    "docs": []
                  },
                  {
                    "name": "Mortal12",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "12",
                    "docs": []
                  },
                  {
                    "name": "Mortal13",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "13",
                    "docs": []
                  },
                  {
                    "name": "Mortal14",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "14",
                    "docs": []
                  },
                  {
                    "name": "Mortal15",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "15",
                    "docs": []
                  },
                  {
                    "name": "Mortal16",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "16",
                    "docs": []
                  },
                  {
                    "name": "Mortal17",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "17",
                    "docs": []
                  },
                  {
                    "name": "Mortal18",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "18",
                    "docs": []
                  },
                  {
                    "name": "Mortal19",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "19",
                    "docs": []
                  },
                  {
                    "name": "Mortal20",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "20",
                    "docs": []
                  },
                  {
                    "name": "Mortal21",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "21",
                    "docs": []
                  },
                  {
                    "name": "Mortal22",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "22",
                    "docs": []
                  },
                  {
                    "name": "Mortal23",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "23",
                    "docs": []
                  },
                  {
                    "name": "Mortal24",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "24",
                    "docs": []
                  },
                  {
                    "name": "Mortal25",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "25",
                    "docs": []
                  },
                  {
                    "name": "Mortal26",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "26",
                    "docs": []
                  },
                  {
                    "name": "Mortal27",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "27",
                    "docs": []
                  },
                  {
                    "name": "Mortal28",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "28",
                    "docs": []
                  },
                  {
                    "name": "Mortal29",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "29",
                    "docs": []
                  },
                  {
                    "name": "Mortal30",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "30",
                    "docs": []
                  },
                  {
                    "name": "Mortal31",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "31",
                    "docs": []
                  },
                  {
                    "name": "Mortal32",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "32",
                    "docs": []
                  },
                  {
                    "name": "Mortal33",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "33",
                    "docs": []
                  },
                  {
                    "name": "Mortal34",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "34",
                    "docs": []
                  },
                  {
                    "name": "Mortal35",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "35",
                    "docs": []
                  },
                  {
                    "name": "Mortal36",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "36",
                    "docs": []
                  },
                  {
                    "name": "Mortal37",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "37",
                    "docs": []
                  },
                  {
                    "name": "Mortal38",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "38",
                    "docs": []
                  },
                  {
                    "name": "Mortal39",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "39",
                    "docs": []
                  },
                  {
                    "name": "Mortal40",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "40",
                    "docs": []
                  },
                  {
                    "name": "Mortal41",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "41",
                    "docs": []
                  },
                  {
                    "name": "Mortal42",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "42",
                    "docs": []
                  },
                  {
                    "name": "Mortal43",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "43",
                    "docs": []
                  },
                  {
                    "name": "Mortal44",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "44",
                    "docs": []
                  },
                  {
                    "name": "Mortal45",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "45",
                    "docs": []
                  },
                  {
                    "name": "Mortal46",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "46",
                    "docs": []
                  },
                  {
                    "name": "Mortal47",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "47",
                    "docs": []
                  },
                  {
                    "name": "Mortal48",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "48",
                    "docs": []
                  },
                  {
                    "name": "Mortal49",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "49",
                    "docs": []
                  },
                  {
                    "name": "Mortal50",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "50",
                    "docs": []
                  },
                  {
                    "name": "Mortal51",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "51",
                    "docs": []
                  },
                  {
                    "name": "Mortal52",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "52",
                    "docs": []
                  },
                  {
                    "name": "Mortal53",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "53",
                    "docs": []
                  },
                  {
                    "name": "Mortal54",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "54",
                    "docs": []
                  },
                  {
                    "name": "Mortal55",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "55",
                    "docs": []
                  },
                  {
                    "name": "Mortal56",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "56",
                    "docs": []
                  },
                  {
                    "name": "Mortal57",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "57",
                    "docs": []
                  },
                  {
                    "name": "Mortal58",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "58",
                    "docs": []
                  },
                  {
                    "name": "Mortal59",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "59",
                    "docs": []
                  },
                  {
                    "name": "Mortal60",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "60",
                    "docs": []
                  },
                  {
                    "name": "Mortal61",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "61",
                    "docs": []
                  },
                  {
                    "name": "Mortal62",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "62",
                    "docs": []
                  },
                  {
                    "name": "Mortal63",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "63",
                    "docs": []
                  },
                  {
                    "name": "Mortal64",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "64",
                    "docs": []
                  },
                  {
                    "name": "Mortal65",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "65",
                    "docs": []
                  },
                  {
                    "name": "Mortal66",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "66",
                    "docs": []
                  },
                  {
                    "name": "Mortal67",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "67",
                    "docs": []
                  },
                  {
                    "name": "Mortal68",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "68",
                    "docs": []
                  },
                  {
                    "name": "Mortal69",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "69",
                    "docs": []
                  },
                  {
                    "name": "Mortal70",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "70",
                    "docs": []
                  },
                  {
                    "name": "Mortal71",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "71",
                    "docs": []
                  },
                  {
                    "name": "Mortal72",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "72",
                    "docs": []
                  },
                  {
                    "name": "Mortal73",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "73",
                    "docs": []
                  },
                  {
                    "name": "Mortal74",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "74",
                    "docs": []
                  },
                  {
                    "name": "Mortal75",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "75",
                    "docs": []
                  },
                  {
                    "name": "Mortal76",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "76",
                    "docs": []
                  },
                  {
                    "name": "Mortal77",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "77",
                    "docs": []
                  },
                  {
                    "name": "Mortal78",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "78",
                    "docs": []
                  },
                  {
                    "name": "Mortal79",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "79",
                    "docs": []
                  },
                  {
                    "name": "Mortal80",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "80",
                    "docs": []
                  },
                  {
                    "name": "Mortal81",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "81",
                    "docs": []
                  },
                  {
                    "name": "Mortal82",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "82",
                    "docs": []
                  },
                  {
                    "name": "Mortal83",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "83",
                    "docs": []
                  },
                  {
                    "name": "Mortal84",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "84",
                    "docs": []
                  },
                  {
                    "name": "Mortal85",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "85",
                    "docs": []
                  },
                  {
                    "name": "Mortal86",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "86",
                    "docs": []
                  },
                  {
                    "name": "Mortal87",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "87",
                    "docs": []
                  },
                  {
                    "name": "Mortal88",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "88",
                    "docs": []
                  },
                  {
                    "name": "Mortal89",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "89",
                    "docs": []
                  },
                  {
                    "name": "Mortal90",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "90",
                    "docs": []
                  },
                  {
                    "name": "Mortal91",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "91",
                    "docs": []
                  },
                  {
                    "name": "Mortal92",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "92",
                    "docs": []
                  },
                  {
                    "name": "Mortal93",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "93",
                    "docs": []
                  },
                  {
                    "name": "Mortal94",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "94",
                    "docs": []
                  },
                  {
                    "name": "Mortal95",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "95",
                    "docs": []
                  },
                  {
                    "name": "Mortal96",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "96",
                    "docs": []
                  },
                  {
                    "name": "Mortal97",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "97",
                    "docs": []
                  },
                  {
                    "name": "Mortal98",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "98",
                    "docs": []
                  },
                  {
                    "name": "Mortal99",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "99",
                    "docs": []
                  },
                  {
                    "name": "Mortal100",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "100",
                    "docs": []
                  },
                  {
                    "name": "Mortal101",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "101",
                    "docs": []
                  },
                  {
                    "name": "Mortal102",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "102",
                    "docs": []
                  },
                  {
                    "name": "Mortal103",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "103",
                    "docs": []
                  },
                  {
                    "name": "Mortal104",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "104",
                    "docs": []
                  },
                  {
                    "name": "Mortal105",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "105",
                    "docs": []
                  },
                  {
                    "name": "Mortal106",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "106",
                    "docs": []
                  },
                  {
                    "name": "Mortal107",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "107",
                    "docs": []
                  },
                  {
                    "name": "Mortal108",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "108",
                    "docs": []
                  },
                  {
                    "name": "Mortal109",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "109",
                    "docs": []
                  },
                  {
                    "name": "Mortal110",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "110",
                    "docs": []
                  },
                  {
                    "name": "Mortal111",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "111",
                    "docs": []
                  },
                  {
                    "name": "Mortal112",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "112",
                    "docs": []
                  },
                  {
                    "name": "Mortal113",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "113",
                    "docs": []
                  },
                  {
                    "name": "Mortal114",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "114",
                    "docs": []
                  },
                  {
                    "name": "Mortal115",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "115",
                    "docs": []
                  },
                  {
                    "name": "Mortal116",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "116",
                    "docs": []
                  },
                  {
                    "name": "Mortal117",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "117",
                    "docs": []
                  },
                  {
                    "name": "Mortal118",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "118",
                    "docs": []
                  },
                  {
                    "name": "Mortal119",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "119",
                    "docs": []
                  },
                  {
                    "name": "Mortal120",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "120",
                    "docs": []
                  },
                  {
                    "name": "Mortal121",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "121",
                    "docs": []
                  },
                  {
                    "name": "Mortal122",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "122",
                    "docs": []
                  },
                  {
                    "name": "Mortal123",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "123",
                    "docs": []
                  },
                  {
                    "name": "Mortal124",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "124",
                    "docs": []
                  },
                  {
                    "name": "Mortal125",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "125",
                    "docs": []
                  },
                  {
                    "name": "Mortal126",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "126",
                    "docs": []
                  },
                  {
                    "name": "Mortal127",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "127",
                    "docs": []
                  },
                  {
                    "name": "Mortal128",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "128",
                    "docs": []
                  },
                  {
                    "name": "Mortal129",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "129",
                    "docs": []
                  },
                  {
                    "name": "Mortal130",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "130",
                    "docs": []
                  },
                  {
                    "name": "Mortal131",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "131",
                    "docs": []
                  },
                  {
                    "name": "Mortal132",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "132",
                    "docs": []
                  },
                  {
                    "name": "Mortal133",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "133",
                    "docs": []
                  },
                  {
                    "name": "Mortal134",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "134",
                    "docs": []
                  },
                  {
                    "name": "Mortal135",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "135",
                    "docs": []
                  },
                  {
                    "name": "Mortal136",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "136",
                    "docs": []
                  },
                  {
                    "name": "Mortal137",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "137",
                    "docs": []
                  },
                  {
                    "name": "Mortal138",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "138",
                    "docs": []
                  },
                  {
                    "name": "Mortal139",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "139",
                    "docs": []
                  },
                  {
                    "name": "Mortal140",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "140",
                    "docs": []
                  },
                  {
                    "name": "Mortal141",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "141",
                    "docs": []
                  },
                  {
                    "name": "Mortal142",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "142",
                    "docs": []
                  },
                  {
                    "name": "Mortal143",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "143",
                    "docs": []
                  },
                  {
                    "name": "Mortal144",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "144",
                    "docs": []
                  },
                  {
                    "name": "Mortal145",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "145",
                    "docs": []
                  },
                  {
                    "name": "Mortal146",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "146",
                    "docs": []
                  },
                  {
                    "name": "Mortal147",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "147",
                    "docs": []
                  },
                  {
                    "name": "Mortal148",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "148",
                    "docs": []
                  },
                  {
                    "name": "Mortal149",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "149",
                    "docs": []
                  },
                  {
                    "name": "Mortal150",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "150",
                    "docs": []
                  },
                  {
                    "name": "Mortal151",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "151",
                    "docs": []
                  },
                  {
                    "name": "Mortal152",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "152",
                    "docs": []
                  },
                  {
                    "name": "Mortal153",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "153",
                    "docs": []
                  },
                  {
                    "name": "Mortal154",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "154",
                    "docs": []
                  },
                  {
                    "name": "Mortal155",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "155",
                    "docs": []
                  },
                  {
                    "name": "Mortal156",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "156",
                    "docs": []
                  },
                  {
                    "name": "Mortal157",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "157",
                    "docs": []
                  },
                  {
                    "name": "Mortal158",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "158",
                    "docs": []
                  },
                  {
                    "name": "Mortal159",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "159",
                    "docs": []
                  },
                  {
                    "name": "Mortal160",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "160",
                    "docs": []
                  },
                  {
                    "name": "Mortal161",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "161",
                    "docs": []
                  },
                  {
                    "name": "Mortal162",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "162",
                    "docs": []
                  },
                  {
                    "name": "Mortal163",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "163",
                    "docs": []
                  },
                  {
                    "name": "Mortal164",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "164",
                    "docs": []
                  },
                  {
                    "name": "Mortal165",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "165",
                    "docs": []
                  },
                  {
                    "name": "Mortal166",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "166",
                    "docs": []
                  },
                  {
                    "name": "Mortal167",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "167",
                    "docs": []
                  },
                  {
                    "name": "Mortal168",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "168",
                    "docs": []
                  },
                  {
                    "name": "Mortal169",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "169",
                    "docs": []
                  },
                  {
                    "name": "Mortal170",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "170",
                    "docs": []
                  },
                  {
                    "name": "Mortal171",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "171",
                    "docs": []
                  },
                  {
                    "name": "Mortal172",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "172",
                    "docs": []
                  },
                  {
                    "name": "Mortal173",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "173",
                    "docs": []
                  },
                  {
                    "name": "Mortal174",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "174",
                    "docs": []
                  },
                  {
                    "name": "Mortal175",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "175",
                    "docs": []
                  },
                  {
                    "name": "Mortal176",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "176",
                    "docs": []
                  },
                  {
                    "name": "Mortal177",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "177",
                    "docs": []
                  },
                  {
                    "name": "Mortal178",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "178",
                    "docs": []
                  },
                  {
                    "name": "Mortal179",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "179",
                    "docs": []
                  },
                  {
                    "name": "Mortal180",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "180",
                    "docs": []
                  },
                  {
                    "name": "Mortal181",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "181",
                    "docs": []
                  },
                  {
                    "name": "Mortal182",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "182",
                    "docs": []
                  },
                  {
                    "name": "Mortal183",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "183",
                    "docs": []
                  },
                  {
                    "name": "Mortal184",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "184",
                    "docs": []
                  },
                  {
                    "name": "Mortal185",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "185",
                    "docs": []
                  },
                  {
                    "name": "Mortal186",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "186",
                    "docs": []
                  },
                  {
                    "name": "Mortal187",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "187",
                    "docs": []
                  },
                  {
                    "name": "Mortal188",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "188",
                    "docs": []
                  },
                  {
                    "name": "Mortal189",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "189",
                    "docs": []
                  },
                  {
                    "name": "Mortal190",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "190",
                    "docs": []
                  },
                  {
                    "name": "Mortal191",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "191",
                    "docs": []
                  },
                  {
                    "name": "Mortal192",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "192",
                    "docs": []
                  },
                  {
                    "name": "Mortal193",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "193",
                    "docs": []
                  },
                  {
                    "name": "Mortal194",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "194",
                    "docs": []
                  },
                  {
                    "name": "Mortal195",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "195",
                    "docs": []
                  },
                  {
                    "name": "Mortal196",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "196",
                    "docs": []
                  },
                  {
                    "name": "Mortal197",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "197",
                    "docs": []
                  },
                  {
                    "name": "Mortal198",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "198",
                    "docs": []
                  },
                  {
                    "name": "Mortal199",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "199",
                    "docs": []
                  },
                  {
                    "name": "Mortal200",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "200",
                    "docs": []
                  },
                  {
                    "name": "Mortal201",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "201",
                    "docs": []
                  },
                  {
                    "name": "Mortal202",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "202",
                    "docs": []
                  },
                  {
                    "name": "Mortal203",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "203",
                    "docs": []
                  },
                  {
                    "name": "Mortal204",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "204",
                    "docs": []
                  },
                  {
                    "name": "Mortal205",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "205",
                    "docs": []
                  },
                  {
                    "name": "Mortal206",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "206",
                    "docs": []
                  },
                  {
                    "name": "Mortal207",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "207",
                    "docs": []
                  },
                  {
                    "name": "Mortal208",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "208",
                    "docs": []
                  },
                  {
                    "name": "Mortal209",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "209",
                    "docs": []
                  },
                  {
                    "name": "Mortal210",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "210",
                    "docs": []
                  },
                  {
                    "name": "Mortal211",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "211",
                    "docs": []
                  },
                  {
                    "name": "Mortal212",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "212",
                    "docs": []
                  },
                  {
                    "name": "Mortal213",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "213",
                    "docs": []
                  },
                  {
                    "name": "Mortal214",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "214",
                    "docs": []
                  },
                  {
                    "name": "Mortal215",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "215",
                    "docs": []
                  },
                  {
                    "name": "Mortal216",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "216",
                    "docs": []
                  },
                  {
                    "name": "Mortal217",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "217",
                    "docs": []
                  },
                  {
                    "name": "Mortal218",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "218",
                    "docs": []
                  },
                  {
                    "name": "Mortal219",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "219",
                    "docs": []
                  },
                  {
                    "name": "Mortal220",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "220",
                    "docs": []
                  },
                  {
                    "name": "Mortal221",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "221",
                    "docs": []
                  },
                  {
                    "name": "Mortal222",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "222",
                    "docs": []
                  },
                  {
                    "name": "Mortal223",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "223",
                    "docs": []
                  },
                  {
                    "name": "Mortal224",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "224",
                    "docs": []
                  },
                  {
                    "name": "Mortal225",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "225",
                    "docs": []
                  },
                  {
                    "name": "Mortal226",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "226",
                    "docs": []
                  },
                  {
                    "name": "Mortal227",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "227",
                    "docs": []
                  },
                  {
                    "name": "Mortal228",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "228",
                    "docs": []
                  },
                  {
                    "name": "Mortal229",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "229",
                    "docs": []
                  },
                  {
                    "name": "Mortal230",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "230",
                    "docs": []
                  },
                  {
                    "name": "Mortal231",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "231",
                    "docs": []
                  },
                  {
                    "name": "Mortal232",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "232",
                    "docs": []
                  },
                  {
                    "name": "Mortal233",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "233",
                    "docs": []
                  },
                  {
                    "name": "Mortal234",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "234",
                    "docs": []
                  },
                  {
                    "name": "Mortal235",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "235",
                    "docs": []
                  },
                  {
                    "name": "Mortal236",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "236",
                    "docs": []
                  },
                  {
                    "name": "Mortal237",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "237",
                    "docs": []
                  },
                  {
                    "name": "Mortal238",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "238",
                    "docs": []
                  },
                  {
                    "name": "Mortal239",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "239",
                    "docs": []
                  },
                  {
                    "name": "Mortal240",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "240",
                    "docs": []
                  },
                  {
                    "name": "Mortal241",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "241",
                    "docs": []
                  },
                  {
                    "name": "Mortal242",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "242",
                    "docs": []
                  },
                  {
                    "name": "Mortal243",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "243",
                    "docs": []
                  },
                  {
                    "name": "Mortal244",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "244",
                    "docs": []
                  },
                  {
                    "name": "Mortal245",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "245",
                    "docs": []
                  },
                  {
                    "name": "Mortal246",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "246",
                    "docs": []
                  },
                  {
                    "name": "Mortal247",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "247",
                    "docs": []
                  },
                  {
                    "name": "Mortal248",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "248",
                    "docs": []
                  },
                  {
                    "name": "Mortal249",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "249",
                    "docs": []
                  },
                  {
                    "name": "Mortal250",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "250",
                    "docs": []
                  },
                  {
                    "name": "Mortal251",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "251",
                    "docs": []
                  },
                  {
                    "name": "Mortal252",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "252",
                    "docs": []
                  },
                  {
                    "name": "Mortal253",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "253",
                    "docs": []
                  },
                  {
                    "name": "Mortal254",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "254",
                    "docs": []
                  },
                  {
                    "name": "Mortal255",
                    "fields": [
                      {
                        "name": null,
                        "type": "2",
                        "typeName": null,
                        "docs": []
                      }
                    ],
                    "index": "255",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "358",
          "type": {
            "path": [
              "frame_system",
              "extensions",
              "check_nonce",
              "CheckNonce"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "65",
                    "typeName": "T::Nonce",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "359",
          "type": {
            "path": [
              "frame_system",
              "extensions",
              "check_weight",
              "CheckWeight"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": []
              }
            },
            "docs": []
          }
        },
        {
          "id": "360",
          "type": {
            "path": [
              "pallet_transaction_payment",
              "ChargeTransactionPayment"
            ],
            "params": [
              {
                "name": "T",
                "type": null
              }
            ],
            "def": {
              "Composite": {
                "fields": [
                  {
                    "name": null,
                    "type": "69",
                    "typeName": "BalanceOf<T>",
                    "docs": []
                  }
                ]
              }
            },
            "docs": []
          }
        },
        {
          "id": "361",
          "type": {
            "path": [
              "container_chain_template_simple_runtime",
              "Runtime"
            ],
            "params": [],
            "def": {
              "Composite": {
                "fields": []
              }
            },
            "docs": []
          }
        }
      ]
    },
    "pallets": [
      {
        "name": "System",
        "storage": {
          "prefix": "System",
          "items": [
            {
              "name": "Account",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "0",
                  "value": "3"
                }
              },
              "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
              "docs": [
                " The full account information for a particular account ID."
              ]
            },
            {
              "name": "ExtrinsicCount",
              "modifier": "Optional",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00",
              "docs": [
                " Total extrinsics count for the current block."
              ]
            },
            {
              "name": "BlockWeight",
              "modifier": "Default",
              "type": {
                "Plain": "8"
              },
              "fallback": "0x000000000000",
              "docs": [
                " The current weight for the block."
              ]
            },
            {
              "name": "AllExtrinsicsLen",
              "modifier": "Optional",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00",
              "docs": [
                " Total length (in bytes) for all extrinsics put together, for the current block."
              ]
            },
            {
              "name": "BlockHash",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "4",
                  "value": "12"
                }
              },
              "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "docs": [
                " Map of block numbers to block hashes."
              ]
            },
            {
              "name": "ExtrinsicData",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "4",
                  "value": "13"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Extrinsics data for the current block (maps an extrinsic's index to its data)."
              ]
            },
            {
              "name": "Number",
              "modifier": "Default",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00000000",
              "docs": [
                " The current block number being processed. Set by `execute_block`."
              ]
            },
            {
              "name": "ParentHash",
              "modifier": "Default",
              "type": {
                "Plain": "12"
              },
              "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "docs": [
                " Hash of the previous block."
              ]
            },
            {
              "name": "Digest",
              "modifier": "Default",
              "type": {
                "Plain": "14"
              },
              "fallback": "0x00",
              "docs": [
                " Digest of the current block, also part of the block header."
              ]
            },
            {
              "name": "Events",
              "modifier": "Default",
              "type": {
                "Plain": "18"
              },
              "fallback": "0x00",
              "docs": [
                " Events deposited for the current block.",
                "",
                " NOTE: The item is unbound and should therefore never be read on chain.",
                " It could otherwise inflate the PoV size of a block.",
                "",
                " Events have a large in-memory size. Box the events to not go out-of-memory",
                " just in case someone still reads them from within the runtime."
              ]
            },
            {
              "name": "EventCount",
              "modifier": "Default",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00000000",
              "docs": [
                " The number of events in the `Events<T>` list."
              ]
            },
            {
              "name": "EventTopics",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "12",
                  "value": "127"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Mapping between a topic (represented by T::Hash) and a vector of indexes",
                " of events in the `<Events<T>>` list.",
                "",
                " All topic vectors have deterministic storage locations depending on the topic. This",
                " allows light-clients to leverage the changes trie storage tracking mechanism and",
                " in case of changes fetch the list of events of interest.",
                "",
                " The value has the type `(BlockNumberFor<T>, EventIndex)` because if we used only just",
                " the `EventIndex` then in case if the topic has the same contents on the next block",
                " no notification will be triggered thus the event might be lost."
              ]
            },
            {
              "name": "LastRuntimeUpgrade",
              "modifier": "Optional",
              "type": {
                "Plain": "129"
              },
              "fallback": "0x00",
              "docs": [
                " Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened."
              ]
            },
            {
              "name": "UpgradedToU32RefCount",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " True if we have upgraded so that `type RefCount` is `u32`. False (default) if not."
              ]
            },
            {
              "name": "UpgradedToTripleRefCount",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " True if we have upgraded so that AccountInfo contains three types of `RefCount`. False",
                " (default) if not."
              ]
            },
            {
              "name": "ExecutionPhase",
              "modifier": "Optional",
              "type": {
                "Plain": "125"
              },
              "fallback": "0x00",
              "docs": [
                " The execution phase of the block."
              ]
            },
            {
              "name": "AuthorizedUpgrade",
              "modifier": "Optional",
              "type": {
                "Plain": "131"
              },
              "fallback": "0x00",
              "docs": [
                " `Some` if a code upgrade has been authorized."
              ]
            }
          ]
        },
        "calls": {
          "type": "132"
        },
        "events": {
          "type": "21"
        },
        "constants": [
          {
            "name": "BlockWeights",
            "type": "136",
            "value": "0x025b1f5d00070088526a7402004001c2a0a91d000107d0c33576510200e000010700e6bd4f570200f000010000c2a0a91d000107d065ca906e0200300101070088526a7402004001010700a2941a1d02005000c2a0a91d00000000",
            "docs": [
              " Block & extrinsics weights: base values and limits."
            ]
          },
          {
            "name": "BlockLength",
            "type": "140",
            "value": "0x00003c000000500000005000",
            "docs": [
              " The maximum length of a block (in bytes)."
            ]
          },
          {
            "name": "BlockHashCount",
            "type": "4",
            "value": "0x00100000",
            "docs": [
              " Maximum number of block number to block hash mappings to keep (oldest pruned first)."
            ]
          },
          {
            "name": "DbWeight",
            "type": "142",
            "value": "0x40787d010000000000e1f50500000000",
            "docs": [
              " The weight of runtime database operations the runtime can invoke."
            ]
          },
          {
            "name": "Version",
            "type": "143",
            "value": "0x60636f6e7461696e65722d636861696e2d74656d706c61746560636f6e7461696e65722d636861696e2d74656d706c61746501000000620200000000000030df6acb689907609b0400000037e397fc7c91f5e40200000040fe3ad401f8959a06000000d2bc9897eed08f1503000000f78b278be53f454c02000000ab3c0572291feb8b01000000bc9d89904f5b923f01000000ea93e3f16f3d696202000000d0399cd053adda2b01000000fbc577b9d747efd60100000037c8bb1350a9a2a804000000d7ecf53e4977bc9b010000000100000001",
            "docs": [
              " Get the chain's current version."
            ]
          },
          {
            "name": "SS58Prefix",
            "type": "40",
            "value": "0x2a00",
            "docs": [
              " The designated SS58 prefix of this chain.",
              "",
              " This replaces the \"ss58Format\" property declared in the chain spec. Reason is",
              " that the runtime should know about the prefix in order to make use of it as",
              " an identifier of the chain."
            ]
          }
        ],
        "errors": {
          "type": "147"
        },
        "index": "0"
      },
      {
        "name": "ParachainSystem",
        "storage": {
          "prefix": "ParachainSystem",
          "items": [
            {
              "name": "UnincludedSegment",
              "modifier": "Default",
              "type": {
                "Plain": "148"
              },
              "fallback": "0x00",
              "docs": [
                " Latest included block descendants the runtime accepted. In other words, these are",
                " ancestors of the currently executing block which have not been included in the observed",
                " relay-chain state.",
                "",
                " The segment length is limited by the capacity returned from the [`ConsensusHook`] configured",
                " in the pallet."
              ]
            },
            {
              "name": "AggregatedUnincludedSegment",
              "modifier": "Optional",
              "type": {
                "Plain": "158"
              },
              "fallback": "0x00",
              "docs": [
                " Storage field that keeps track of bandwidth used by the unincluded segment along with the",
                " latest HRMP watermark. Used for limiting the acceptance of new blocks with",
                " respect to relay chain constraints."
              ]
            },
            {
              "name": "PendingValidationCode",
              "modifier": "Default",
              "type": {
                "Plain": "13"
              },
              "fallback": "0x00",
              "docs": [
                " In case of a scheduled upgrade, this storage field contains the validation code to be",
                " applied.",
                "",
                " As soon as the relay chain gives us the go-ahead signal, we will overwrite the",
                " [`:code`][sp_core::storage::well_known_keys::CODE] which will result the next block process",
                " with the new validation code. This concludes the upgrade process."
              ]
            },
            {
              "name": "NewValidationCode",
              "modifier": "Optional",
              "type": {
                "Plain": "13"
              },
              "fallback": "0x00",
              "docs": [
                " Validation code that is set by the parachain and is to be communicated to collator and",
                " consequently the relay-chain.",
                "",
                " This will be cleared in `on_initialize` of each new block if no other pallet already set",
                " the value."
              ]
            },
            {
              "name": "ValidationData",
              "modifier": "Optional",
              "type": {
                "Plain": "160"
              },
              "fallback": "0x00",
              "docs": [
                " The [`PersistedValidationData`] set for this block.",
                " This value is expected to be set only once per block and it's never stored",
                " in the trie."
              ]
            },
            {
              "name": "DidSetValidationCode",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Were the validation data set to notify the relay chain?"
              ]
            },
            {
              "name": "LastRelayChainBlockNumber",
              "modifier": "Default",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00000000",
              "docs": [
                " The relay chain block number associated with the last parachain block.",
                "",
                " This is updated in `on_finalize`."
              ]
            },
            {
              "name": "UpgradeRestrictionSignal",
              "modifier": "Default",
              "type": {
                "Plain": "162"
              },
              "fallback": "0x00",
              "docs": [
                " An option which indicates if the relay-chain restricts signalling a validation code upgrade.",
                " In other words, if this is `Some` and [`NewValidationCode`] is `Some` then the produced",
                " candidate will be invalid.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "name": "UpgradeGoAhead",
              "modifier": "Default",
              "type": {
                "Plain": "156"
              },
              "fallback": "0x00",
              "docs": [
                " Optional upgrade go-ahead signal from the relay-chain.",
                "",
                " This storage item is a mirror of the corresponding value for the current parachain from the",
                " relay-chain. This value is ephemeral which means it doesn't hit the storage. This value is",
                " set after the inherent."
              ]
            },
            {
              "name": "RelayStateProof",
              "modifier": "Optional",
              "type": {
                "Plain": "164"
              },
              "fallback": "0x00",
              "docs": [
                " The state proof for the last relay parent block.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "name": "RelevantMessagingState",
              "modifier": "Optional",
              "type": {
                "Plain": "166"
              },
              "fallback": "0x00",
              "docs": [
                " The snapshot of some state related to messaging relevant to the current parachain as per",
                " the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "name": "HostConfiguration",
              "modifier": "Optional",
              "type": {
                "Plain": "171"
              },
              "fallback": "0x00",
              "docs": [
                " The parachain host configuration that was obtained from the relay parent.",
                "",
                " This field is meant to be updated each block with the validation data inherent. Therefore,",
                " before processing of the inherent, e.g. in `on_initialize` this data may be stale.",
                "",
                " This data is also absent from the genesis."
              ]
            },
            {
              "name": "LastDmqMqcHead",
              "modifier": "Default",
              "type": {
                "Plain": "173"
              },
              "fallback": "0x0000000000000000000000000000000000000000000000000000000000000000",
              "docs": [
                " The last downward message queue chain head we have observed.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "name": "LastHrmpMqcHeads",
              "modifier": "Default",
              "type": {
                "Plain": "174"
              },
              "fallback": "0x00",
              "docs": [
                " The message queue chain heads we have observed per each channel incoming channel.",
                "",
                " This value is loaded before and saved after processing inbound downward messages carried",
                " by the system inherent."
              ]
            },
            {
              "name": "ProcessedDownwardMessages",
              "modifier": "Default",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00000000",
              "docs": [
                " Number of downward messages processed in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "name": "HrmpWatermark",
              "modifier": "Default",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00000000",
              "docs": [
                " HRMP watermark that was set in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "name": "HrmpOutboundMessages",
              "modifier": "Default",
              "type": {
                "Plain": "177"
              },
              "fallback": "0x00",
              "docs": [
                " HRMP messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "name": "UpwardMessages",
              "modifier": "Default",
              "type": {
                "Plain": "135"
              },
              "fallback": "0x00",
              "docs": [
                " Upward messages that were sent in a block.",
                "",
                " This will be cleared in `on_initialize` of each new block."
              ]
            },
            {
              "name": "PendingUpwardMessages",
              "modifier": "Default",
              "type": {
                "Plain": "135"
              },
              "fallback": "0x00",
              "docs": [
                " Upward messages that are still pending and not yet send to the relay chain."
              ]
            },
            {
              "name": "UpwardDeliveryFeeFactor",
              "modifier": "Default",
              "type": {
                "Plain": "121"
              },
              "fallback": "0x000064a7b3b6e00d0000000000000000",
              "docs": [
                " The factor to multiply the base delivery fee by for UMP."
              ]
            },
            {
              "name": "AnnouncedHrmpMessagesPerCandidate",
              "modifier": "Default",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00000000",
              "docs": [
                " The number of HRMP messages we observed in `on_initialize` and thus used that number for",
                " announcing the weight of `on_initialize` and `on_finalize`."
              ]
            },
            {
              "name": "ReservedXcmpWeightOverride",
              "modifier": "Optional",
              "type": {
                "Plain": "9"
              },
              "fallback": "0x00",
              "docs": [
                " The weight we reserve at the beginning of the block for processing XCMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "name": "ReservedDmpWeightOverride",
              "modifier": "Optional",
              "type": {
                "Plain": "9"
              },
              "fallback": "0x00",
              "docs": [
                " The weight we reserve at the beginning of the block for processing DMP messages. This",
                " overrides the amount set in the Config trait."
              ]
            },
            {
              "name": "CustomValidationHeadData",
              "modifier": "Optional",
              "type": {
                "Plain": "13"
              },
              "fallback": "0x00",
              "docs": [
                " A custom head data that should be returned as result of `validate_block`.",
                "",
                " See `Pallet::set_custom_validation_head_data` for more information."
              ]
            }
          ]
        },
        "calls": {
          "type": "179"
        },
        "events": {
          "type": "31"
        },
        "constants": [],
        "errors": {
          "type": "188"
        },
        "index": "1"
      },
      {
        "name": "Timestamp",
        "storage": {
          "prefix": "Timestamp",
          "items": [
            {
              "name": "Now",
              "modifier": "Default",
              "type": {
                "Plain": "11"
              },
              "fallback": "0x0000000000000000",
              "docs": [
                " The current time for the current block."
              ]
            },
            {
              "name": "DidUpdate",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Whether the timestamp has been updated in this block.",
                "",
                " This value is updated to `true` upon successful submission of a timestamp by a node.",
                " It is then checked at the end of each block execution in the `on_finalize` hook."
              ]
            }
          ]
        },
        "calls": {
          "type": "189"
        },
        "events": null,
        "constants": [
          {
            "name": "MinimumPeriod",
            "type": "11",
            "value": "0xb80b000000000000",
            "docs": [
              " The minimum period between blocks.",
              "",
              " Be aware that this is different to the *expected* period that the block production",
              " apparatus provides. Your chosen consensus system will generally work with this to",
              " determine a sensible block time. For example, in the Aura pallet it will be double this",
              " period on default settings."
            ]
          }
        ],
        "errors": null,
        "index": "2"
      },
      {
        "name": "ParachainInfo",
        "storage": {
          "prefix": "ParachainInfo",
          "items": [
            {
              "name": "ParachainId",
              "modifier": "Default",
              "type": {
                "Plain": "55"
              },
              "fallback": "0x64000000",
              "docs": []
            }
          ]
        },
        "calls": {
          "type": "190"
        },
        "events": null,
        "constants": [],
        "errors": null,
        "index": "3"
      },
      {
        "name": "Sudo",
        "storage": {
          "prefix": "Sudo",
          "items": [
            {
              "name": "Key",
              "modifier": "Optional",
              "type": {
                "Plain": "0"
              },
              "fallback": "0x00",
              "docs": [
                " The `AccountId` of the sudo key."
              ]
            }
          ]
        },
        "calls": {
          "type": "191"
        },
        "events": {
          "type": "33"
        },
        "constants": [],
        "errors": {
          "type": "247"
        },
        "index": "4"
      },
      {
        "name": "Utility",
        "storage": null,
        "calls": {
          "type": "193"
        },
        "events": {
          "type": "37"
        },
        "constants": [
          {
            "name": "batched_calls_limit",
            "type": "4",
            "value": "0xaa2a0000",
            "docs": [
              " The limit on the number of batched calls."
            ]
          }
        ],
        "errors": {
          "type": "248"
        },
        "index": "5"
      },
      {
        "name": "Proxy",
        "storage": {
          "prefix": "Proxy",
          "items": [
            {
              "name": "Proxies",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "0",
                  "value": "249"
                }
              },
              "fallback": "0x0000000000000000000000000000000000",
              "docs": [
                " The set of account proxies. Maps the account which has delegated to the accounts",
                " which are being delegated to, together with the amount held on deposit."
              ]
            },
            {
              "name": "Announcements",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "0",
                  "value": "253"
                }
              },
              "fallback": "0x0000000000000000000000000000000000",
              "docs": [
                " The announcements made by the proxy (key)."
              ]
            }
          ]
        },
        "calls": {
          "type": "200"
        },
        "events": {
          "type": "38"
        },
        "constants": [
          {
            "name": "ProxyDepositBase",
            "type": "6",
            "value": "0x00c0d1ee2a0900000000000000000000",
            "docs": [
              " The base amount of currency needed to reserve for creating a proxy.",
              "",
              " This is held for an additional storage item whose value size is",
              " `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes."
            ]
          },
          {
            "name": "ProxyDepositFactor",
            "type": "6",
            "value": "0x006488d54c0000000000000000000000",
            "docs": [
              " The amount of currency needed per proxy added.",
              "",
              " This is held for adding 32 bytes plus an instance of `ProxyType` more into a",
              " pre-existing storage value. Thus, when configuring `ProxyDepositFactor` one should take",
              " into account `32 + proxy_type.encode().len()` bytes of data."
            ]
          },
          {
            "name": "MaxProxies",
            "type": "4",
            "value": "0x20000000",
            "docs": [
              " The maximum amount of proxies allowed for a single account."
            ]
          },
          {
            "name": "MaxPending",
            "type": "4",
            "value": "0x20000000",
            "docs": [
              " The maximum amount of time-delayed announcements that are allowed to be pending."
            ]
          },
          {
            "name": "AnnouncementDepositBase",
            "type": "6",
            "value": "0x00c0d1ee2a0900000000000000000000",
            "docs": [
              " The base amount of currency needed to reserve for creating an announcement.",
              "",
              " This is held when a new storage item holding a `Balance` is created (typically 16",
              " bytes)."
            ]
          },
          {
            "name": "AnnouncementDepositFactor",
            "type": "6",
            "value": "0x009028539e0000000000000000000000",
            "docs": [
              " The amount of currency needed per announcement made.",
              "",
              " This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)",
              " into a pre-existing storage value."
            ]
          }
        ],
        "errors": {
          "type": "257"
        },
        "index": "6"
      },
      {
        "name": "Migrations",
        "storage": {
          "prefix": "Migrations",
          "items": [
            {
              "name": "FullyUpgraded",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " True if all required migrations have completed"
              ]
            },
            {
              "name": "MigrationState",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "13",
                  "value": "30"
                }
              },
              "fallback": "0x00",
              "docs": [
                " MigrationState tracks the progress of a migration.",
                " Maps name (Vec<u8>) -> whether or not migration has been completed (bool)"
              ]
            },
            {
              "name": "ShouldPauseXcm",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Temporary value that is set to true at the beginning of the block during which the execution",
                " of xcm messages must be paused."
              ]
            }
          ]
        },
        "calls": null,
        "events": {
          "type": "41"
        },
        "constants": [],
        "errors": {
          "type": "258"
        },
        "index": "7"
      },
      {
        "name": "MaintenanceMode",
        "storage": {
          "prefix": "MaintenanceMode",
          "items": [
            {
              "name": "MaintenanceMode",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Whether the site is in maintenance mode"
              ]
            }
          ]
        },
        "calls": {
          "type": "204"
        },
        "events": {
          "type": "42"
        },
        "constants": [],
        "errors": {
          "type": "259"
        },
        "index": "8"
      },
      {
        "name": "TxPause",
        "storage": {
          "prefix": "TxPause",
          "items": [
            {
              "name": "PausedCalls",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "44",
                  "value": "35"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The set of calls that are explicitly paused."
              ]
            }
          ]
        },
        "calls": {
          "type": "205"
        },
        "events": {
          "type": "43"
        },
        "constants": [
          {
            "name": "MaxNameLen",
            "type": "4",
            "value": "0x00010000",
            "docs": [
              " Maximum length for pallet name and call name SCALE encoded string names.",
              "",
              " TOO LONG NAMES WILL BE TREATED AS PAUSED."
            ]
          }
        ],
        "errors": {
          "type": "260"
        },
        "index": "9"
      },
      {
        "name": "Balances",
        "storage": {
          "prefix": "Balances",
          "items": [
            {
              "name": "TotalIssuance",
              "modifier": "Default",
              "type": {
                "Plain": "6"
              },
              "fallback": "0x00000000000000000000000000000000",
              "docs": [
                " The total units issued in the system."
              ]
            },
            {
              "name": "InactiveIssuance",
              "modifier": "Default",
              "type": {
                "Plain": "6"
              },
              "fallback": "0x00000000000000000000000000000000",
              "docs": [
                " The total units of outstanding deactivated balance in the system."
              ]
            },
            {
              "name": "Account",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "0",
                  "value": "5"
                }
              },
              "fallback": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000080",
              "docs": [
                " The Balances pallet example of storing the balance of an account.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "    type AccountStore = StorageMapShim<Self::Account<Runtime>, frame_system::Provider<Runtime>, AccountId, Self::AccountData<Balance>>",
                "  }",
                " ```",
                "",
                " You can also store the balance of an account in the `System` pallet.",
                "",
                " # Example",
                "",
                " ```nocompile",
                "  impl pallet_balances::Config for Runtime {",
                "   type AccountStore = System",
                "  }",
                " ```",
                "",
                " But this comes with tradeoffs, storing account balances in the system pallet stores",
                " `frame_system` data alongside the account data contrary to storing account balances in the",
                " `Balances` pallet, which uses a `StorageMap` to store balances data only.",
                " NOTE: This is only used in the case that this pallet is used to store balances."
              ]
            },
            {
              "name": "Locks",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "0",
                  "value": "261"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Any liquidity locks on some account balances.",
                " NOTE: Should only be accessed when setting, changing and freeing a lock."
              ]
            },
            {
              "name": "Reserves",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "0",
                  "value": "265"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Named reserves on some account balances."
              ]
            },
            {
              "name": "Holds",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "0",
                  "value": "268"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Holds on account balances."
              ]
            },
            {
              "name": "Freezes",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "0",
                  "value": "272"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Freeze locks on account balances."
              ]
            }
          ]
        },
        "calls": {
          "type": "206"
        },
        "events": {
          "type": "46"
        },
        "constants": [
          {
            "name": "ExistentialDeposit",
            "type": "6",
            "value": "0x00ca9a3b000000000000000000000000",
            "docs": [
              " The minimum amount required to keep an account open. MUST BE GREATER THAN ZERO!",
              "",
              " If you *really* need it to be zero, you can enable the feature `insecure_zero_ed` for",
              " this pallet. However, you do so at your own risk: this will open up a major DoS vector.",
              " In case you have multiple sources of provider references, you may also get unexpected",
              " behaviour if you set this to zero.",
              "",
              " Bottom line: Do yourself a favour and make it at least one!"
            ]
          },
          {
            "name": "MaxLocks",
            "type": "4",
            "value": "0x32000000",
            "docs": [
              " The maximum number of locks that should exist on an account.",
              " Not strictly enforced, but used for weight estimation."
            ]
          },
          {
            "name": "MaxReserves",
            "type": "4",
            "value": "0x32000000",
            "docs": [
              " The maximum number of named reserves that can exist on an account."
            ]
          },
          {
            "name": "MaxHolds",
            "type": "4",
            "value": "0x00000000",
            "docs": [
              " The maximum number of holds that can exist on an account at any time."
            ]
          },
          {
            "name": "MaxFreezes",
            "type": "4",
            "value": "0x00000000",
            "docs": [
              " The maximum number of individual freeze locks that can exist on an account at any time."
            ]
          }
        ],
        "errors": {
          "type": "276"
        },
        "index": "10"
      },
      {
        "name": "TransactionPayment",
        "storage": {
          "prefix": "TransactionPayment",
          "items": [
            {
              "name": "NextFeeMultiplier",
              "modifier": "Default",
              "type": {
                "Plain": "121"
              },
              "fallback": "0x000064a7b3b6e00d0000000000000000",
              "docs": []
            },
            {
              "name": "StorageVersion",
              "modifier": "Default",
              "type": {
                "Plain": "277"
              },
              "fallback": "0x00",
              "docs": []
            }
          ]
        },
        "calls": null,
        "events": {
          "type": "48"
        },
        "constants": [
          {
            "name": "OperationalFeeMultiplier",
            "type": "2",
            "value": "0x05",
            "docs": [
              " A fee multiplier for `Operational` extrinsics to compute \"virtual tip\" to boost their",
              " `priority`",
              "",
              " This value is multiplied by the `final_fee` to obtain a \"virtual tip\" that is later",
              " added to a tip component in regular `priority` calculations.",
              " It means that a `Normal` transaction can front-run a similarly-sized `Operational`",
              " extrinsic (with no tip), by including a tip value greater than the virtual tip.",
              "",
              " ```rust,ignore",
              " // For `Normal`",
              " let priority = priority_calc(tip);",
              "",
              " // For `Operational`",
              " let virtual_tip = (inclusion_fee + tip) * OperationalFeeMultiplier;",
              " let priority = priority_calc(tip + virtual_tip);",
              " ```",
              "",
              " Note that since we use `final_fee` the multiplier applies also to the regular `tip`",
              " sent with the transaction. So, not only does the transaction get a priority bump based",
              " on the `inclusion_fee`, but we also amplify the impact of tips applied to `Operational`",
              " transactions."
            ]
          }
        ],
        "errors": null,
        "index": "11"
      },
      {
        "name": "Multisig",
        "storage": {
          "prefix": "Multisig",
          "items": [
            {
              "name": "Multisigs",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat",
                    "Blake2_128Concat"
                  ],
                  "key": "278",
                  "value": "279"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The set of open multisig operations."
              ]
            }
          ]
        },
        "calls": {
          "type": "208"
        },
        "events": {
          "type": "49"
        },
        "constants": [
          {
            "name": "DepositBase",
            "type": "6",
            "value": "0x0040fc54190000000000000000000000",
            "docs": [
              " The base amount of currency needed to reserve for creating a multisig execution or to",
              " store a dispatch call for later.",
              "",
              " This is held for an additional storage item whose value size is",
              " `4 + sizeof((BlockNumber, Balance, AccountId))` bytes and whose key size is",
              " `32 + sizeof(AccountId)` bytes."
            ]
          },
          {
            "name": "DepositFactor",
            "type": "6",
            "value": "0x0020bcbe000000000000000000000000",
            "docs": [
              " The amount of currency needed per unit threshold when creating a multisig execution.",
              "",
              " This is held for adding 32 bytes more into a pre-existing storage value."
            ]
          },
          {
            "name": "MaxSignatories",
            "type": "4",
            "value": "0x64000000",
            "docs": [
              " The maximum amount of signatories allowed in the multisig."
            ]
          }
        ],
        "errors": {
          "type": "281"
        },
        "index": "16"
      },
      {
        "name": "AuthoritiesNoting",
        "storage": {
          "prefix": "AuthoritiesNoting",
          "items": [
            {
              "name": "OrchestratorParaId",
              "modifier": "Default",
              "type": {
                "Plain": "55"
              },
              "fallback": "0x00000000",
              "docs": []
            },
            {
              "name": "Authorities",
              "modifier": "Default",
              "type": {
                "Plain": "52"
              },
              "fallback": "0x00",
              "docs": []
            },
            {
              "name": "DidSetOrchestratorAuthorityData",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Was the containerAuthorData set?"
              ]
            }
          ]
        },
        "calls": {
          "type": "210"
        },
        "events": {
          "type": "51"
        },
        "constants": [],
        "errors": {
          "type": "282"
        },
        "index": "50"
      },
      {
        "name": "AuthorInherent",
        "storage": {
          "prefix": "AuthorInherent",
          "items": [
            {
              "name": "Author",
              "modifier": "Optional",
              "type": {
                "Plain": "53"
              },
              "fallback": "0x00",
              "docs": [
                " Author of current block."
              ]
            },
            {
              "name": "InherentIncluded",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Check if the inherent was included"
              ]
            }
          ]
        },
        "calls": {
          "type": "212"
        },
        "events": null,
        "constants": [],
        "errors": {
          "type": "283"
        },
        "index": "51"
      },
      {
        "name": "XcmpQueue",
        "storage": {
          "prefix": "XcmpQueue",
          "items": [
            {
              "name": "InboundXcmpSuspended",
              "modifier": "Default",
              "type": {
                "Plain": "284"
              },
              "fallback": "0x00",
              "docs": [
                " The suspended inbound XCMP channels. All others are not suspended.",
                "",
                " This is a `StorageValue` instead of a `StorageMap` since we expect multiple reads per block",
                " to different keys with a one byte payload. The access to `BoundedBTreeSet` will be cached",
                " within the block and therefore only included once in the proof size.",
                "",
                " NOTE: The PoV benchmarking cannot know this and will over-estimate, but the actual proof",
                " will be smaller."
              ]
            },
            {
              "name": "OutboundXcmpStatus",
              "modifier": "Default",
              "type": {
                "Plain": "287"
              },
              "fallback": "0x00",
              "docs": [
                " The non-empty XCMP channels in order of becoming non-empty, and the index of the first",
                " and last outbound message. If the two indices are equal, then it indicates an empty",
                " queue and there must be a non-`Ok` `OutboundStatus`. We assume queues grow no greater",
                " than 65535 items. Queue indices for normal messages begin at one; zero is reserved in",
                " case of the need to send a high-priority signal message this block.",
                " The bool is true if there is a signal message waiting to be sent."
              ]
            },
            {
              "name": "OutboundXcmpMessages",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat",
                    "Twox64Concat"
                  ],
                  "key": "290",
                  "value": "13"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The messages outbound in a given XCMP channel."
              ]
            },
            {
              "name": "SignalMessages",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "55",
                  "value": "13"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Any signal messages waiting to be sent."
              ]
            },
            {
              "name": "QueueConfig",
              "modifier": "Default",
              "type": {
                "Plain": "291"
              },
              "fallback": "0x200000003000000008000000",
              "docs": [
                " The configuration which controls the dynamics of the outbound queue."
              ]
            },
            {
              "name": "QueueSuspended",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Whether or not the XCMP queue is suspended from executing incoming XCMs or not."
              ]
            },
            {
              "name": "DeliveryFeeFactor",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "55",
                  "value": "121"
                }
              },
              "fallback": "0x000064a7b3b6e00d0000000000000000",
              "docs": [
                " The factor to multiply the base delivery fee by."
              ]
            }
          ]
        },
        "calls": null,
        "events": {
          "type": "56"
        },
        "constants": [
          {
            "name": "MaxInboundSuspended",
            "type": "4",
            "value": "0xe8030000",
            "docs": [
              " The maximum number of inbound XCMP channels that can be suspended simultaneously.",
              "",
              " Any further channel suspensions will fail and messages may get dropped without further",
              " notice. Choosing a high value (1000) is okay; the trade-off that is described in",
              " [`InboundXcmpSuspended`] still applies at that scale."
            ]
          }
        ],
        "errors": {
          "type": "292"
        },
        "index": "70"
      },
      {
        "name": "CumulusXcm",
        "storage": null,
        "calls": null,
        "events": {
          "type": "57"
        },
        "constants": [],
        "errors": null,
        "index": "71"
      },
      {
        "name": "DmpQueue",
        "storage": {
          "prefix": "DmpQueue",
          "items": [
            {
              "name": "MigrationStatus",
              "modifier": "Default",
              "type": {
                "Plain": "293"
              },
              "fallback": "0x00",
              "docs": [
                " The migration state of this pallet."
              ]
            }
          ]
        },
        "calls": {
          "type": "213"
        },
        "events": {
          "type": "60"
        },
        "constants": [],
        "errors": null,
        "index": "72"
      },
      {
        "name": "PolkadotXcm",
        "storage": {
          "prefix": "PolkadotXcm",
          "items": [
            {
              "name": "QueryCounter",
              "modifier": "Default",
              "type": {
                "Plain": "11"
              },
              "fallback": "0x0000000000000000",
              "docs": [
                " The latest available query index."
              ]
            },
            {
              "name": "Queries",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "11",
                  "value": "296"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The ongoing queries."
              ]
            },
            {
              "name": "AssetTraps",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Identity"
                  ],
                  "key": "12",
                  "value": "4"
                }
              },
              "fallback": "0x00000000",
              "docs": [
                " The existing asset traps.",
                "",
                " Key is the blake2 256 hash of (origin, versioned `MultiAssets`) pair. Value is the number of",
                " times this pair has been trapped (usually just 1 if it exists at all)."
              ]
            },
            {
              "name": "SafeXcmVersion",
              "modifier": "Optional",
              "type": {
                "Plain": "4"
              },
              "fallback": "0x00",
              "docs": [
                " Default version to encode XCM when latest version of destination is unknown. If `None`,",
                " then the destinations whose XCM version is unknown are considered unreachable."
              ]
            },
            {
              "name": "SupportedVersion",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat",
                    "Blake2_128Concat"
                  ],
                  "key": "301",
                  "value": "4"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The Latest versions that we know various locations support."
              ]
            },
            {
              "name": "VersionNotifiers",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat",
                    "Blake2_128Concat"
                  ],
                  "key": "301",
                  "value": "11"
                }
              },
              "fallback": "0x00",
              "docs": [
                " All locations that we have requested version notifications from."
              ]
            },
            {
              "name": "VersionNotifyTargets",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat",
                    "Blake2_128Concat"
                  ],
                  "key": "301",
                  "value": "302"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The target locations that are subscribed to our version changes, as well as the most recent",
                " of our versions we informed them of."
              ]
            },
            {
              "name": "VersionDiscoveryQueue",
              "modifier": "Default",
              "type": {
                "Plain": "303"
              },
              "fallback": "0x00",
              "docs": [
                " Destinations whose latest XCM version we would like to know. Duplicates not allowed, and",
                " the `u32` counter is the number of times that a send to the destination has been attempted,",
                " which is used as a prioritization."
              ]
            },
            {
              "name": "CurrentMigration",
              "modifier": "Optional",
              "type": {
                "Plain": "306"
              },
              "fallback": "0x00",
              "docs": [
                " The current migration's stage, if any."
              ]
            },
            {
              "name": "RemoteLockedFungibles",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat",
                    "Blake2_128Concat",
                    "Blake2_128Concat"
                  ],
                  "key": "308",
                  "value": "310"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Fungible assets which we know are locked on a remote chain."
              ]
            },
            {
              "name": "LockedFungibles",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "0",
                  "value": "314"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Fungible assets which we know are locked on this chain."
              ]
            },
            {
              "name": "XcmExecutionSuspended",
              "modifier": "Default",
              "type": {
                "Plain": "30"
              },
              "fallback": "0x00",
              "docs": [
                " Global suspension state of the XCM executor."
              ]
            }
          ]
        },
        "calls": {
          "type": "214"
        },
        "events": {
          "type": "61"
        },
        "constants": [],
        "errors": {
          "type": "317"
        },
        "index": "73"
      },
      {
        "name": "MessageQueue",
        "storage": {
          "prefix": "MessageQueue",
          "items": [
            {
              "name": "BookStateFor",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "116",
                  "value": "318"
                }
              },
              "fallback": "0x0000000000000000000000000000000000000000000000000000000000",
              "docs": [
                " The index of the first and last (non-empty) pages."
              ]
            },
            {
              "name": "ServiceHead",
              "modifier": "Optional",
              "type": {
                "Plain": "116"
              },
              "fallback": "0x00",
              "docs": [
                " The origin at which we should begin servicing."
              ]
            },
            {
              "name": "Pages",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat",
                    "Twox64Concat"
                  ],
                  "key": "321",
                  "value": "322"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The map of page indices to pages."
              ]
            }
          ]
        },
        "calls": {
          "type": "235"
        },
        "events": {
          "type": "115"
        },
        "constants": [
          {
            "name": "HeapSize",
            "type": "4",
            "value": "0x00000100",
            "docs": [
              " The size of the page; this implies the maximum message size which can be sent.",
              "",
              " A good value depends on the expected message sizes, their weights, the weight that is",
              " available for processing them and the maximal needed message size. The maximal message",
              " size is slightly lower than this as defined by [`MaxMessageLenOf`]."
            ]
          },
          {
            "name": "MaxStale",
            "type": "4",
            "value": "0x08000000",
            "docs": [
              " The maximum number of stale pages (i.e. of overweight messages) allowed before culling",
              " can happen. Once there are more stale pages than this, then historical pages may be",
              " dropped, even if they contain unprocessed overweight messages."
            ]
          },
          {
            "name": "ServiceWeight",
            "type": "139",
            "value": "0x010700a2941a1d02005000",
            "docs": [
              " The amount of weight (if any) which should be provided to the message queue for",
              " servicing enqueued items.",
              "",
              " This may be legitimately `None` in the case that you will call",
              " `ServiceQueues::service_queues` manually."
            ]
          }
        ],
        "errors": {
          "type": "324"
        },
        "index": "74"
      },
      {
        "name": "ForeignAssets",
        "storage": {
          "prefix": "ForeignAssets",
          "items": [
            {
              "name": "Asset",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "40",
                  "value": "325"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Details of an asset."
              ]
            },
            {
              "name": "Account",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat",
                    "Blake2_128Concat"
                  ],
                  "key": "327",
                  "value": "328"
                }
              },
              "fallback": "0x00",
              "docs": [
                " The holdings of a specific account for a specific asset."
              ]
            },
            {
              "name": "Approvals",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat",
                    "Blake2_128Concat",
                    "Blake2_128Concat"
                  ],
                  "key": "331",
                  "value": "332"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Approved balance transfers. First balance is the amount approved for transfer. Second",
                " is the amount of `T::Currency` reserved for storing this.",
                " First key is the asset ID, second key is the owner and third key is the delegate."
              ]
            },
            {
              "name": "Metadata",
              "modifier": "Default",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "40",
                  "value": "333"
                }
              },
              "fallback": "0x0000000000000000000000000000000000000000",
              "docs": [
                " Metadata of an asset."
              ]
            }
          ]
        },
        "calls": {
          "type": "236"
        },
        "events": {
          "type": "118"
        },
        "constants": [
          {
            "name": "RemoveItemsLimit",
            "type": "4",
            "value": "0xe8030000",
            "docs": [
              " Max number of items to destroy per `destroy_accounts` and `destroy_approvals` call.",
              "",
              " Must be configured to result in a weight that makes each call fit in a block."
            ]
          },
          {
            "name": "AssetDeposit",
            "type": "6",
            "value": "0x00000000000000000000000000000000",
            "docs": [
              " The basic amount of funds that must be reserved for an asset."
            ]
          },
          {
            "name": "AssetAccountDeposit",
            "type": "6",
            "value": "0x00000000000000000000000000000000",
            "docs": [
              " The amount of funds that must be reserved for a non-provider asset account to be",
              " maintained."
            ]
          },
          {
            "name": "MetadataDepositBase",
            "type": "6",
            "value": "0x00000000000000000000000000000000",
            "docs": [
              " The basic amount of funds that must be reserved when adding metadata to your asset."
            ]
          },
          {
            "name": "MetadataDepositPerByte",
            "type": "6",
            "value": "0x00000000000000000000000000000000",
            "docs": [
              " The additional funds that must be reserved for the number of bytes you store in your",
              " metadata."
            ]
          },
          {
            "name": "ApprovalDeposit",
            "type": "6",
            "value": "0x00000000000000000000000000000000",
            "docs": [
              " The amount of funds that must be reserved when creating a new approval."
            ]
          },
          {
            "name": "StringLimit",
            "type": "4",
            "value": "0x32000000",
            "docs": [
              " The maximum length of a name or symbol stored on-chain."
            ]
          }
        ],
        "errors": {
          "type": "335"
        },
        "index": "75"
      },
      {
        "name": "ForeignAssetsCreator",
        "storage": {
          "prefix": "ForeignAssetsCreator",
          "items": [
            {
              "name": "AssetIdToForeignAsset",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "40",
                  "value": "62"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Mapping from an asset id to a Foreign asset type.",
                " This is mostly used when receiving transaction specifying an asset directly,",
                " like transferring an asset from this chain to another."
              ]
            },
            {
              "name": "ForeignAssetToAssetId",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "62",
                  "value": "40"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Reverse mapping of AssetIdToForeignAsset. Mapping from a foreign asset to an asset id.",
                " This is mostly used when receiving a multilocation XCM message to retrieve",
                " the corresponding asset in which tokens should me minted."
              ]
            }
          ]
        },
        "calls": {
          "type": "237"
        },
        "events": {
          "type": "119"
        },
        "constants": [],
        "errors": {
          "type": "336"
        },
        "index": "76"
      },
      {
        "name": "AssetRate",
        "storage": {
          "prefix": "AssetRate",
          "items": [
            {
              "name": "ConversionRateToNative",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "40",
                  "value": "121"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Maps an asset to its fixed point representation in the native balance.",
                "",
                " E.g. `native_amount = asset_amount * ConversionRateToNative::<T>::get(asset_kind)`"
              ]
            }
          ]
        },
        "calls": {
          "type": "238"
        },
        "events": {
          "type": "120"
        },
        "constants": [],
        "errors": {
          "type": "337"
        },
        "index": "77"
      },
      {
        "name": "XcmExecutorUtils",
        "storage": {
          "prefix": "XcmExecutorUtils",
          "items": [
            {
              "name": "ReservePolicy",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "62",
                  "value": "240"
                }
              },
              "fallback": "0x00",
              "docs": []
            },
            {
              "name": "TeleportPolicy",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Blake2_128Concat"
                  ],
                  "key": "62",
                  "value": "240"
                }
              },
              "fallback": "0x00",
              "docs": []
            }
          ]
        },
        "calls": {
          "type": "239"
        },
        "events": {
          "type": "122"
        },
        "constants": [],
        "errors": {
          "type": "338"
        },
        "index": "78"
      },
      {
        "name": "RootTesting",
        "storage": null,
        "calls": {
          "type": "244"
        },
        "events": {
          "type": "123"
        },
        "constants": [],
        "errors": null,
        "index": "100"
      },
      {
        "name": "AsyncBacking",
        "storage": {
          "prefix": "AsyncBacking",
          "items": [
            {
              "name": "SlotInfo",
              "modifier": "Optional",
              "type": {
                "Plain": "339"
              },
              "fallback": "0x00",
              "docs": [
                " First tuple element is the highest slot that has been seen in the history of this chain.",
                " Second tuple element is the number of authored blocks so far.",
                " This is a strictly-increasing value if T::AllowMultipleBlocksPerSlot = false."
              ]
            }
          ]
        },
        "calls": null,
        "events": null,
        "constants": [
          {
            "name": "ExpectedBlockTime",
            "type": "11",
            "value": "0x7017000000000000",
            "docs": [
              " Purely informative, but used by mocking tools like chospticks to allow knowing how to mock",
              " blocks"
            ]
          }
        ],
        "errors": null,
        "index": "110"
      },
      {
        "name": "Anchor",
        "storage": {
          "prefix": "Anchor",
          "items": [
            {
              "name": "AnchorOwner",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "13",
                  "value": "341"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Hashmap to record anchor status, Anchor => ( Owner, last block )"
              ]
            },
            {
              "name": "SellList",
              "modifier": "Optional",
              "type": {
                "Map": {
                  "hashers": [
                    "Twox64Concat"
                  ],
                  "key": "13",
                  "value": "342"
                }
              },
              "fallback": "0x00",
              "docs": [
                " Selling anchor status, Anchor => ( Owner, Price, Target customer )"
              ]
            }
          ]
        },
        "calls": {
          "type": "246"
        },
        "events": {
          "type": "124"
        },
        "constants": [],
        "errors": {
          "type": "343"
        },
        "index": "111"
      }
    ],
    "extrinsic": {
      "version": "4",
      "addressType": "201",
      "callType": "192",
      "signatureType": "345",
      "extraType": "351",
      "signedExtensions": [
        {
          "identifier": "CheckNonZeroSender",
          "type": "352",
          "additionalSigned": "35"
        },
        {
          "identifier": "CheckSpecVersion",
          "type": "353",
          "additionalSigned": "4"
        },
        {
          "identifier": "CheckTxVersion",
          "type": "354",
          "additionalSigned": "4"
        },
        {
          "identifier": "CheckGenesis",
          "type": "355",
          "additionalSigned": "12"
        },
        {
          "identifier": "CheckMortality",
          "type": "356",
          "additionalSigned": "12"
        },
        {
          "identifier": "CheckNonce",
          "type": "358",
          "additionalSigned": "35"
        },
        {
          "identifier": "CheckWeight",
          "type": "359",
          "additionalSigned": "35"
        },
        {
          "identifier": "ChargeTransactionPayment",
          "type": "360",
          "additionalSigned": "35"
        }
      ]
    },
    "type": "361",
    "apis": [],
    "outerEnums": {
      "callType": "192",
      "eventType": "20",
      "errorType": "0"
    },
    "custom": {
      "map": {}
    }
  }
  
  